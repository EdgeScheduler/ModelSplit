def @main(%vgg0_conv1_weight: Tensor[(64, 64, 3, 3), float32], %data: Tensor[(1, 3, 224, 224), float32], %vgg0_conv1_bias: Tensor[(64), float32], %vgg0_conv0_bias: Tensor[(64), float32], %vgg0_conv0_weight: Tensor[(64, 3, 3, 3), float32] {
  %0 = nn.conv2d(%data, %vgg0_conv0_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  %1 = nn.bias_add(%0, %vgg0_conv0_bias) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  %2 = nn.relu(%1) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  %3 = nn.conv2d(%2, %vgg0_conv1_weight, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  %4 = nn.bias_add(%3, %vgg0_conv1_bias) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  %5 = nn.relu(%4) /* ty=Tensor[(1, 64, 224, 224), float32] */;
  nn.max_pool2d(%5, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0]) /* ty=Tensor[(1, 64, 112, 112), float32] */;
}