import tvmfrom tvm import relay, IRModuleimport numpy as npdef SqueezeNetModule_2():    fire6_expand1x1_b_0 = relay.var("fire6/expand1x1_b_0", shape=(192, ), dtype="float32")    fire8_squeeze1x1_b_0 = relay.var("fire8/squeeze1x1_b_0", shape=(64, ), dtype="float32")    fire6_squeeze1x1_w_0 = relay.var("fire6/squeeze1x1_w_0", shape=(48, 256, 1, 1), dtype="float32")    fire8_squeeze1x1_w_0 = relay.var("fire8/squeeze1x1_w_0", shape=(64, 384, 1, 1), dtype="float32")    fire7_expand3x3_b_0 = relay.var("fire7/expand3x3_b_0", shape=(192, ), dtype="float32")    fire7_expand3x3_w_0 = relay.var("fire7/expand3x3_w_0", shape=(192, 48, 3, 3), dtype="float32")    fire7_expand1x1_w_0 = relay.var("fire7/expand1x1_w_0", shape=(192, 48, 1, 1), dtype="float32")    call_49 = relay.var("call_49", shape=(1, 256, 13, 13), dtype="float32")    fire6_expand1x1_w_0 = relay.var("fire6/expand1x1_w_0", shape=(192, 48, 1, 1), dtype="float32")    fire7_expand1x1_b_0 = relay.var("fire7/expand1x1_b_0", shape=(192, ), dtype="float32")    fire6_expand3x3_b_0 = relay.var("fire6/expand3x3_b_0", shape=(192, ), dtype="float32")    fire7_squeeze1x1_b_0 = relay.var("fire7/squeeze1x1_b_0", shape=(48, ), dtype="float32")    fire6_expand3x3_w_0 = relay.var("fire6/expand3x3_w_0", shape=(192, 48, 3, 3), dtype="float32")    fire7_squeeze1x1_w_0 = relay.var("fire7/squeeze1x1_w_0", shape=(48, 384, 1, 1), dtype="float32")    fire6_squeeze1x1_b_0 = relay.var("fire6/squeeze1x1_b_0", shape=(48, ), dtype="float32")    call_50 = relay.nn.conv2d(call_49, fire6_squeeze1x1_w_0, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1])
    call_51 = relay.nn.bias_add(call_50, fire6_squeeze1x1_b_0)
    call_52 = relay.nn.relu(call_51)
    call_53 = relay.nn.conv2d(call_52, fire6_expand1x1_w_0, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1])
    call_54 = relay.nn.bias_add(call_53, fire6_expand1x1_b_0)
    call_55 = relay.nn.conv2d(call_52, fire6_expand3x3_w_0, padding=[1, 1, 1, 1], channels=192, kernel_size=[3, 3])
    call_56 = relay.nn.bias_add(call_55, fire6_expand3x3_b_0)
    call_57 = relay.nn.relu(call_54)
    call_58 = relay.nn.relu(call_56)
    call_60 = relay.concatenate(relay.Tuple([call_57, call_58]), axis=1)
    call_61 = relay.nn.conv2d(call_60, fire7_squeeze1x1_w_0, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1])
    call_62 = relay.nn.bias_add(call_61, fire7_squeeze1x1_b_0)
    call_63 = relay.nn.relu(call_62)
    call_64 = relay.nn.conv2d(call_63, fire7_expand1x1_w_0, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1])
    call_65 = relay.nn.bias_add(call_64, fire7_expand1x1_b_0)
    call_66 = relay.nn.conv2d(call_63, fire7_expand3x3_w_0, padding=[1, 1, 1, 1], channels=192, kernel_size=[3, 3])
    call_67 = relay.nn.bias_add(call_66, fire7_expand3x3_b_0)
    call_68 = relay.nn.relu(call_65)
    call_69 = relay.nn.relu(call_67)
    call_71 = relay.concatenate(relay.Tuple([call_68, call_69]), axis=1)
    call_72 = relay.nn.conv2d(call_71, fire8_squeeze1x1_w_0, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1])
    call_output0 = relay.nn.bias_add(call_72, fire8_squeeze1x1_b_0)
    return call_output0