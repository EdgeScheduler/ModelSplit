def @main(%resnetv24_stage4_batchnorm8_gamma: Tensor[(512), float32], %resnetv24_stage4_conv1_weight: Tensor[(512, 512, 3, 3), float32], %resnetv24_stage4_batchnorm4_beta: Tensor[(512), float32], %resnetv24_stage4_batchnorm8_running_mean: Tensor[(512), float32], %resnetv24_stage4_batchnorm4_gamma: Tensor[(512), float32], %call_179: (Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]), %resnetv24_stage4_batchnorm1_running_var: Tensor[(512), float32], %resnetv24_stage4_batchnorm6_running_var: Tensor[(2048), float32], %resnetv24_stage4_batchnorm6_gamma: Tensor[(2048), float32], %resnetv24_stage4_batchnorm3_beta: Tensor[(2048), float32], %resnetv24_stage4_batchnorm5_gamma: Tensor[(512), float32], %resnetv24_stage4_conv4_weight: Tensor[(512, 2048, 1, 1), float32], %resnetv24_stage4_batchnorm3_gamma: Tensor[(2048), float32], %resnetv24_stage4_conv5_weight: Tensor[(512, 512, 3, 3), float32], %resnetv24_stage4_batchnorm8_running_var: Tensor[(512), float32], %resnetv24_stage4_batchnorm5_beta: Tensor[(512), float32], %resnetv24_stage4_batchnorm1_beta: Tensor[(512), float32], %resnetv24_stage4_conv0_weight: Tensor[(512, 1024, 1, 1), float32], %resnetv24_stage4_batchnorm2_running_mean: Tensor[(512), float32], %resnetv24_stage4_batchnorm2_beta: Tensor[(512), float32], %resnetv24_stage4_conv6_weight: Tensor[(2048, 512, 1, 1), float32], %resnetv24_stage4_conv8_weight: Tensor[(512, 512, 3, 3), float32], %resnetv24_stage4_conv2_weight: Tensor[(2048, 512, 1, 1), float32], %resnetv24_stage4_batchnorm2_gamma: Tensor[(512), float32], %resnetv24_stage4_batchnorm7_beta: Tensor[(512), float32], %resnetv24_stage4_conv9_weight: Tensor[(2048, 512, 1, 1), float32], %resnetv24_stage4_batchnorm7_running_mean: Tensor[(512), float32], %resnetv24_stage4_batchnorm4_running_var: Tensor[(512), float32], %resnetv24_stage4_batchnorm4_running_mean: Tensor[(512), float32], %resnetv24_stage4_conv3_weight: Tensor[(2048, 1024, 1, 1), float32], %resnetv24_stage4_batchnorm5_running_mean: Tensor[(512), float32], %resnetv24_stage4_batchnorm3_running_var: Tensor[(2048), float32], %resnetv24_stage4_batchnorm5_running_var: Tensor[(512), float32], %resnetv24_stage4_batchnorm1_gamma: Tensor[(512), float32], %resnetv24_stage4_conv7_weight: Tensor[(512, 2048, 1, 1), float32], %resnetv24_stage4_batchnorm8_beta: Tensor[(512), float32], %resnetv24_stage4_batchnorm2_running_var: Tensor[(512), float32], %resnetv24_stage4_batchnorm6_running_mean: Tensor[(2048), float32], %resnetv24_stage4_batchnorm1_running_mean: Tensor[(512), float32], %resnetv24_stage4_batchnorm6_beta: Tensor[(2048), float32], %resnetv24_stage4_batchnorm7_gamma: Tensor[(512), float32], %resnetv24_stage4_batchnorm3_running_mean: Tensor[(2048), float32], %resnetv24_stage4_batchnorm7_running_var: Tensor[(512), float32] {
  %180 = %179.0;
  %181 = nn.relu(%180) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %182 = nn.conv2d(%181, %resnetv24_stage4_conv0_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %183 = nn.batch_norm(%182, %resnetv24_stage4_batchnorm1_gamma, %resnetv24_stage4_batchnorm1_beta, %resnetv24_stage4_batchnorm1_running_mean, %resnetv24_stage4_batchnorm1_running_var) /* ty=(Tensor[(1, 512, 14, 14), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %184 = %183.0;
  %185 = nn.relu(%184) /* ty=Tensor[(1, 512, 14, 14), float32] */;
  %186 = nn.conv2d(%185, %resnetv24_stage4_conv1_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %187 = nn.batch_norm(%186, %resnetv24_stage4_batchnorm2_gamma, %resnetv24_stage4_batchnorm2_beta, %resnetv24_stage4_batchnorm2_running_mean, %resnetv24_stage4_batchnorm2_running_var) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %188 = %187.0;
  %189 = nn.relu(%188) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %190 = nn.conv2d(%189, %resnetv24_stage4_conv2_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %191 = nn.conv2d(%181, %resnetv24_stage4_conv3_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %192 = add(%190, %191) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %193 = nn.batch_norm(%192, %resnetv24_stage4_batchnorm3_gamma, %resnetv24_stage4_batchnorm3_beta, %resnetv24_stage4_batchnorm3_running_mean, %resnetv24_stage4_batchnorm3_running_var) /* ty=(Tensor[(1, 2048, 7, 7), float32], Tensor[(2048), float32], Tensor[(2048), float32]) */;
  %194 = %193.0;
  %195 = nn.relu(%194) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %196 = nn.conv2d(%195, %resnetv24_stage4_conv4_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %197 = nn.batch_norm(%196, %resnetv24_stage4_batchnorm4_gamma, %resnetv24_stage4_batchnorm4_beta, %resnetv24_stage4_batchnorm4_running_mean, %resnetv24_stage4_batchnorm4_running_var) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %198 = %197.0;
  %199 = nn.relu(%198) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %200 = nn.conv2d(%199, %resnetv24_stage4_conv5_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %201 = nn.batch_norm(%200, %resnetv24_stage4_batchnorm5_gamma, %resnetv24_stage4_batchnorm5_beta, %resnetv24_stage4_batchnorm5_running_mean, %resnetv24_stage4_batchnorm5_running_var) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %202 = %201.0;
  %203 = nn.relu(%202) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %204 = nn.conv2d(%203, %resnetv24_stage4_conv6_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %205 = add(%204, %192) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %206 = nn.batch_norm(%205, %resnetv24_stage4_batchnorm6_gamma, %resnetv24_stage4_batchnorm6_beta, %resnetv24_stage4_batchnorm6_running_mean, %resnetv24_stage4_batchnorm6_running_var) /* ty=(Tensor[(1, 2048, 7, 7), float32], Tensor[(2048), float32], Tensor[(2048), float32]) */;
  %207 = %206.0;
  %208 = nn.relu(%207) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  %209 = nn.conv2d(%208, %resnetv24_stage4_conv7_weight, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %210 = nn.batch_norm(%209, %resnetv24_stage4_batchnorm7_gamma, %resnetv24_stage4_batchnorm7_beta, %resnetv24_stage4_batchnorm7_running_mean, %resnetv24_stage4_batchnorm7_running_var) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %211 = %210.0;
  %212 = nn.relu(%211) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %213 = nn.conv2d(%212, %resnetv24_stage4_conv8_weight, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %214 = nn.batch_norm(%213, %resnetv24_stage4_batchnorm8_gamma, %resnetv24_stage4_batchnorm8_beta, %resnetv24_stage4_batchnorm8_running_mean, %resnetv24_stage4_batchnorm8_running_var) /* ty=(Tensor[(1, 512, 7, 7), float32], Tensor[(512), float32], Tensor[(512), float32]) */;
  %215 = %214.0;
  %216 = nn.relu(%215) /* ty=Tensor[(1, 512, 7, 7), float32] */;
  %217 = nn.conv2d(%216, %resnetv24_stage4_conv9_weight, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
  add(%217, %205) /* ty=Tensor[(1, 2048, 7, 7), float32] */;
}