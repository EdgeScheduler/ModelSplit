<<<<<<< HEAD
def @main(%resnetv24_stage3_conv11_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm5_gamma: Tensor[(256), float32], %resnetv24_stage3_conv4_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm10_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm15_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm6_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm6_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm7_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm9_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm4_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm8_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm3_running_var: Tensor[(1024), float32], %resnetv24_stage3_conv13_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm1_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm12_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm15_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm15_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm8_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm3_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm11_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm13_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm1_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm11_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm1_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm14_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm1_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm6_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm17_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm7_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm16_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm14_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm4_running_mean: Tensor[(256), float32], %call_100: (Tensor[(1, 512, 28, 28), float32], Tensor[(512), float32], Tensor[(512), float32]), %resnetv24_stage3_batchnorm3_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm16_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm3_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm9_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm5_running_mean: Tensor[(256), float32], %resnetv24_stage3_conv5_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_conv12_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_conv14_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_conv2_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm9_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm12_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm5_beta: Tensor[(256), float32], %resnetv24_stage3_conv18_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm16_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm4_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm8_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm10_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm6_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm2_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm7_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm14_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm9_running_mean: Tensor[(1024), float32], %resnetv24_stage3_conv1_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_conv8_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm11_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm10_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm7_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm11_beta: Tensor[(256), float32], %resnetv24_stage3_conv3_weight: Tensor[(1024, 512, 1, 1), float32], %resnetv24_stage3_conv6_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm13_beta: Tensor[(256), float32], %resnetv24_stage3_conv17_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm13_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm16_running_mean: Tensor[(256), float32], %resnetv24_stage3_conv16_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm12_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm4_running_var: Tensor[(256), float32], %resnetv24_stage3_conv7_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm14_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm15_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm8_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_running_var: Tensor[(256), float32], %resnetv24_stage3_conv0_weight: Tensor[(256, 512, 1, 1), float32], %resnetv24_stage3_conv9_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_conv10_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_conv15_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm13_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm10_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm5_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm12_running_var: Tensor[(1024), float32] {
=======
def @main(%resnetv24_stage3_batchnorm3_running_mean: Tensor[(1024), float32], %resnetv24_stage3_conv7_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_conv1_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm2_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm10_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm6_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm15_gamma: Tensor[(1024), float32], %resnetv24_stage3_conv4_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm1_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm5_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm7_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm3_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm1_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm16_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm9_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm16_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm9_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm14_running_mean: Tensor[(256), float32], %resnetv24_stage3_conv9_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm11_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm6_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm4_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm11_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_beta: Tensor[(256), float32], %resnetv24_stage3_conv18_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm5_running_mean: Tensor[(256), float32], %call_100: (Tensor[(1, 512, 28, 28), float32], Tensor[(512), float32], Tensor[(512), float32]), %resnetv24_stage3_batchnorm6_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm8_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm10_running_var: Tensor[(256), float32], %resnetv24_stage3_conv15_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm10_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm16_beta: Tensor[(256), float32], %resnetv24_stage3_conv12_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm16_gamma: Tensor[(256), float32], %resnetv24_stage3_conv14_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm10_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm1_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm14_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm15_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm4_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm12_running_mean: Tensor[(1024), float32], %resnetv24_stage3_conv3_weight: Tensor[(1024, 512, 1, 1), float32], %resnetv24_stage3_batchnorm13_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm5_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm13_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm8_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm13_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm8_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm6_running_mean: Tensor[(1024), float32], %resnetv24_stage3_batchnorm9_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm7_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm14_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm7_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm12_running_var: Tensor[(1024), float32], %resnetv24_stage3_conv16_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm17_running_var: Tensor[(256), float32], %resnetv24_stage3_conv11_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm15_running_mean: Tensor[(1024), float32], %resnetv24_stage3_conv2_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_conv17_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm15_running_var: Tensor[(1024), float32], %resnetv24_stage3_batchnorm9_gamma: Tensor[(1024), float32], %resnetv24_stage3_conv0_weight: Tensor[(256, 512, 1, 1), float32], %resnetv24_stage3_batchnorm1_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm4_running_mean: Tensor[(256), float32], %resnetv24_stage3_conv6_weight: Tensor[(1024, 256, 1, 1), float32], %resnetv24_stage3_batchnorm14_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm17_running_mean: Tensor[(256), float32], %resnetv24_stage3_conv5_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm12_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm8_running_var: Tensor[(256), float32], %resnetv24_stage3_batchnorm2_running_mean: Tensor[(256), float32], %resnetv24_stage3_batchnorm3_gamma: Tensor[(1024), float32], %resnetv24_stage3_batchnorm12_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm3_beta: Tensor[(1024), float32], %resnetv24_stage3_batchnorm7_gamma: Tensor[(256), float32], %resnetv24_stage3_conv10_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_batchnorm11_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm4_beta: Tensor[(256), float32], %resnetv24_stage3_batchnorm11_running_var: Tensor[(256), float32], %resnetv24_stage3_conv13_weight: Tensor[(256, 1024, 1, 1), float32], %resnetv24_stage3_conv8_weight: Tensor[(256, 256, 3, 3), float32], %resnetv24_stage3_batchnorm5_gamma: Tensor[(256), float32], %resnetv24_stage3_batchnorm13_running_var: Tensor[(256), float32] {
>>>>>>> 13d0412bde7a96006492efe49e5586d42e052bd4
  %101 = %100.0;
  %102 = nn.relu(%101) /* ty=Tensor[(1, 512, 28, 28), float32] */;
  %103 = nn.conv2d(%102, %resnetv24_stage3_conv0_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %104 = nn.batch_norm(%103, %resnetv24_stage3_batchnorm1_gamma, %resnetv24_stage3_batchnorm1_beta, %resnetv24_stage3_batchnorm1_running_mean, %resnetv24_stage3_batchnorm1_running_var) /* ty=(Tensor[(1, 256, 28, 28), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %105 = %104.0;
  %106 = nn.relu(%105) /* ty=Tensor[(1, 256, 28, 28), float32] */;
  %107 = nn.conv2d(%106, %resnetv24_stage3_conv1_weight, strides=[2, 2], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %108 = nn.batch_norm(%107, %resnetv24_stage3_batchnorm2_gamma, %resnetv24_stage3_batchnorm2_beta, %resnetv24_stage3_batchnorm2_running_mean, %resnetv24_stage3_batchnorm2_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %109 = %108.0;
  %110 = nn.relu(%109) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %111 = nn.conv2d(%110, %resnetv24_stage3_conv2_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %112 = nn.conv2d(%102, %resnetv24_stage3_conv3_weight, strides=[2, 2], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %113 = add(%111, %112) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %114 = nn.batch_norm(%113, %resnetv24_stage3_batchnorm3_gamma, %resnetv24_stage3_batchnorm3_beta, %resnetv24_stage3_batchnorm3_running_mean, %resnetv24_stage3_batchnorm3_running_var) /* ty=(Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]) */;
  %115 = %114.0;
  %116 = nn.relu(%115) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %117 = nn.conv2d(%116, %resnetv24_stage3_conv4_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %118 = nn.batch_norm(%117, %resnetv24_stage3_batchnorm4_gamma, %resnetv24_stage3_batchnorm4_beta, %resnetv24_stage3_batchnorm4_running_mean, %resnetv24_stage3_batchnorm4_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %119 = %118.0;
  %120 = nn.relu(%119) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %121 = nn.conv2d(%120, %resnetv24_stage3_conv5_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %122 = nn.batch_norm(%121, %resnetv24_stage3_batchnorm5_gamma, %resnetv24_stage3_batchnorm5_beta, %resnetv24_stage3_batchnorm5_running_mean, %resnetv24_stage3_batchnorm5_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %123 = %122.0;
  %124 = nn.relu(%123) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %125 = nn.conv2d(%124, %resnetv24_stage3_conv6_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %126 = add(%125, %113) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %127 = nn.batch_norm(%126, %resnetv24_stage3_batchnorm6_gamma, %resnetv24_stage3_batchnorm6_beta, %resnetv24_stage3_batchnorm6_running_mean, %resnetv24_stage3_batchnorm6_running_var) /* ty=(Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]) */;
  %128 = %127.0;
  %129 = nn.relu(%128) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %130 = nn.conv2d(%129, %resnetv24_stage3_conv7_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %131 = nn.batch_norm(%130, %resnetv24_stage3_batchnorm7_gamma, %resnetv24_stage3_batchnorm7_beta, %resnetv24_stage3_batchnorm7_running_mean, %resnetv24_stage3_batchnorm7_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %132 = %131.0;
  %133 = nn.relu(%132) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %134 = nn.conv2d(%133, %resnetv24_stage3_conv8_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %135 = nn.batch_norm(%134, %resnetv24_stage3_batchnorm8_gamma, %resnetv24_stage3_batchnorm8_beta, %resnetv24_stage3_batchnorm8_running_mean, %resnetv24_stage3_batchnorm8_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %136 = %135.0;
  %137 = nn.relu(%136) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %138 = nn.conv2d(%137, %resnetv24_stage3_conv9_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %139 = add(%138, %126) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %140 = nn.batch_norm(%139, %resnetv24_stage3_batchnorm9_gamma, %resnetv24_stage3_batchnorm9_beta, %resnetv24_stage3_batchnorm9_running_mean, %resnetv24_stage3_batchnorm9_running_var) /* ty=(Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]) */;
  %141 = %140.0;
  %142 = nn.relu(%141) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %143 = nn.conv2d(%142, %resnetv24_stage3_conv10_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %144 = nn.batch_norm(%143, %resnetv24_stage3_batchnorm10_gamma, %resnetv24_stage3_batchnorm10_beta, %resnetv24_stage3_batchnorm10_running_mean, %resnetv24_stage3_batchnorm10_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %145 = %144.0;
  %146 = nn.relu(%145) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %147 = nn.conv2d(%146, %resnetv24_stage3_conv11_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %148 = nn.batch_norm(%147, %resnetv24_stage3_batchnorm11_gamma, %resnetv24_stage3_batchnorm11_beta, %resnetv24_stage3_batchnorm11_running_mean, %resnetv24_stage3_batchnorm11_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %149 = %148.0;
  %150 = nn.relu(%149) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %151 = nn.conv2d(%150, %resnetv24_stage3_conv12_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %152 = add(%151, %139) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %153 = nn.batch_norm(%152, %resnetv24_stage3_batchnorm12_gamma, %resnetv24_stage3_batchnorm12_beta, %resnetv24_stage3_batchnorm12_running_mean, %resnetv24_stage3_batchnorm12_running_var) /* ty=(Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]) */;
  %154 = %153.0;
  %155 = nn.relu(%154) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %156 = nn.conv2d(%155, %resnetv24_stage3_conv13_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %157 = nn.batch_norm(%156, %resnetv24_stage3_batchnorm13_gamma, %resnetv24_stage3_batchnorm13_beta, %resnetv24_stage3_batchnorm13_running_mean, %resnetv24_stage3_batchnorm13_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %158 = %157.0;
  %159 = nn.relu(%158) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %160 = nn.conv2d(%159, %resnetv24_stage3_conv14_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %161 = nn.batch_norm(%160, %resnetv24_stage3_batchnorm14_gamma, %resnetv24_stage3_batchnorm14_beta, %resnetv24_stage3_batchnorm14_running_mean, %resnetv24_stage3_batchnorm14_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %162 = %161.0;
  %163 = nn.relu(%162) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %164 = nn.conv2d(%163, %resnetv24_stage3_conv15_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %165 = add(%164, %152) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %166 = nn.batch_norm(%165, %resnetv24_stage3_batchnorm15_gamma, %resnetv24_stage3_batchnorm15_beta, %resnetv24_stage3_batchnorm15_running_mean, %resnetv24_stage3_batchnorm15_running_var) /* ty=(Tensor[(1, 1024, 14, 14), float32], Tensor[(1024), float32], Tensor[(1024), float32]) */;
  %167 = %166.0;
  %168 = nn.relu(%167) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  %169 = nn.conv2d(%168, %resnetv24_stage3_conv16_weight, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %170 = nn.batch_norm(%169, %resnetv24_stage3_batchnorm16_gamma, %resnetv24_stage3_batchnorm16_beta, %resnetv24_stage3_batchnorm16_running_mean, %resnetv24_stage3_batchnorm16_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %171 = %170.0;
  %172 = nn.relu(%171) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %173 = nn.conv2d(%172, %resnetv24_stage3_conv17_weight, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %174 = nn.batch_norm(%173, %resnetv24_stage3_batchnorm17_gamma, %resnetv24_stage3_batchnorm17_beta, %resnetv24_stage3_batchnorm17_running_mean, %resnetv24_stage3_batchnorm17_running_var) /* ty=(Tensor[(1, 256, 14, 14), float32], Tensor[(256), float32], Tensor[(256), float32]) */;
  %175 = %174.0;
  %176 = nn.relu(%175) /* ty=Tensor[(1, 256, 14, 14), float32] */;
  %177 = nn.conv2d(%176, %resnetv24_stage3_conv18_weight, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
  add(%177, %165) /* ty=Tensor[(1, 1024, 14, 14), float32] */;
}