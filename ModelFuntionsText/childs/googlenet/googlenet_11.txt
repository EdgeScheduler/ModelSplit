def @main(%onnx::Conv_667: Tensor[(112), float32], %onnx::Conv_729: Tensor[(48, 832, 1, 1), float32], %onnx::Conv_684: Tensor[(256, 528, 1, 1), float32], %onnx::Conv_735: Tensor[(128, 832, 1, 1), float32], %onnx::Conv_580: Tensor[(96), float32], %onnx::Conv_624: Tensor[(48, 16, 3, 3), float32], %onnx::Conv_678: Tensor[(64, 32, 3, 3), float32], %onnx::Conv_699: Tensor[(128, 528, 1, 1), float32], %onnx::Conv_652: Tensor[(128), float32], %onnx::Conv_646: Tensor[(64), float32], %onnx::Conv_598: Tensor[(128), float32], %call_23: Tensor[(15, 192, 56, 56), float32], %onnx::Conv_613: Tensor[(192), float32], %onnx::Conv_663: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_709: Tensor[(320), float32], %onnx::Conv_640: Tensor[(24), float32], %onnx::Conv_708: Tensor[(320, 160, 3, 3), float32], %onnx::Conv_696: Tensor[(128, 32, 3, 3), float32], %onnx::Conv_601: Tensor[(192), float32], %onnx::Conv_609: Tensor[(64, 256, 1, 1), float32], %onnx::Conv_705: Tensor[(160, 832, 1, 1), float32], %onnx::Conv_585: Tensor[(16, 192, 1, 1), float32], %onnx::Conv_568: Tensor[(64), float32], %onnx::Conv_591: Tensor[(32, 192, 1, 1), float32], %onnx::Conv_736: Tensor[(128), float32]) -> Tensor[(15, 1000), float32], %onnx::Conv_715: Tensor[(128), float32], %onnx::Conv_657: Tensor[(24, 512, 1, 1), float32], %onnx::Conv_733: Tensor[(128), float32], %onnx::Conv_723: Tensor[(192, 832, 1, 1), float32], %onnx::Conv_697: Tensor[(128), float32], %onnx::Conv_628: Tensor[(64), float32], %onnx::Conv_694: Tensor[(32), float32], %onnx::Conv_655: Tensor[(256), float32], %onnx::Conv_604: Tensor[(32), float32], %onnx::Conv_721: Tensor[(384), float32], %onnx::Conv_594: Tensor[(128, 256, 1, 1), float32], %onnx::Conv_595: Tensor[(128), float32], %onnx::Conv_675: Tensor[(32, 512, 1, 1), float32], %onnx::Conv_592: Tensor[(32), float32], %onnx::Conv_651: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_583: Tensor[(128), float32], %onnx::Conv_612: Tensor[(192, 480, 1, 1), float32], %onnx::Conv_588: Tensor[(32, 16, 3, 3), float32], %onnx::Conv_606: Tensor[(96, 32, 3, 3), float32], %onnx::Conv_679: Tensor[(64), float32], %onnx::Conv_724: Tensor[(192), float32], %onnx::Conv_654: Tensor[(256, 128, 3, 3), float32], %onnx::Conv_615: Tensor[(96, 480, 1, 1), float32], %onnx::Conv_630: Tensor[(160, 512, 1, 1), float32], %onnx::Conv_574: Tensor[(192), float32], %onnx::Conv_645: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_616: Tensor[(96), float32], %onnx::Conv_633: Tensor[(112, 512, 1, 1), float32], %onnx::Conv_649: Tensor[(128), float32], %onnx::Conv_661: Tensor[(64), float32], %onnx::Conv_681: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_600: Tensor[(192, 128, 3, 3), float32], %onnx::Conv_687: Tensor[(160, 528, 1, 1), float32], %onnx::Conv_622: Tensor[(16), float32], %onnx::Conv_627: Tensor[(64, 480, 1, 1), float32], %onnx::Conv_711: Tensor[(32, 832, 1, 1), float32], %onnx::Conv_714: Tensor[(128, 32, 3, 3), float32], %onnx::Conv_570: Tensor[(64, 64, 1, 1), float32], %onnx::Conv_618: Tensor[(208, 96, 3, 3), float32], %onnx::Conv_720: Tensor[(384, 832, 1, 1), float32], %onnx::Conv_658: Tensor[(24), float32], %onnx::Conv_621: Tensor[(16, 480, 1, 1), float32], %onnx::Conv_726: Tensor[(384, 192, 3, 3), float32], %onnx::Conv_685: Tensor[(256), float32], %onnx::Conv_693: Tensor[(32, 528, 1, 1), float32], %onnx::Conv_636: Tensor[(224, 112, 3, 3), float32], %onnx::Conv_700: Tensor[(128), float32], %onnx::Conv_669: Tensor[(144, 512, 1, 1), float32], %onnx::Conv_703: Tensor[(256), float32], %onnx::Conv_571: Tensor[(64), float32], %onnx::Conv_712: Tensor[(32), float32], %onnx::Conv_576: Tensor[(64, 192, 1, 1), float32], %onnx::Conv_642: Tensor[(64, 24, 3, 3), float32], %onnx::Conv_577: Tensor[(64), float32], %onnx::Conv_702: Tensor[(256, 832, 1, 1), float32], %onnx::Conv_666: Tensor[(112, 512, 1, 1), float32], %onnx::Conv_579: Tensor[(96, 192, 1, 1), float32], %onnx::Conv_639: Tensor[(24, 512, 1, 1), float32], %onnx::Conv_670: Tensor[(144), float32], %onnx::Conv_567: Tensor[(64, 3, 7, 7), float32], %onnx::Conv_691: Tensor[(320), float32], %onnx::Conv_673: Tensor[(288), float32], %onnx::Conv_573: Tensor[(192, 64, 3, 3), float32], %onnx::Conv_664: Tensor[(64), float32], %onnx::Conv_688: Tensor[(160), float32], %onnx::Conv_582: Tensor[(128, 96, 3, 3), float32], %onnx::Conv_717: Tensor[(128, 832, 1, 1), float32], %onnx::Conv_690: Tensor[(320, 160, 3, 3), float32], %onnx::Conv_619: Tensor[(208), float32], %onnx::Conv_637: Tensor[(224), float32], %onnx::Conv_589: Tensor[(32), float32], %onnx::Conv_597: Tensor[(128, 256, 1, 1), float32], %onnx::Conv_610: Tensor[(64), float32], %onnx::Conv_676: Tensor[(32), float32], %onnx::Conv_732: Tensor[(128, 48, 3, 3), float32], %onnx::Conv_607: Tensor[(96), float32], %onnx::Conv_682: Tensor[(64), float32], %onnx::Conv_718: Tensor[(128), float32], %onnx::Conv_643: Tensor[(64), float32], %onnx::Conv_648: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_730: Tensor[(48), float32], %onnx::Conv_706: Tensor[(160), float32], %onnx::Conv_660: Tensor[(64, 24, 3, 3), float32], %onnx::Conv_586: Tensor[(16), float32], %onnx::Conv_603: Tensor[(32, 256, 1, 1), float32], %onnx::Conv_625: Tensor[(48), float32], %onnx::Conv_672: Tensor[(288, 144, 3, 3), float32], %onnx::Conv_634: Tensor[(112), float32], %onnx::Conv_631: Tensor[(160), float32], %onnx::Conv_727: Tensor[(384), float32] {
  %24 = nn.max_pool2d(%23, pool_size=[3, 3], strides=[2, 2], padding=[0, 0, 0, 0], ceil_mode=True) /* ty=Tensor[(15, 192, 28, 28), float32] */;
  %25 = nn.conv2d(%24, %onnx::Conv_576, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %26 = nn.bias_add(%25, %onnx::Conv_577) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %27 = nn.conv2d(%24, %onnx::Conv_579, padding=[0, 0, 0, 0], channels=96, kernel_size=[1, 1]) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %28 = nn.bias_add(%27, %onnx::Conv_580) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %29 = nn.relu(%28) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %30 = nn.conv2d(%29, %onnx::Conv_582, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %31 = nn.bias_add(%30, %onnx::Conv_583) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %32 = nn.conv2d(%24, %onnx::Conv_585, padding=[0, 0, 0, 0], channels=16, kernel_size=[1, 1]) /* ty=Tensor[(15, 16, 28, 28), float32] */;
  %33 = nn.bias_add(%32, %onnx::Conv_586) /* ty=Tensor[(15, 16, 28, 28), float32] */;
  %34 = nn.relu(%33) /* ty=Tensor[(15, 16, 28, 28), float32] */;
  %35 = nn.conv2d(%34, %onnx::Conv_588, padding=[1, 1, 1, 1], channels=32, kernel_size=[3, 3]) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %36 = nn.bias_add(%35, %onnx::Conv_589) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %37 = nn.max_pool2d(%24, pool_size=[3, 3], padding=[1, 1, 1, 1], ceil_mode=True) /* ty=Tensor[(15, 192, 28, 28), float32] */;
  %38 = nn.conv2d(%37, %onnx::Conv_591, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %39 = nn.bias_add(%38, %onnx::Conv_592) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %40 = nn.relu(%26) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %41 = nn.relu(%31) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %42 = nn.relu(%36) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %43 = nn.relu(%39) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %44 = (%40, %41, %42, %43);
  %45 = concatenate(%44, axis=1) /* ty=Tensor[(15, 256, 28, 28), float32] */;
  %46 = nn.conv2d(%45, %onnx::Conv_594, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %47 = nn.bias_add(%46, %onnx::Conv_595) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %48 = nn.conv2d(%45, %onnx::Conv_597, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %49 = nn.bias_add(%48, %onnx::Conv_598) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %50 = nn.relu(%49) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %51 = nn.conv2d(%50, %onnx::Conv_600, padding=[1, 1, 1, 1], channels=192, kernel_size=[3, 3]) /* ty=Tensor[(15, 192, 28, 28), float32] */;
  %52 = nn.bias_add(%51, %onnx::Conv_601) /* ty=Tensor[(15, 192, 28, 28), float32] */;
  %53 = nn.conv2d(%45, %onnx::Conv_603, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %54 = nn.bias_add(%53, %onnx::Conv_604) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %55 = nn.relu(%54) /* ty=Tensor[(15, 32, 28, 28), float32] */;
  %56 = nn.conv2d(%55, %onnx::Conv_606, padding=[1, 1, 1, 1], channels=96, kernel_size=[3, 3]) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %57 = nn.bias_add(%56, %onnx::Conv_607) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %58 = nn.max_pool2d(%45, pool_size=[3, 3], padding=[1, 1, 1, 1], ceil_mode=True) /* ty=Tensor[(15, 256, 28, 28), float32] */;
  %59 = nn.conv2d(%58, %onnx::Conv_609, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %60 = nn.bias_add(%59, %onnx::Conv_610) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %61 = nn.relu(%47) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %62 = nn.relu(%52) /* ty=Tensor[(15, 192, 28, 28), float32] */;
  %63 = nn.relu(%57) /* ty=Tensor[(15, 96, 28, 28), float32] */;
  %64 = nn.relu(%60) /* ty=Tensor[(15, 64, 28, 28), float32] */;
  %65 = (%61, %62, %63, %64);
  concatenate(%65, axis=1) /* ty=Tensor[(15, 480, 28, 28), float32] */;
}