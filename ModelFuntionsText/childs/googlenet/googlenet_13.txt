def @main(%onnx::Conv_675: Tensor[(32, 512, 1, 1), float32], %onnx::Conv_688: Tensor[(160), float32], %onnx::Conv_640: Tensor[(24), float32], %onnx::Conv_568: Tensor[(64), float32], %onnx::Conv_646: Tensor[(64), float32], %onnx::Conv_588: Tensor[(32, 16, 3, 3), float32], %onnx::Conv_678: Tensor[(64, 32, 3, 3), float32], %onnx::Conv_570: Tensor[(64, 64, 1, 1), float32], %onnx::Conv_694: Tensor[(32), float32], %onnx::Conv_724: Tensor[(192), float32], %onnx::Conv_703: Tensor[(256), float32], %onnx::Conv_658: Tensor[(24), float32], %onnx::Conv_630: Tensor[(160, 512, 1, 1), float32], %onnx::Conv_715: Tensor[(128), float32], %onnx::Conv_693: Tensor[(32, 528, 1, 1), float32], %onnx::Conv_642: Tensor[(64, 24, 3, 3), float32], %onnx::Conv_667: Tensor[(112), float32], %onnx::Conv_651: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_660: Tensor[(64, 24, 3, 3), float32], %call_172: Tensor[(15, 832, 14, 14), float32], %onnx::Conv_615: Tensor[(96, 480, 1, 1), float32], %onnx::Conv_591: Tensor[(32, 192, 1, 1), float32], %onnx::Conv_648: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_733: Tensor[(128), float32], %onnx::Conv_597: Tensor[(128, 256, 1, 1), float32], %onnx::Conv_631: Tensor[(160), float32], %onnx::Conv_613: Tensor[(192), float32], %onnx::Conv_618: Tensor[(208, 96, 3, 3), float32], %onnx::Conv_610: Tensor[(64), float32], %onnx::Conv_622: Tensor[(16), float32], %onnx::Conv_681: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_609: Tensor[(64, 256, 1, 1), float32], %onnx::Conv_577: Tensor[(64), float32], %onnx::Conv_619: Tensor[(208), float32], %onnx::Conv_655: Tensor[(256), float32], %onnx::Conv_699: Tensor[(128, 528, 1, 1), float32], %onnx::Conv_729: Tensor[(48, 832, 1, 1), float32], %onnx::Conv_567: Tensor[(64, 3, 7, 7), float32], %onnx::Conv_627: Tensor[(64, 480, 1, 1), float32], %onnx::Conv_582: Tensor[(128, 96, 3, 3), float32], %onnx::Conv_687: Tensor[(160, 528, 1, 1), float32], %onnx::Conv_732: Tensor[(128, 48, 3, 3), float32], %onnx::Conv_685: Tensor[(256), float32], %onnx::Conv_625: Tensor[(48), float32], %onnx::Conv_676: Tensor[(32), float32], %onnx::Conv_579: Tensor[(96, 192, 1, 1), float32], %onnx::Conv_691: Tensor[(320), float32], %onnx::Conv_730: Tensor[(48), float32], %onnx::Conv_589: Tensor[(32), float32], %onnx::Conv_637: Tensor[(224), float32], %onnx::Conv_598: Tensor[(128), float32], %onnx::Conv_612: Tensor[(192, 480, 1, 1), float32], %onnx::Conv_696: Tensor[(128, 32, 3, 3), float32], %onnx::Conv_721: Tensor[(384), float32], %onnx::Conv_645: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_657: Tensor[(24, 512, 1, 1), float32], %onnx::Conv_705: Tensor[(160, 832, 1, 1), float32], %onnx::Conv_574: Tensor[(192), float32], %onnx::Conv_679: Tensor[(64), float32], %onnx::Conv_700: Tensor[(128), float32], %onnx::Conv_708: Tensor[(320, 160, 3, 3), float32], %onnx::Conv_639: Tensor[(24, 512, 1, 1), float32], %onnx::Conv_726: Tensor[(384, 192, 3, 3), float32], %onnx::Conv_573: Tensor[(192, 64, 3, 3), float32], %onnx::Conv_714: Tensor[(128, 32, 3, 3), float32], %onnx::Conv_690: Tensor[(320, 160, 3, 3), float32], %onnx::Conv_603: Tensor[(32, 256, 1, 1), float32], %onnx::Conv_643: Tensor[(64), float32], %onnx::Conv_583: Tensor[(128), float32], %onnx::Conv_663: Tensor[(64, 512, 1, 1), float32], %onnx::Conv_672: Tensor[(288, 144, 3, 3), float32], %onnx::Conv_666: Tensor[(112, 512, 1, 1), float32], %onnx::Conv_717: Tensor[(128, 832, 1, 1), float32], %onnx::Conv_634: Tensor[(112), float32], %onnx::Conv_621: Tensor[(16, 480, 1, 1), float32], %onnx::Conv_600: Tensor[(192, 128, 3, 3), float32], %onnx::Conv_670: Tensor[(144), float32], %onnx::Conv_697: Tensor[(128), float32], %onnx::Conv_595: Tensor[(128), float32], %onnx::Conv_673: Tensor[(288), float32], %onnx::Conv_661: Tensor[(64), float32], %onnx::Conv_711: Tensor[(32, 832, 1, 1), float32], %onnx::Conv_624: Tensor[(48, 16, 3, 3), float32], %onnx::Conv_736: Tensor[(128), float32]) -> Tensor[(15, 1000), float32], %onnx::Conv_585: Tensor[(16, 192, 1, 1), float32], %onnx::Conv_723: Tensor[(192, 832, 1, 1), float32], %onnx::Conv_735: Tensor[(128, 832, 1, 1), float32], %onnx::Conv_571: Tensor[(64), float32], %onnx::Conv_586: Tensor[(16), float32], %onnx::Conv_727: Tensor[(384), float32], %onnx::Conv_592: Tensor[(32), float32], %onnx::Conv_712: Tensor[(32), float32], %onnx::Conv_604: Tensor[(32), float32], %onnx::Conv_601: Tensor[(192), float32], %onnx::Conv_709: Tensor[(320), float32], %onnx::Conv_633: Tensor[(112, 512, 1, 1), float32], %onnx::Conv_649: Tensor[(128), float32], %onnx::Conv_718: Tensor[(128), float32], %onnx::Conv_606: Tensor[(96, 32, 3, 3), float32], %onnx::Conv_652: Tensor[(128), float32], %onnx::Conv_706: Tensor[(160), float32], %onnx::Conv_664: Tensor[(64), float32], %onnx::Conv_682: Tensor[(64), float32], %onnx::Conv_720: Tensor[(384, 832, 1, 1), float32], %onnx::Conv_580: Tensor[(96), float32], %onnx::Conv_576: Tensor[(64, 192, 1, 1), float32], %onnx::Conv_616: Tensor[(96), float32], %onnx::Conv_669: Tensor[(144, 512, 1, 1), float32], %onnx::Conv_594: Tensor[(128, 256, 1, 1), float32], %onnx::Conv_628: Tensor[(64), float32], %onnx::Conv_702: Tensor[(256, 832, 1, 1), float32], %onnx::Conv_684: Tensor[(256, 528, 1, 1), float32], %onnx::Conv_654: Tensor[(256, 128, 3, 3), float32], %onnx::Conv_636: Tensor[(224, 112, 3, 3), float32], %onnx::Conv_607: Tensor[(96), float32] {
  %173 = nn.max_pool2d(%172, pool_size=[2, 2], strides=[2, 2], padding=[0, 0, 0, 0], ceil_mode=True) /* ty=Tensor[(15, 832, 7, 7), float32] */;
  %174 = nn.conv2d(%173, %onnx::Conv_702, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 7, 7), float32] */;
  %175 = nn.bias_add(%174, %onnx::Conv_703) /* ty=Tensor[(15, 256, 7, 7), float32] */;
  %176 = nn.conv2d(%173, %onnx::Conv_705, padding=[0, 0, 0, 0], channels=160, kernel_size=[1, 1]) /* ty=Tensor[(15, 160, 7, 7), float32] */;
  %177 = nn.bias_add(%176, %onnx::Conv_706) /* ty=Tensor[(15, 160, 7, 7), float32] */;
  %178 = nn.relu(%177) /* ty=Tensor[(15, 160, 7, 7), float32] */;
  %179 = nn.conv2d(%178, %onnx::Conv_708, padding=[1, 1, 1, 1], channels=320, kernel_size=[3, 3]) /* ty=Tensor[(15, 320, 7, 7), float32] */;
  %180 = nn.bias_add(%179, %onnx::Conv_709) /* ty=Tensor[(15, 320, 7, 7), float32] */;
  %181 = nn.conv2d(%173, %onnx::Conv_711, padding=[0, 0, 0, 0], channels=32, kernel_size=[1, 1]) /* ty=Tensor[(15, 32, 7, 7), float32] */;
  %182 = nn.bias_add(%181, %onnx::Conv_712) /* ty=Tensor[(15, 32, 7, 7), float32] */;
  %183 = nn.relu(%182) /* ty=Tensor[(15, 32, 7, 7), float32] */;
  %184 = nn.conv2d(%183, %onnx::Conv_714, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %185 = nn.bias_add(%184, %onnx::Conv_715) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %186 = nn.max_pool2d(%173, pool_size=[3, 3], padding=[1, 1, 1, 1], ceil_mode=True) /* ty=Tensor[(15, 832, 7, 7), float32] */;
  %187 = nn.conv2d(%186, %onnx::Conv_717, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %188 = nn.bias_add(%187, %onnx::Conv_718) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %189 = nn.relu(%175) /* ty=Tensor[(15, 256, 7, 7), float32] */;
  %190 = nn.relu(%180) /* ty=Tensor[(15, 320, 7, 7), float32] */;
  %191 = nn.relu(%185) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %192 = nn.relu(%188) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %193 = (%189, %190, %191, %192);
  %194 = concatenate(%193, axis=1) /* ty=Tensor[(15, 832, 7, 7), float32] */;
  %195 = nn.conv2d(%194, %onnx::Conv_720, padding=[0, 0, 0, 0], channels=384, kernel_size=[1, 1]) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %196 = nn.bias_add(%195, %onnx::Conv_721) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %197 = nn.conv2d(%194, %onnx::Conv_723, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(15, 192, 7, 7), float32] */;
  %198 = nn.bias_add(%197, %onnx::Conv_724) /* ty=Tensor[(15, 192, 7, 7), float32] */;
  %199 = nn.relu(%198) /* ty=Tensor[(15, 192, 7, 7), float32] */;
  %200 = nn.conv2d(%199, %onnx::Conv_726, padding=[1, 1, 1, 1], channels=384, kernel_size=[3, 3]) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %201 = nn.bias_add(%200, %onnx::Conv_727) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %202 = nn.conv2d(%194, %onnx::Conv_729, padding=[0, 0, 0, 0], channels=48, kernel_size=[1, 1]) /* ty=Tensor[(15, 48, 7, 7), float32] */;
  %203 = nn.bias_add(%202, %onnx::Conv_730) /* ty=Tensor[(15, 48, 7, 7), float32] */;
  %204 = nn.relu(%203) /* ty=Tensor[(15, 48, 7, 7), float32] */;
  %205 = nn.conv2d(%204, %onnx::Conv_732, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %206 = nn.bias_add(%205, %onnx::Conv_733) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %207 = nn.max_pool2d(%194, pool_size=[3, 3], padding=[1, 1, 1, 1], ceil_mode=True) /* ty=Tensor[(15, 832, 7, 7), float32] */;
  %208 = nn.conv2d(%207, %onnx::Conv_735, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %209 = nn.bias_add(%208, %onnx::Conv_736) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %210 = nn.relu(%196) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %211 = nn.relu(%201) /* ty=Tensor[(15, 384, 7, 7), float32] */;
  %212 = nn.relu(%206) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %213 = nn.relu(%209) /* ty=Tensor[(15, 128, 7, 7), float32] */;
  %214 = (%210, %211, %212, %213);
  concatenate(%214, axis=1) /* ty=Tensor[(15, 1024, 7, 7), float32] */;
}