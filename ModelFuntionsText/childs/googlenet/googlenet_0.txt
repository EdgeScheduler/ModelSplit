<<<<<<< HEAD
def @main(%data_0: Tensor[(1, 3, 224, 224), float32], %conv1/7x7_s2_b_0: Tensor[(64), float32], %conv1/7x7_s2_w_0: Tensor[(64, 3, 7, 7), float32] {
  %0 = nn.conv2d(%data_0, %conv1/7x7_s2_w_0, strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]) /* ty=Tensor[(1, 64, 112, 112), float32] */;
  nn.bias_add(%0, %conv1/7x7_s2_b_0) /* ty=Tensor[(1, 64, 112, 112), float32] */;
=======
def @main(%data_0: Tensor[(15, 3, 224, 224), float32] {
  %0 = take(%data_0, 0 /* ty=int64 */, axis=1) /* ty=Tensor[(15, 224, 224), float32] */;
  %1 = expand_dims(%0, axis=1) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %2 = multiply(%1, 0.458f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %3 = take(%data_0, 1 /* ty=int64 */, axis=1) /* ty=Tensor[(15, 224, 224), float32] */;
  %4 = expand_dims(%3, axis=1) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %5 = multiply(%4, 0.448f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %6 = take(%data_0, 2 /* ty=int64 */, axis=1) /* ty=Tensor[(15, 224, 224), float32] */;
  %7 = expand_dims(%6, axis=1) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %8 = multiply(%7, 0.45f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %9 = add(%2, -0.03f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %10 = add(%5, -0.088f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %11 = add(%8, -0.188f /* ty=float32 */) /* ty=Tensor[(15, 1, 224, 224), float32] */;
  %12 = (%9, %10, %11);
  concatenate(%12, axis=1) /* ty=Tensor[(15, 3, 224, 224), float32] */;
>>>>>>> 13d0412bde7a96006492efe49e5586d42e052bd4
}