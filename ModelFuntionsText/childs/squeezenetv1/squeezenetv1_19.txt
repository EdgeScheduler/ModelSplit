def @main(%features.8.expand1x1.bias: Tensor[(192), float32], %call_50: Tensor[(15, 48, 27, 27), float32], %features.8.expand3x3.bias: Tensor[(192), float32], %features.8.expand3x3.weight: Tensor[(192, 48, 3, 3), float32], %features.8.expand1x1.weight: Tensor[(192, 48, 1, 1), float32] {
  %51 = nn.relu(%50) /* ty=Tensor[(15, 48, 27, 27), float32] */;
  %52 = nn.conv2d(%51, %features.8.expand1x1.weight, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %53 = nn.bias_add(%52, %features.8.expand1x1.bias) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %54 = nn.conv2d(%51, %features.8.expand3x3.weight, padding=[1, 1, 1, 1], channels=192, kernel_size=[3, 3]) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %55 = nn.bias_add(%54, %features.8.expand3x3.bias) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %56 = nn.relu(%53) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %57 = nn.relu(%55) /* ty=Tensor[(15, 192, 27, 27), float32] */;
  %58 = (%56, %57);
  concatenate(%58, axis=1) /* ty=Tensor[(15, 384, 27, 27), float32] */;
}