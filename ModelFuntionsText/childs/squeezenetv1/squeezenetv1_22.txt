def @main(%fire7/expand3x3_w_0: Tensor[(192, 48, 3, 3), float32], %call_62: Tensor[(1, 48, 13, 13), float32], %fire7/expand3x3_b_0: Tensor[(192), float32], %fire7/expand1x1_b_0: Tensor[(192), float32], %fire7/expand1x1_w_0: Tensor[(192, 48, 1, 1), float32] {
  %63 = nn.relu(%62) /* ty=Tensor[(1, 48, 13, 13), float32] */;
  %64 = nn.conv2d(%63, %fire7/expand1x1_w_0, padding=[0, 0, 0, 0], channels=192, kernel_size=[1, 1]) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %65 = nn.bias_add(%64, %fire7/expand1x1_b_0) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %66 = nn.conv2d(%63, %fire7/expand3x3_w_0, padding=[1, 1, 1, 1], channels=192, kernel_size=[3, 3]) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %67 = nn.bias_add(%66, %fire7/expand3x3_b_0) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %68 = nn.relu(%65) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %69 = nn.relu(%67) /* ty=Tensor[(1, 192, 13, 13), float32] */;
  %70 = (%68, %69);
  concatenate(%70, axis=1) /* ty=Tensor[(1, 384, 13, 13), float32] */;
}