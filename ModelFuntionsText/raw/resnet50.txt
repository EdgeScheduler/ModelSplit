def @main(%data: Tensor[(15, 3, 224, 224), float32], %fc.weight: Tensor[(1000, 2048), float32], %fc.bias: Tensor[(1000), float32], %onnx::Conv_497: Tensor[(64, 3, 7, 7), float32], %onnx::Conv_498: Tensor[(64), float32], %onnx::Conv_500: Tensor[(64, 64, 1, 1), float32], %onnx::Conv_501: Tensor[(64), float32], %onnx::Conv_503: Tensor[(64, 64, 3, 3), float32], %onnx::Conv_504: Tensor[(64), float32], %onnx::Conv_506: Tensor[(256, 64, 1, 1), float32], %onnx::Conv_507: Tensor[(256), float32], %onnx::Conv_509: Tensor[(256, 64, 1, 1), float32], %onnx::Conv_510: Tensor[(256), float32], %onnx::Conv_512: Tensor[(64, 256, 1, 1), float32], %onnx::Conv_513: Tensor[(64), float32], %onnx::Conv_515: Tensor[(64, 64, 3, 3), float32], %onnx::Conv_516: Tensor[(64), float32], %onnx::Conv_518: Tensor[(256, 64, 1, 1), float32], %onnx::Conv_519: Tensor[(256), float32], %onnx::Conv_521: Tensor[(64, 256, 1, 1), float32], %onnx::Conv_522: Tensor[(64), float32], %onnx::Conv_524: Tensor[(64, 64, 3, 3), float32], %onnx::Conv_525: Tensor[(64), float32], %onnx::Conv_527: Tensor[(256, 64, 1, 1), float32], %onnx::Conv_528: Tensor[(256), float32], %onnx::Conv_530: Tensor[(128, 256, 1, 1), float32], %onnx::Conv_531: Tensor[(128), float32], %onnx::Conv_533: Tensor[(128, 128, 3, 3), float32], %onnx::Conv_534: Tensor[(128), float32], %onnx::Conv_536: Tensor[(512, 128, 1, 1), float32], %onnx::Conv_537: Tensor[(512), float32], %onnx::Conv_539: Tensor[(512, 256, 1, 1), float32], %onnx::Conv_540: Tensor[(512), float32], %onnx::Conv_542: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_543: Tensor[(128), float32], %onnx::Conv_545: Tensor[(128, 128, 3, 3), float32], %onnx::Conv_546: Tensor[(128), float32], %onnx::Conv_548: Tensor[(512, 128, 1, 1), float32], %onnx::Conv_549: Tensor[(512), float32], %onnx::Conv_551: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_552: Tensor[(128), float32], %onnx::Conv_554: Tensor[(128, 128, 3, 3), float32], %onnx::Conv_555: Tensor[(128), float32], %onnx::Conv_557: Tensor[(512, 128, 1, 1), float32], %onnx::Conv_558: Tensor[(512), float32], %onnx::Conv_560: Tensor[(128, 512, 1, 1), float32], %onnx::Conv_561: Tensor[(128), float32], %onnx::Conv_563: Tensor[(128, 128, 3, 3), float32], %onnx::Conv_564: Tensor[(128), float32], %onnx::Conv_566: Tensor[(512, 128, 1, 1), float32], %onnx::Conv_567: Tensor[(512), float32], %onnx::Conv_569: Tensor[(256, 512, 1, 1), float32], %onnx::Conv_570: Tensor[(256), float32], %onnx::Conv_572: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_573: Tensor[(256), float32], %onnx::Conv_575: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_576: Tensor[(1024), float32], %onnx::Conv_578: Tensor[(1024, 512, 1, 1), float32], %onnx::Conv_579: Tensor[(1024), float32], %onnx::Conv_581: Tensor[(256, 1024, 1, 1), float32], %onnx::Conv_582: Tensor[(256), float32], %onnx::Conv_584: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_585: Tensor[(256), float32], %onnx::Conv_587: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_588: Tensor[(1024), float32], %onnx::Conv_590: Tensor[(256, 1024, 1, 1), float32], %onnx::Conv_591: Tensor[(256), float32], %onnx::Conv_593: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_594: Tensor[(256), float32], %onnx::Conv_596: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_597: Tensor[(1024), float32], %onnx::Conv_599: Tensor[(256, 1024, 1, 1), float32], %onnx::Conv_600: Tensor[(256), float32], %onnx::Conv_602: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_603: Tensor[(256), float32], %onnx::Conv_605: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_606: Tensor[(1024), float32], %onnx::Conv_608: Tensor[(256, 1024, 1, 1), float32], %onnx::Conv_609: Tensor[(256), float32], %onnx::Conv_611: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_612: Tensor[(256), float32], %onnx::Conv_614: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_615: Tensor[(1024), float32], %onnx::Conv_617: Tensor[(256, 1024, 1, 1), float32], %onnx::Conv_618: Tensor[(256), float32], %onnx::Conv_620: Tensor[(256, 256, 3, 3), float32], %onnx::Conv_621: Tensor[(256), float32], %onnx::Conv_623: Tensor[(1024, 256, 1, 1), float32], %onnx::Conv_624: Tensor[(1024), float32], %onnx::Conv_626: Tensor[(512, 1024, 1, 1), float32], %onnx::Conv_627: Tensor[(512), float32], %onnx::Conv_629: Tensor[(512, 512, 3, 3), float32], %onnx::Conv_630: Tensor[(512), float32], %onnx::Conv_632: Tensor[(2048, 512, 1, 1), float32], %onnx::Conv_633: Tensor[(2048), float32], %onnx::Conv_635: Tensor[(2048, 1024, 1, 1), float32], %onnx::Conv_636: Tensor[(2048), float32], %onnx::Conv_638: Tensor[(512, 2048, 1, 1), float32], %onnx::Conv_639: Tensor[(512), float32], %onnx::Conv_641: Tensor[(512, 512, 3, 3), float32], %onnx::Conv_642: Tensor[(512), float32], %onnx::Conv_644: Tensor[(2048, 512, 1, 1), float32], %onnx::Conv_645: Tensor[(2048), float32], %onnx::Conv_647: Tensor[(512, 2048, 1, 1), float32], %onnx::Conv_648: Tensor[(512), float32], %onnx::Conv_650: Tensor[(512, 512, 3, 3), float32], %onnx::Conv_651: Tensor[(512), float32], %onnx::Conv_653: Tensor[(2048, 512, 1, 1), float32], %onnx::Conv_654: Tensor[(2048), float32]) -> Tensor[(15, 1000), float32] {
  %0 = nn.conv2d(%data, %onnx::Conv_497, strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]) /* ty=Tensor[(15, 64, 112, 112), float32] */;
  %1 = nn.bias_add(%0, %onnx::Conv_498) /* ty=Tensor[(15, 64, 112, 112), float32] */;
  %2 = nn.relu(%1) /* ty=Tensor[(15, 64, 112, 112), float32] */;
  %3 = nn.max_pool2d(%2, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %4 = nn.conv2d(%3, %onnx::Conv_500, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %5 = nn.bias_add(%4, %onnx::Conv_501) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %6 = nn.relu(%5) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %7 = nn.conv2d(%6, %onnx::Conv_503, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %8 = nn.bias_add(%7, %onnx::Conv_504) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %9 = nn.relu(%8) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %10 = nn.conv2d(%9, %onnx::Conv_506, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %11 = nn.conv2d(%3, %onnx::Conv_509, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %12 = nn.bias_add(%10, %onnx::Conv_507) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %13 = nn.bias_add(%11, %onnx::Conv_510) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %14 = add(%12, %13) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %15 = nn.relu(%14) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %16 = nn.conv2d(%15, %onnx::Conv_512, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %17 = nn.bias_add(%16, %onnx::Conv_513) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %18 = nn.relu(%17) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %19 = nn.conv2d(%18, %onnx::Conv_515, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %20 = nn.bias_add(%19, %onnx::Conv_516) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %21 = nn.relu(%20) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %22 = nn.conv2d(%21, %onnx::Conv_518, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %23 = nn.bias_add(%22, %onnx::Conv_519) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %24 = add(%23, %15) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %25 = nn.relu(%24) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %26 = nn.conv2d(%25, %onnx::Conv_521, padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %27 = nn.bias_add(%26, %onnx::Conv_522) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %28 = nn.relu(%27) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %29 = nn.conv2d(%28, %onnx::Conv_524, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %30 = nn.bias_add(%29, %onnx::Conv_525) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %31 = nn.relu(%30) /* ty=Tensor[(15, 64, 56, 56), float32] */;
  %32 = nn.conv2d(%31, %onnx::Conv_527, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %33 = nn.bias_add(%32, %onnx::Conv_528) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %34 = add(%33, %25) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %35 = nn.relu(%34) /* ty=Tensor[(15, 256, 56, 56), float32] */;
  %36 = nn.conv2d(%35, %onnx::Conv_530, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 56, 56), float32] */;
  %37 = nn.bias_add(%36, %onnx::Conv_531) /* ty=Tensor[(15, 128, 56, 56), float32] */;
  %38 = nn.relu(%37) /* ty=Tensor[(15, 128, 56, 56), float32] */;
  %39 = nn.conv2d(%38, %onnx::Conv_533, strides=[2, 2], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %40 = nn.bias_add(%39, %onnx::Conv_534) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %41 = nn.relu(%40) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %42 = nn.conv2d(%41, %onnx::Conv_536, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %43 = nn.conv2d(%35, %onnx::Conv_539, strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %44 = nn.bias_add(%42, %onnx::Conv_537) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %45 = nn.bias_add(%43, %onnx::Conv_540) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %46 = add(%44, %45) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %47 = nn.relu(%46) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %48 = nn.conv2d(%47, %onnx::Conv_542, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %49 = nn.bias_add(%48, %onnx::Conv_543) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %50 = nn.relu(%49) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %51 = nn.conv2d(%50, %onnx::Conv_545, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %52 = nn.bias_add(%51, %onnx::Conv_546) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %53 = nn.relu(%52) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %54 = nn.conv2d(%53, %onnx::Conv_548, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %55 = nn.bias_add(%54, %onnx::Conv_549) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %56 = add(%55, %47) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %57 = nn.relu(%56) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %58 = nn.conv2d(%57, %onnx::Conv_551, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %59 = nn.bias_add(%58, %onnx::Conv_552) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %60 = nn.relu(%59) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %61 = nn.conv2d(%60, %onnx::Conv_554, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %62 = nn.bias_add(%61, %onnx::Conv_555) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %63 = nn.relu(%62) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %64 = nn.conv2d(%63, %onnx::Conv_557, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %65 = nn.bias_add(%64, %onnx::Conv_558) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %66 = add(%65, %57) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %67 = nn.relu(%66) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %68 = nn.conv2d(%67, %onnx::Conv_560, padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %69 = nn.bias_add(%68, %onnx::Conv_561) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %70 = nn.relu(%69) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %71 = nn.conv2d(%70, %onnx::Conv_563, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %72 = nn.bias_add(%71, %onnx::Conv_564) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %73 = nn.relu(%72) /* ty=Tensor[(15, 128, 28, 28), float32] */;
  %74 = nn.conv2d(%73, %onnx::Conv_566, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %75 = nn.bias_add(%74, %onnx::Conv_567) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %76 = add(%75, %67) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %77 = nn.relu(%76) /* ty=Tensor[(15, 512, 28, 28), float32] */;
  %78 = nn.conv2d(%77, %onnx::Conv_569, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 28, 28), float32] */;
  %79 = nn.bias_add(%78, %onnx::Conv_570) /* ty=Tensor[(15, 256, 28, 28), float32] */;
  %80 = nn.relu(%79) /* ty=Tensor[(15, 256, 28, 28), float32] */;
  %81 = nn.conv2d(%80, %onnx::Conv_572, strides=[2, 2], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %82 = nn.bias_add(%81, %onnx::Conv_573) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %83 = nn.relu(%82) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %84 = nn.conv2d(%83, %onnx::Conv_575, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %85 = nn.conv2d(%77, %onnx::Conv_578, strides=[2, 2], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %86 = nn.bias_add(%84, %onnx::Conv_576) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %87 = nn.bias_add(%85, %onnx::Conv_579) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %88 = add(%86, %87) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %89 = nn.relu(%88) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %90 = nn.conv2d(%89, %onnx::Conv_581, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %91 = nn.bias_add(%90, %onnx::Conv_582) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %92 = nn.relu(%91) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %93 = nn.conv2d(%92, %onnx::Conv_584, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %94 = nn.bias_add(%93, %onnx::Conv_585) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %95 = nn.relu(%94) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %96 = nn.conv2d(%95, %onnx::Conv_587, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %97 = nn.bias_add(%96, %onnx::Conv_588) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %98 = add(%97, %89) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %99 = nn.relu(%98) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %100 = nn.conv2d(%99, %onnx::Conv_590, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %101 = nn.bias_add(%100, %onnx::Conv_591) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %102 = nn.relu(%101) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %103 = nn.conv2d(%102, %onnx::Conv_593, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %104 = nn.bias_add(%103, %onnx::Conv_594) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %105 = nn.relu(%104) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %106 = nn.conv2d(%105, %onnx::Conv_596, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %107 = nn.bias_add(%106, %onnx::Conv_597) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %108 = add(%107, %99) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %109 = nn.relu(%108) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %110 = nn.conv2d(%109, %onnx::Conv_599, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %111 = nn.bias_add(%110, %onnx::Conv_600) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %112 = nn.relu(%111) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %113 = nn.conv2d(%112, %onnx::Conv_602, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %114 = nn.bias_add(%113, %onnx::Conv_603) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %115 = nn.relu(%114) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %116 = nn.conv2d(%115, %onnx::Conv_605, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %117 = nn.bias_add(%116, %onnx::Conv_606) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %118 = add(%117, %109) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %119 = nn.relu(%118) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %120 = nn.conv2d(%119, %onnx::Conv_608, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %121 = nn.bias_add(%120, %onnx::Conv_609) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %122 = nn.relu(%121) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %123 = nn.conv2d(%122, %onnx::Conv_611, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %124 = nn.bias_add(%123, %onnx::Conv_612) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %125 = nn.relu(%124) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %126 = nn.conv2d(%125, %onnx::Conv_614, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %127 = nn.bias_add(%126, %onnx::Conv_615) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %128 = add(%127, %119) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %129 = nn.relu(%128) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %130 = nn.conv2d(%129, %onnx::Conv_617, padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %131 = nn.bias_add(%130, %onnx::Conv_618) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %132 = nn.relu(%131) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %133 = nn.conv2d(%132, %onnx::Conv_620, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %134 = nn.bias_add(%133, %onnx::Conv_621) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %135 = nn.relu(%134) /* ty=Tensor[(15, 256, 14, 14), float32] */;
  %136 = nn.conv2d(%135, %onnx::Conv_623, padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %137 = nn.bias_add(%136, %onnx::Conv_624) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %138 = add(%137, %129) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %139 = nn.relu(%138) /* ty=Tensor[(15, 1024, 14, 14), float32] */;
  %140 = nn.conv2d(%139, %onnx::Conv_626, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 14, 14), float32] */;
  %141 = nn.bias_add(%140, %onnx::Conv_627) /* ty=Tensor[(15, 512, 14, 14), float32] */;
  %142 = nn.relu(%141) /* ty=Tensor[(15, 512, 14, 14), float32] */;
  %143 = nn.conv2d(%142, %onnx::Conv_629, strides=[2, 2], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %144 = nn.bias_add(%143, %onnx::Conv_630) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %145 = nn.relu(%144) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %146 = nn.conv2d(%145, %onnx::Conv_632, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %147 = nn.conv2d(%139, %onnx::Conv_635, strides=[2, 2], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %148 = nn.bias_add(%146, %onnx::Conv_633) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %149 = nn.bias_add(%147, %onnx::Conv_636) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %150 = add(%148, %149) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %151 = nn.relu(%150) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %152 = nn.conv2d(%151, %onnx::Conv_638, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %153 = nn.bias_add(%152, %onnx::Conv_639) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %154 = nn.relu(%153) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %155 = nn.conv2d(%154, %onnx::Conv_641, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %156 = nn.bias_add(%155, %onnx::Conv_642) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %157 = nn.relu(%156) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %158 = nn.conv2d(%157, %onnx::Conv_644, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %159 = nn.bias_add(%158, %onnx::Conv_645) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %160 = add(%159, %151) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %161 = nn.relu(%160) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %162 = nn.conv2d(%161, %onnx::Conv_647, padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %163 = nn.bias_add(%162, %onnx::Conv_648) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %164 = nn.relu(%163) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %165 = nn.conv2d(%164, %onnx::Conv_650, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %166 = nn.bias_add(%165, %onnx::Conv_651) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %167 = nn.relu(%166) /* ty=Tensor[(15, 512, 7, 7), float32] */;
  %168 = nn.conv2d(%167, %onnx::Conv_653, padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %169 = nn.bias_add(%168, %onnx::Conv_654) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %170 = add(%169, %161) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %171 = nn.relu(%170) /* ty=Tensor[(15, 2048, 7, 7), float32] */;
  %172 = nn.global_avg_pool2d(%171) /* ty=Tensor[(15, 2048, 1, 1), float32] */;
  %173 = nn.batch_flatten(%172) /* ty=Tensor[(15, 2048), float32] */;
  %174 = nn.batch_flatten(%173) /* ty=Tensor[(15, 2048), float32] */;
  %175 = nn.dense(%174, %fc.weight, units=1000) /* ty=Tensor[(15, 1000), float32] */;
  %176 = multiply(1f /* ty=float32 */, %fc.bias) /* ty=Tensor[(1000), float32] */;
  add(%175, %176) /* ty=Tensor[(15, 1000), float32] */
}