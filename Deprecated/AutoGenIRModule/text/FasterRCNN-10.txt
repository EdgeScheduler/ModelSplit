def @main(%image: Tensor[(3, 224, 224), float32]) {
  %0 = expand_dims(%image, axis=0);
  %1 = nn.conv2d(%0, meta[relay.Constant][0], strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]);
  %2 = multiply(%1, meta[relay.Constant][1]);
  %3 = add(%2, meta[relay.Constant][2]);
  %4 = nn.relu(%3);
  %5 = nn.max_pool2d(%4, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]);
  %6 = nn.conv2d(%5, meta[relay.Constant][3], padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]);
  %7 = multiply(%6, meta[relay.Constant][4]);
  %8 = add(%7, meta[relay.Constant][5]);
  %9 = nn.relu(%8);
  %10 = nn.conv2d(%9, meta[relay.Constant][6], padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]);
  %11 = multiply(%10, meta[relay.Constant][7]);
  %12 = add(%11, meta[relay.Constant][8]);
  %13 = nn.relu(%12);
  %14 = nn.conv2d(%13, meta[relay.Constant][9], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %15 = multiply(%14, meta[relay.Constant][10]);
  %16 = nn.conv2d(%5, meta[relay.Constant][12], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %17 = multiply(%16, meta[relay.Constant][13]);
  %18 = add(%15, meta[relay.Constant][11]);
  %19 = add(%17, meta[relay.Constant][14]);
  %20 = add(%18, %19);
  %21 = nn.relu(%20);
  %22 = nn.conv2d(%21, meta[relay.Constant][15], padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]);
  %23 = multiply(%22, meta[relay.Constant][16]);
  %24 = add(%23, meta[relay.Constant][17]);
  %25 = nn.relu(%24);
  %26 = nn.conv2d(%25, meta[relay.Constant][18], padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]);
  %27 = multiply(%26, meta[relay.Constant][19]);
  %28 = add(%27, meta[relay.Constant][20]);
  %29 = nn.relu(%28);
  %30 = nn.conv2d(%29, meta[relay.Constant][21], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %31 = multiply(%30, meta[relay.Constant][22]);
  %32 = add(%31, meta[relay.Constant][23]);
  %33 = add(%32, %21);
  %34 = nn.relu(%33);
  %35 = nn.conv2d(%34, meta[relay.Constant][24], padding=[0, 0, 0, 0], channels=64, kernel_size=[1, 1]);
  %36 = multiply(%35, meta[relay.Constant][25]);
  %37 = add(%36, meta[relay.Constant][26]);
  %38 = nn.relu(%37);
  %39 = nn.conv2d(%38, meta[relay.Constant][27], padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3]);
  %40 = multiply(%39, meta[relay.Constant][28]);
  %41 = add(%40, meta[relay.Constant][29]);
  %42 = nn.relu(%41);
  %43 = nn.conv2d(%42, meta[relay.Constant][30], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %44 = multiply(%43, meta[relay.Constant][31]);
  %45 = add(%44, meta[relay.Constant][32]);
  %46 = add(%45, %34);
  %47 = nn.relu(%46);
  %48 = nn.conv2d(%47, meta[relay.Constant][33], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %49 = nn.conv2d(%47, meta[relay.Constant][35], strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]);
  %50 = multiply(%49, meta[relay.Constant][36]);
  %51 = add(%50, meta[relay.Constant][37]);
  %52 = nn.relu(%51);
  %53 = nn.conv2d(%52, meta[relay.Constant][38], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]);
  %54 = multiply(%53, meta[relay.Constant][39]);
  %55 = add(%54, meta[relay.Constant][40]);
  %56 = nn.relu(%55);
  %57 = nn.conv2d(%56, meta[relay.Constant][41], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %58 = multiply(%57, meta[relay.Constant][42]);
  %59 = nn.conv2d(%47, meta[relay.Constant][44], strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %60 = multiply(%59, meta[relay.Constant][45]);
  %61 = add(%58, meta[relay.Constant][43]);
  %62 = add(%60, meta[relay.Constant][46]);
  %63 = add(%61, %62);
  %64 = nn.relu(%63);
  %65 = nn.conv2d(%64, meta[relay.Constant][47], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]);
  %66 = multiply(%65, meta[relay.Constant][48]);
  %67 = add(%66, meta[relay.Constant][49]);
  %68 = nn.relu(%67);
  %69 = nn.conv2d(%68, meta[relay.Constant][50], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]);
  %70 = multiply(%69, meta[relay.Constant][51]);
  %71 = add(%70, meta[relay.Constant][52]);
  %72 = nn.relu(%71);
  %73 = nn.conv2d(%72, meta[relay.Constant][53], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %74 = multiply(%73, meta[relay.Constant][54]);
  %75 = add(%74, meta[relay.Constant][55]);
  %76 = add(%75, %64);
  %77 = nn.relu(%76);
  %78 = nn.conv2d(%77, meta[relay.Constant][56], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]);
  %79 = multiply(%78, meta[relay.Constant][57]);
  %80 = add(%79, meta[relay.Constant][58]);
  %81 = nn.relu(%80);
  %82 = nn.conv2d(%81, meta[relay.Constant][59], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]);
  %83 = multiply(%82, meta[relay.Constant][60]);
  %84 = add(%83, meta[relay.Constant][61]);
  %85 = nn.relu(%84);
  %86 = nn.conv2d(%85, meta[relay.Constant][62], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %87 = multiply(%86, meta[relay.Constant][63]);
  %88 = add(%87, meta[relay.Constant][64]);
  %89 = add(%88, %77);
  %90 = nn.relu(%89);
  %91 = nn.conv2d(%90, meta[relay.Constant][65], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1]);
  %92 = multiply(%91, meta[relay.Constant][66]);
  %93 = add(%92, meta[relay.Constant][67]);
  %94 = nn.relu(%93);
  %95 = nn.conv2d(%94, meta[relay.Constant][68], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3]);
  %96 = multiply(%95, meta[relay.Constant][69]);
  %97 = add(%96, meta[relay.Constant][70]);
  %98 = nn.relu(%97);
  %99 = nn.conv2d(%98, meta[relay.Constant][71], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %100 = multiply(%99, meta[relay.Constant][72]);
  %101 = add(%100, meta[relay.Constant][73]);
  %102 = add(%101, %90);
  %103 = nn.relu(%102);
  %104 = nn.conv2d(%103, meta[relay.Constant][74], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %105 = nn.conv2d(%103, meta[relay.Constant][76], strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %106 = multiply(%105, meta[relay.Constant][77]);
  %107 = add(%106, meta[relay.Constant][78]);
  %108 = nn.relu(%107);
  %109 = nn.conv2d(%108, meta[relay.Constant][79], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %110 = multiply(%109, meta[relay.Constant][80]);
  %111 = add(%110, meta[relay.Constant][81]);
  %112 = nn.relu(%111);
  %113 = nn.conv2d(%112, meta[relay.Constant][82], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %114 = multiply(%113, meta[relay.Constant][83]);
  %115 = nn.conv2d(%103, meta[relay.Constant][85], strides=[2, 2], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %116 = multiply(%115, meta[relay.Constant][86]);
  %117 = add(%114, meta[relay.Constant][84]);
  %118 = add(%116, meta[relay.Constant][87]);
  %119 = add(%117, %118);
  %120 = nn.relu(%119);
  %121 = nn.conv2d(%120, meta[relay.Constant][88], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %122 = multiply(%121, meta[relay.Constant][89]);
  %123 = add(%122, meta[relay.Constant][90]);
  %124 = nn.relu(%123);
  %125 = nn.conv2d(%124, meta[relay.Constant][91], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %126 = multiply(%125, meta[relay.Constant][92]);
  %127 = add(%126, meta[relay.Constant][93]);
  %128 = nn.relu(%127);
  %129 = nn.conv2d(%128, meta[relay.Constant][94], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %130 = multiply(%129, meta[relay.Constant][95]);
  %131 = add(%130, meta[relay.Constant][96]);
  %132 = add(%131, %120);
  %133 = nn.relu(%132);
  %134 = nn.conv2d(%133, meta[relay.Constant][97], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %135 = multiply(%134, meta[relay.Constant][98]);
  %136 = add(%135, meta[relay.Constant][99]);
  %137 = nn.relu(%136);
  %138 = nn.conv2d(%137, meta[relay.Constant][100], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %139 = multiply(%138, meta[relay.Constant][101]);
  %140 = add(%139, meta[relay.Constant][102]);
  %141 = nn.relu(%140);
  %142 = nn.conv2d(%141, meta[relay.Constant][103], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %143 = multiply(%142, meta[relay.Constant][104]);
  %144 = add(%143, meta[relay.Constant][105]);
  %145 = add(%144, %133);
  %146 = nn.relu(%145);
  %147 = nn.conv2d(%146, meta[relay.Constant][106], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %148 = multiply(%147, meta[relay.Constant][107]);
  %149 = add(%148, meta[relay.Constant][108]);
  %150 = nn.relu(%149);
  %151 = nn.conv2d(%150, meta[relay.Constant][109], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %152 = multiply(%151, meta[relay.Constant][110]);
  %153 = add(%152, meta[relay.Constant][111]);
  %154 = nn.relu(%153);
  %155 = nn.conv2d(%154, meta[relay.Constant][112], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %156 = multiply(%155, meta[relay.Constant][113]);
  %157 = add(%156, meta[relay.Constant][114]);
  %158 = add(%157, %146);
  %159 = nn.relu(%158);
  %160 = nn.conv2d(%159, meta[relay.Constant][115], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %161 = multiply(%160, meta[relay.Constant][116]);
  %162 = add(%161, meta[relay.Constant][117]);
  %163 = nn.relu(%162);
  %164 = nn.conv2d(%163, meta[relay.Constant][118], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %165 = multiply(%164, meta[relay.Constant][119]);
  %166 = add(%165, meta[relay.Constant][120]);
  %167 = nn.relu(%166);
  %168 = nn.conv2d(%167, meta[relay.Constant][121], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %169 = multiply(%168, meta[relay.Constant][122]);
  %170 = add(%169, meta[relay.Constant][123]);
  %171 = add(%170, %159);
  %172 = nn.relu(%171);
  %173 = nn.conv2d(%172, meta[relay.Constant][124], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %174 = multiply(%173, meta[relay.Constant][125]);
  %175 = add(%174, meta[relay.Constant][126]);
  %176 = nn.relu(%175);
  %177 = nn.conv2d(%176, meta[relay.Constant][127], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %178 = multiply(%177, meta[relay.Constant][128]);
  %179 = add(%178, meta[relay.Constant][129]);
  %180 = nn.relu(%179);
  %181 = nn.conv2d(%180, meta[relay.Constant][130], padding=[0, 0, 0, 0], channels=1024, kernel_size=[1, 1]);
  %182 = multiply(%181, meta[relay.Constant][131]);
  %183 = add(%182, meta[relay.Constant][132]);
  %184 = add(%183, %172);
  %185 = nn.relu(%184);
  %186 = nn.conv2d(%185, meta[relay.Constant][133], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %187 = nn.conv2d(%185, meta[relay.Constant][135], strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %188 = multiply(%187, meta[relay.Constant][136]);
  %189 = add(%188, meta[relay.Constant][137]);
  %190 = nn.relu(%189);
  %191 = nn.conv2d(%190, meta[relay.Constant][138], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]);
  %192 = multiply(%191, meta[relay.Constant][139]);
  %193 = add(%192, meta[relay.Constant][140]);
  %194 = nn.relu(%193);
  %195 = nn.conv2d(%194, meta[relay.Constant][141], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]);
  %196 = multiply(%195, meta[relay.Constant][142]);
  %197 = nn.conv2d(%185, meta[relay.Constant][144], strides=[2, 2], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]);
  %198 = multiply(%197, meta[relay.Constant][145]);
  %199 = add(%196, meta[relay.Constant][143]);
  %200 = add(%198, meta[relay.Constant][146]);
  %201 = add(%199, %200);
  %202 = nn.relu(%201);
  %203 = nn.conv2d(%202, meta[relay.Constant][147], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %204 = multiply(%203, meta[relay.Constant][148]);
  %205 = add(%204, meta[relay.Constant][149]);
  %206 = nn.relu(%205);
  %207 = nn.conv2d(%206, meta[relay.Constant][150], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]);
  %208 = multiply(%207, meta[relay.Constant][151]);
  %209 = add(%208, meta[relay.Constant][152]);
  %210 = nn.relu(%209);
  %211 = nn.conv2d(%210, meta[relay.Constant][153], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]);
  %212 = multiply(%211, meta[relay.Constant][154]);
  %213 = add(%212, meta[relay.Constant][155]);
  %214 = add(%213, %202);
  %215 = nn.relu(%214);
  %216 = nn.conv2d(%215, meta[relay.Constant][156], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1]);
  %217 = multiply(%216, meta[relay.Constant][157]);
  %218 = add(%217, meta[relay.Constant][158]);
  %219 = nn.relu(%218);
  %220 = nn.conv2d(%219, meta[relay.Constant][159], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3]);
  %221 = multiply(%220, meta[relay.Constant][160]);
  %222 = add(%221, meta[relay.Constant][161]);
  %223 = nn.relu(%222);
  %224 = nn.conv2d(%223, meta[relay.Constant][162], padding=[0, 0, 0, 0], channels=2048, kernel_size=[1, 1]);
  %225 = multiply(%224, meta[relay.Constant][163]);
  %226 = add(%225, meta[relay.Constant][164]);
  %227 = add(%226, %215);
  %228 = nn.relu(%227);
  %229 = nn.conv2d(%228, meta[relay.Constant][165], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1]);
  %230 = nn.bias_add(%229, meta[relay.Constant][166]);
  %231 = nn.bias_add(%186, meta[relay.Constant][134]);
  %232 = image.resize2d(%230, size=[14, 14], method="nearest_neighbor", coordinate_transformation_mode="asymmetric", rounding_method="");
  %233 = add(%231, %232);
  %234 = nn.bias_add(%104, meta[relay.Constant][75]);
  %235 = image.resize2d(%233, size=[28, 28], method="nearest_neighbor", coordinate_transformation_mode="asymmetric", rounding_method="");
  %236 = add(%234, %235);
  %237 = nn.bias_add(%48, meta[relay.Constant][34]);
  %238 = image.resize2d(%236, size=[56, 56], method="nearest_neighbor", coordinate_transformation_mode="asymmetric", rounding_method="");
  %239 = add(%237, %238);
  %240 = nn.conv2d(%239, meta[relay.Constant][167], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %241 = nn.bias_add(%240, meta[relay.Constant][168]);
  %242 = nn.conv2d(%241, meta[relay.Constant][169], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %243 = nn.bias_add(%242, meta[relay.Constant][170]);
  %244 = nn.relu(%243);
  %245 = nn.conv2d(%244, meta[relay.Constant][171], padding=[0, 0, 0, 0], channels=12, kernel_size=[1, 1]);
  %246 = nn.bias_add(%245, meta[relay.Constant][172]);
  %247 = reshape(%246, newshape=[1, -1, 4, 56, 56]);
  %248 = transpose(%247, axes=[0, 3, 4, 1, 2]);
  %249 = nn.conv2d(%244, meta[relay.Constant][173], padding=[0, 0, 0, 0], channels=3, kernel_size=[1, 1]);
  %250 = nn.bias_add(%249, meta[relay.Constant][174]);
  %251 = reshape(%250, newshape=[1, -1, 1, 56, 56]);
  %252 = transpose(%251, axes=[0, 3, 4, 1, 2]);
  %253 = reshape(%252, newshape=[1, -1, 1]);
  %254 = reshape(%253, newshape=[1, -1]);
  %255 = sigmoid(%254);
  %256 = topk(%255, k=1000, axis=1, dtype="int64");
  %257 = %256.1;
  %258 = squeeze(%257, axis=[0]);
  %259 = reshape(%248, newshape=[1, -1, 4]);
  %260 = shape_of(%259, dtype="int64");
  %261 = take(%260, 1);
  %262 = less(%258, 0);
  %263 = add(%258, %261);
  %264 = where(%262, %263, %258);
  %265 = take(%259, %264, axis=1);
  %266 = reshape(%265, newshape=[-1, 4]);
  %267 = strided_slice(%266, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %268 = less(%258, 0);
  %269 = add(%258, 9408);
  %270 = where(%268, %269, %258);
  %271 = take(meta[relay.Constant][175], %270, axis=1);
  %272 = reshape(%271, newshape=[-1, 4]);
  %273 = cast(%272, dtype="float32");
  %274 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %275 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %276 = take(%274, 2, axis=1);
  %277 = take(%275, 0, axis=1);
  %278 = subtract(%276, %277);
  %279 = add(%278, 1f);
  %280 = strided_slice(%279, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %281 = strided_slice(%267, begin=[0], end=[9223372036854775807], strides=[4], axes=[1]);
  %282 = expand_dims(%280, axis=1);
  %283 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %284 = take(%283, 0, axis=1);
  %285 = multiply(0.5f, %279);
  %286 = add(%284, %285);
  %287 = strided_slice(%286, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %288 = multiply(%281, %282);
  %289 = expand_dims(%287, axis=1);
  %290 = strided_slice(%266, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %291 = strided_slice(%290, begin=[2], end=[9223372036854775807], strides=[4], axes=[1]);
  %292 = clip(%291, a_min=-inff, a_max=4.13517f);
  %293 = strided_slice(%279, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %294 = exp(%292);
  %295 = expand_dims(%293, axis=1);
  %296 = multiply(%294, %295);
  %297 = add(%288, %289);
  %298 = multiply(%296, 0.5f);
  %299 = subtract(%297, %298);
  %300 = strided_slice(%266, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %301 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %302 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %303 = take(%301, 3, axis=1);
  %304 = take(%302, 1, axis=1);
  %305 = subtract(%303, %304);
  %306 = add(%305, 1f);
  %307 = strided_slice(%306, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %308 = strided_slice(%300, begin=[1], end=[9223372036854775807], strides=[4], axes=[1]);
  %309 = expand_dims(%307, axis=1);
  %310 = strided_slice(%273, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %311 = take(%310, 1, axis=1);
  %312 = multiply(0.5f, %306);
  %313 = add(%311, %312);
  %314 = strided_slice(%313, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %315 = multiply(%308, %309);
  %316 = expand_dims(%314, axis=1);
  %317 = strided_slice(%266, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %318 = strided_slice(%317, begin=[3], end=[9223372036854775807], strides=[4], axes=[1]);
  %319 = clip(%318, a_min=-inff, a_max=4.13517f);
  %320 = strided_slice(%306, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %321 = exp(%319);
  %322 = expand_dims(%320, axis=1);
  %323 = multiply(%321, %322);
  %324 = add(%315, %316);
  %325 = multiply(%323, 0.5f);
  %326 = subtract(%324, %325);
  %327 = multiply(%296, 0.5f);
  %328 = add(%297, %327);
  %329 = subtract(%328, 1f);
  %330 = multiply(%323, 0.5f);
  %331 = add(%324, %330);
  %332 = subtract(%331, 1f);
  %333 = expand_dims(%299, axis=2);
  %334 = expand_dims(%326, axis=2);
  %335 = expand_dims(%329, axis=2);
  %336 = expand_dims(%332, axis=2);
  %337 = (%333, %334, %335, %336);
  %338 = concatenate(%337, axis=2);
  %339 = reshape(%338, newshape=[1000, 4]);
  %340 = reshape(%339, newshape=[1, -1, 4]);
  %341 = take(%340, 0, axis=0);
  %342 = strided_slice(%341, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %343 = strided_slice(%342, begin=[0], end=[9223372036854775807], strides=[2], axes=[1]);
  %344 = clip(%343, a_min=0f, a_max=1279f);
  %345 = strided_slice(%341, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %346 = strided_slice(%345, begin=[1], end=[9223372036854775807], strides=[2], axes=[1]);
  %347 = clip(%346, a_min=0f, a_max=1279f);
  %348 = expand_dims(%344, axis=2);
  %349 = expand_dims(%347, axis=2);
  %350 = (%348, %349);
  %351 = concatenate(%350, axis=2);
  %352 = reshape(%351, newshape=[-1, 4]);
  %353 = %256.0;
  %354 = take(%353, 0, axis=0);
  %355 = expand_dims(%354, axis=0);
  %356 = expand_dims(%352, axis=0);
  %357 = expand_dims(%355, axis=0);
  %358 = vision.all_class_non_max_suppression(%356, %357, 2000, 0.7f, 0f);
  %359 = %358.0;
  %360 = shape_of(%359, dtype="int32");
  %361 = cast_like(%360, meta[relay.Constant][177]);
  %362 = slice_like(%361, meta[relay.Constant][177], axes=None);
  %363 = add(meta[relay.Constant][177], %362);
  %364 = where(meta[relay.Constant][176], %363, meta[relay.Constant][177]);
  %365 = greater_equal(%364, %362);
  %366 = where(%365, %362, %364);
  %367 = %358.1;
  %368 = dyn.strided_slice(%359, %366, %367, meta[relay.Constant][178], begin=None, end=None, strides=None, axes=None);
  %369 = take(%368, meta[relay.Constant][179], axis=1);
  %370 = squeeze(%369, axis=[1]);
  %371 = shape_of(%370, dtype="int32");
  %372 = cast_like(%371, meta[relay.Constant][181]);
  %373 = slice_like(%372, meta[relay.Constant][181], axes=None);
  %374 = add(meta[relay.Constant][181], %373);
  %375 = where(meta[relay.Constant][180], %374, meta[relay.Constant][181]);
  %376 = greater_equal(%375, %373);
  %377 = shape_of(%370, dtype="int64");
  %378 = where(%376, %373, %375);
  %379 = scatter(%377, meta[relay.Constant][182], meta[relay.Constant][183]);
  %380 = dyn.strided_slice(%370, %378, %379, meta[relay.Constant][184], begin=None, end=None, strides=None, axes=None);
  %381 = cast(%380, dtype="int64");
  %382 = shape_of(%352, dtype="int64");
  %383 = take(%382, 0);
  %384 = less(%381, 0);
  %385 = add(%381, %383);
  %386 = where(%384, %385, %381);
  %387 = nn.conv2d(%236, meta[relay.Constant][185], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %388 = nn.bias_add(%387, meta[relay.Constant][186]);
  %389 = nn.conv2d(%388, meta[relay.Constant][169], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %390 = nn.bias_add(%389, meta[relay.Constant][170]);
  %391 = nn.relu(%390);
  %392 = nn.conv2d(%391, meta[relay.Constant][171], padding=[0, 0, 0, 0], channels=12, kernel_size=[1, 1]);
  %393 = nn.bias_add(%392, meta[relay.Constant][172]);
  %394 = reshape(%393, newshape=[1, -1, 4, 28, 28]);
  %395 = transpose(%394, axes=[0, 3, 4, 1, 2]);
  %396 = nn.conv2d(%391, meta[relay.Constant][173], padding=[0, 0, 0, 0], channels=3, kernel_size=[1, 1]);
  %397 = nn.bias_add(%396, meta[relay.Constant][174]);
  %398 = reshape(%397, newshape=[1, -1, 1, 28, 28]);
  %399 = transpose(%398, axes=[0, 3, 4, 1, 2]);
  %400 = reshape(%399, newshape=[1, -1, 1]);
  %401 = reshape(%400, newshape=[1, -1]);
  %402 = sigmoid(%401);
  %403 = topk(%402, k=1000, axis=1, dtype="int64");
  %404 = %403.1;
  %405 = squeeze(%404, axis=[0]);
  %406 = reshape(%395, newshape=[1, -1, 4]);
  %407 = shape_of(%406, dtype="int64");
  %408 = take(%407, 1);
  %409 = less(%405, 0);
  %410 = add(%405, %408);
  %411 = where(%409, %410, %405);
  %412 = take(%406, %411, axis=1);
  %413 = reshape(%412, newshape=[-1, 4]);
  %414 = strided_slice(%413, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %415 = less(%405, 0);
  %416 = add(%405, 2352);
  %417 = where(%415, %416, %405);
  %418 = take(meta[relay.Constant][187], %417, axis=1);
  %419 = reshape(%418, newshape=[-1, 4]);
  %420 = cast(%419, dtype="float32");
  %421 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %422 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %423 = take(%421, 2, axis=1);
  %424 = take(%422, 0, axis=1);
  %425 = subtract(%423, %424);
  %426 = add(%425, 1f);
  %427 = strided_slice(%426, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %428 = strided_slice(%414, begin=[0], end=[9223372036854775807], strides=[4], axes=[1]);
  %429 = expand_dims(%427, axis=1);
  %430 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %431 = take(%430, 0, axis=1);
  %432 = multiply(0.5f, %426);
  %433 = add(%431, %432);
  %434 = strided_slice(%433, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %435 = multiply(%428, %429);
  %436 = expand_dims(%434, axis=1);
  %437 = strided_slice(%413, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %438 = strided_slice(%437, begin=[2], end=[9223372036854775807], strides=[4], axes=[1]);
  %439 = clip(%438, a_min=-inff, a_max=4.13517f);
  %440 = strided_slice(%426, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %441 = exp(%439);
  %442 = expand_dims(%440, axis=1);
  %443 = multiply(%441, %442);
  %444 = add(%435, %436);
  %445 = multiply(%443, 0.5f);
  %446 = subtract(%444, %445);
  %447 = strided_slice(%413, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %448 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %449 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %450 = take(%448, 3, axis=1);
  %451 = take(%449, 1, axis=1);
  %452 = subtract(%450, %451);
  %453 = add(%452, 1f);
  %454 = strided_slice(%453, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %455 = strided_slice(%447, begin=[1], end=[9223372036854775807], strides=[4], axes=[1]);
  %456 = expand_dims(%454, axis=1);
  %457 = strided_slice(%420, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %458 = take(%457, 1, axis=1);
  %459 = multiply(0.5f, %453);
  %460 = add(%458, %459);
  %461 = strided_slice(%460, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %462 = multiply(%455, %456);
  %463 = expand_dims(%461, axis=1);
  %464 = strided_slice(%413, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %465 = strided_slice(%464, begin=[3], end=[9223372036854775807], strides=[4], axes=[1]);
  %466 = clip(%465, a_min=-inff, a_max=4.13517f);
  %467 = strided_slice(%453, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %468 = exp(%466);
  %469 = expand_dims(%467, axis=1);
  %470 = multiply(%468, %469);
  %471 = add(%462, %463);
  %472 = multiply(%470, 0.5f);
  %473 = subtract(%471, %472);
  %474 = multiply(%443, 0.5f);
  %475 = add(%444, %474);
  %476 = subtract(%475, 1f);
  %477 = multiply(%470, 0.5f);
  %478 = add(%471, %477);
  %479 = subtract(%478, 1f);
  %480 = expand_dims(%446, axis=2);
  %481 = expand_dims(%473, axis=2);
  %482 = expand_dims(%476, axis=2);
  %483 = expand_dims(%479, axis=2);
  %484 = (%480, %481, %482, %483);
  %485 = concatenate(%484, axis=2);
  %486 = reshape(%485, newshape=[1000, 4]);
  %487 = reshape(%486, newshape=[1, -1, 4]);
  %488 = take(%487, 0, axis=0);
  %489 = strided_slice(%488, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %490 = strided_slice(%489, begin=[0], end=[9223372036854775807], strides=[2], axes=[1]);
  %491 = clip(%490, a_min=0f, a_max=1279f);
  %492 = strided_slice(%488, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %493 = strided_slice(%492, begin=[1], end=[9223372036854775807], strides=[2], axes=[1]);
  %494 = clip(%493, a_min=0f, a_max=1279f);
  %495 = expand_dims(%491, axis=2);
  %496 = expand_dims(%494, axis=2);
  %497 = (%495, %496);
  %498 = concatenate(%497, axis=2);
  %499 = reshape(%498, newshape=[-1, 4]);
  %500 = %403.0;
  %501 = take(%500, 0, axis=0);
  %502 = expand_dims(%501, axis=0);
  %503 = expand_dims(%499, axis=0);
  %504 = expand_dims(%502, axis=0);
  %505 = vision.all_class_non_max_suppression(%503, %504, 2000, 0.7f, 0f);
  %506 = %505.0;
  %507 = shape_of(%506, dtype="int32");
  %508 = cast_like(%507, meta[relay.Constant][189]);
  %509 = slice_like(%508, meta[relay.Constant][189], axes=None);
  %510 = add(meta[relay.Constant][189], %509);
  %511 = where(meta[relay.Constant][188], %510, meta[relay.Constant][189]);
  %512 = greater_equal(%511, %509);
  %513 = where(%512, %509, %511);
  %514 = %505.1;
  %515 = dyn.strided_slice(%506, %513, %514, meta[relay.Constant][190], begin=None, end=None, strides=None, axes=None);
  %516 = take(%515, meta[relay.Constant][191], axis=1);
  %517 = squeeze(%516, axis=[1]);
  %518 = shape_of(%517, dtype="int32");
  %519 = cast_like(%518, meta[relay.Constant][193]);
  %520 = slice_like(%519, meta[relay.Constant][193], axes=None);
  %521 = add(meta[relay.Constant][193], %520);
  %522 = where(meta[relay.Constant][192], %521, meta[relay.Constant][193]);
  %523 = greater_equal(%522, %520);
  %524 = shape_of(%517, dtype="int64");
  %525 = where(%523, %520, %522);
  %526 = scatter(%524, meta[relay.Constant][194], meta[relay.Constant][195]);
  %527 = dyn.strided_slice(%517, %525, %526, meta[relay.Constant][196], begin=None, end=None, strides=None, axes=None);
  %528 = cast(%527, dtype="int64");
  %529 = shape_of(%499, dtype="int64");
  %530 = take(%529, 0);
  %531 = less(%528, 0);
  %532 = add(%528, %530);
  %533 = where(%531, %532, %528);
  %534 = nn.conv2d(%233, meta[relay.Constant][197], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %535 = nn.bias_add(%534, meta[relay.Constant][198]);
  %536 = nn.conv2d(%535, meta[relay.Constant][169], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %537 = nn.bias_add(%536, meta[relay.Constant][170]);
  %538 = nn.relu(%537);
  %539 = nn.conv2d(%538, meta[relay.Constant][171], padding=[0, 0, 0, 0], channels=12, kernel_size=[1, 1]);
  %540 = nn.bias_add(%539, meta[relay.Constant][172]);
  %541 = reshape(%540, newshape=[1, -1, 4, 14, 14]);
  %542 = transpose(%541, axes=[0, 3, 4, 1, 2]);
  %543 = nn.conv2d(%538, meta[relay.Constant][173], padding=[0, 0, 0, 0], channels=3, kernel_size=[1, 1]);
  %544 = nn.bias_add(%543, meta[relay.Constant][174]);
  %545 = reshape(%544, newshape=[1, -1, 1, 14, 14]);
  %546 = transpose(%545, axes=[0, 3, 4, 1, 2]);
  %547 = reshape(%546, newshape=[1, -1, 1]);
  %548 = reshape(%547, newshape=[1, -1]);
  %549 = sigmoid(%548);
  %550 = topk(%549, k=588, axis=1, dtype="int64");
  %551 = %550.1;
  %552 = squeeze(%551, axis=[0]);
  %553 = reshape(%542, newshape=[1, -1, 4]);
  %554 = shape_of(%553, dtype="int64");
  %555 = take(%554, 1);
  %556 = less(%552, 0);
  %557 = add(%552, %555);
  %558 = where(%556, %557, %552);
  %559 = take(%553, %558, axis=1);
  %560 = reshape(%559, newshape=[-1, 4]);
  %561 = strided_slice(%560, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %562 = less(%552, 0);
  %563 = add(%552, 588);
  %564 = where(%562, %563, %552);
  %565 = take(meta[relay.Constant][199], %564, axis=1);
  %566 = reshape(%565, newshape=[-1, 4]);
  %567 = cast(%566, dtype="float32");
  %568 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %569 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %570 = take(%568, 2, axis=1);
  %571 = take(%569, 0, axis=1);
  %572 = subtract(%570, %571);
  %573 = add(%572, 1f);
  %574 = strided_slice(%573, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %575 = strided_slice(%561, begin=[0], end=[9223372036854775807], strides=[4], axes=[1]);
  %576 = expand_dims(%574, axis=1);
  %577 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %578 = take(%577, 0, axis=1);
  %579 = multiply(0.5f, %573);
  %580 = add(%578, %579);
  %581 = strided_slice(%580, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %582 = multiply(%575, %576);
  %583 = expand_dims(%581, axis=1);
  %584 = strided_slice(%560, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %585 = strided_slice(%584, begin=[2], end=[9223372036854775807], strides=[4], axes=[1]);
  %586 = clip(%585, a_min=-inff, a_max=4.13517f);
  %587 = strided_slice(%573, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %588 = exp(%586);
  %589 = expand_dims(%587, axis=1);
  %590 = multiply(%588, %589);
  %591 = add(%582, %583);
  %592 = multiply(%590, 0.5f);
  %593 = subtract(%591, %592);
  %594 = strided_slice(%560, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %595 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %596 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %597 = take(%595, 3, axis=1);
  %598 = take(%596, 1, axis=1);
  %599 = subtract(%597, %598);
  %600 = add(%599, 1f);
  %601 = strided_slice(%600, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %602 = strided_slice(%594, begin=[1], end=[9223372036854775807], strides=[4], axes=[1]);
  %603 = expand_dims(%601, axis=1);
  %604 = strided_slice(%567, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %605 = take(%604, 1, axis=1);
  %606 = multiply(0.5f, %600);
  %607 = add(%605, %606);
  %608 = strided_slice(%607, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %609 = multiply(%602, %603);
  %610 = expand_dims(%608, axis=1);
  %611 = strided_slice(%560, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %612 = strided_slice(%611, begin=[3], end=[9223372036854775807], strides=[4], axes=[1]);
  %613 = clip(%612, a_min=-inff, a_max=4.13517f);
  %614 = strided_slice(%600, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %615 = exp(%613);
  %616 = expand_dims(%614, axis=1);
  %617 = multiply(%615, %616);
  %618 = add(%609, %610);
  %619 = multiply(%617, 0.5f);
  %620 = subtract(%618, %619);
  %621 = multiply(%590, 0.5f);
  %622 = add(%591, %621);
  %623 = subtract(%622, 1f);
  %624 = multiply(%617, 0.5f);
  %625 = add(%618, %624);
  %626 = subtract(%625, 1f);
  %627 = expand_dims(%593, axis=2);
  %628 = expand_dims(%620, axis=2);
  %629 = expand_dims(%623, axis=2);
  %630 = expand_dims(%626, axis=2);
  %631 = (%627, %628, %629, %630);
  %632 = concatenate(%631, axis=2);
  %633 = reshape(%632, newshape=[588, 4]);
  %634 = reshape(%633, newshape=[1, -1, 4]);
  %635 = take(%634, 0, axis=0);
  %636 = strided_slice(%635, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %637 = strided_slice(%636, begin=[0], end=[9223372036854775807], strides=[2], axes=[1]);
  %638 = clip(%637, a_min=0f, a_max=1279f);
  %639 = strided_slice(%635, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %640 = strided_slice(%639, begin=[1], end=[9223372036854775807], strides=[2], axes=[1]);
  %641 = clip(%640, a_min=0f, a_max=1279f);
  %642 = expand_dims(%638, axis=2);
  %643 = expand_dims(%641, axis=2);
  %644 = (%642, %643);
  %645 = concatenate(%644, axis=2);
  %646 = reshape(%645, newshape=[-1, 4]);
  %647 = %550.0;
  %648 = take(%647, 0, axis=0);
  %649 = expand_dims(%648, axis=0);
  %650 = expand_dims(%646, axis=0);
  %651 = expand_dims(%649, axis=0);
  %652 = vision.all_class_non_max_suppression(%650, %651, 2000, 0.7f, 0f);
  %653 = %652.0;
  %654 = shape_of(%653, dtype="int32");
  %655 = cast_like(%654, meta[relay.Constant][201]);
  %656 = slice_like(%655, meta[relay.Constant][201], axes=None);
  %657 = add(meta[relay.Constant][201], %656);
  %658 = where(meta[relay.Constant][200], %657, meta[relay.Constant][201]);
  %659 = greater_equal(%658, %656);
  %660 = where(%659, %656, %658);
  %661 = %652.1;
  %662 = dyn.strided_slice(%653, %660, %661, meta[relay.Constant][202], begin=None, end=None, strides=None, axes=None);
  %663 = take(%662, meta[relay.Constant][203], axis=1);
  %664 = squeeze(%663, axis=[1]);
  %665 = shape_of(%664, dtype="int32");
  %666 = cast_like(%665, meta[relay.Constant][205]);
  %667 = slice_like(%666, meta[relay.Constant][205], axes=None);
  %668 = add(meta[relay.Constant][205], %667);
  %669 = where(meta[relay.Constant][204], %668, meta[relay.Constant][205]);
  %670 = greater_equal(%669, %667);
  %671 = shape_of(%664, dtype="int64");
  %672 = where(%670, %667, %669);
  %673 = scatter(%671, meta[relay.Constant][206], meta[relay.Constant][207]);
  %674 = dyn.strided_slice(%664, %672, %673, meta[relay.Constant][208], begin=None, end=None, strides=None, axes=None);
  %675 = cast(%674, dtype="int64");
  %676 = shape_of(%646, dtype="int64");
  %677 = take(%676, 0);
  %678 = less(%675, 0);
  %679 = add(%675, %677);
  %680 = where(%678, %679, %675);
  %681 = nn.conv2d(%230, meta[relay.Constant][209], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %682 = nn.bias_add(%681, meta[relay.Constant][210]);
  %683 = nn.conv2d(%682, meta[relay.Constant][169], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %684 = nn.bias_add(%683, meta[relay.Constant][170]);
  %685 = nn.relu(%684);
  %686 = nn.conv2d(%685, meta[relay.Constant][171], padding=[0, 0, 0, 0], channels=12, kernel_size=[1, 1]);
  %687 = nn.bias_add(%686, meta[relay.Constant][172]);
  %688 = reshape(%687, newshape=[1, -1, 4, 7, 7]);
  %689 = transpose(%688, axes=[0, 3, 4, 1, 2]);
  %690 = nn.conv2d(%685, meta[relay.Constant][173], padding=[0, 0, 0, 0], channels=3, kernel_size=[1, 1]);
  %691 = nn.bias_add(%690, meta[relay.Constant][174]);
  %692 = reshape(%691, newshape=[1, -1, 1, 7, 7]);
  %693 = transpose(%692, axes=[0, 3, 4, 1, 2]);
  %694 = reshape(%693, newshape=[1, -1, 1]);
  %695 = reshape(%694, newshape=[1, -1]);
  %696 = sigmoid(%695);
  %697 = topk(%696, k=147, axis=1, dtype="int64");
  %698 = %697.1;
  %699 = squeeze(%698, axis=[0]);
  %700 = reshape(%689, newshape=[1, -1, 4]);
  %701 = shape_of(%700, dtype="int64");
  %702 = take(%701, 1);
  %703 = less(%699, 0);
  %704 = add(%699, %702);
  %705 = where(%703, %704, %699);
  %706 = take(%700, %705, axis=1);
  %707 = reshape(%706, newshape=[-1, 4]);
  %708 = strided_slice(%707, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %709 = less(%699, 0);
  %710 = add(%699, 147);
  %711 = where(%709, %710, %699);
  %712 = take(meta[relay.Constant][211], %711, axis=1);
  %713 = reshape(%712, newshape=[-1, 4]);
  %714 = cast(%713, dtype="float32");
  %715 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %716 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %717 = take(%715, 2, axis=1);
  %718 = take(%716, 0, axis=1);
  %719 = subtract(%717, %718);
  %720 = add(%719, 1f);
  %721 = strided_slice(%720, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %722 = strided_slice(%708, begin=[0], end=[9223372036854775807], strides=[4], axes=[1]);
  %723 = expand_dims(%721, axis=1);
  %724 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %725 = take(%724, 0, axis=1);
  %726 = multiply(0.5f, %720);
  %727 = add(%725, %726);
  %728 = strided_slice(%727, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %729 = multiply(%722, %723);
  %730 = expand_dims(%728, axis=1);
  %731 = strided_slice(%707, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %732 = strided_slice(%731, begin=[2], end=[9223372036854775807], strides=[4], axes=[1]);
  %733 = clip(%732, a_min=-inff, a_max=4.13517f);
  %734 = strided_slice(%720, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %735 = exp(%733);
  %736 = expand_dims(%734, axis=1);
  %737 = multiply(%735, %736);
  %738 = add(%729, %730);
  %739 = multiply(%737, 0.5f);
  %740 = subtract(%738, %739);
  %741 = strided_slice(%707, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %742 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %743 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %744 = take(%742, 3, axis=1);
  %745 = take(%743, 1, axis=1);
  %746 = subtract(%744, %745);
  %747 = add(%746, 1f);
  %748 = strided_slice(%747, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %749 = strided_slice(%741, begin=[1], end=[9223372036854775807], strides=[4], axes=[1]);
  %750 = expand_dims(%748, axis=1);
  %751 = strided_slice(%714, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %752 = take(%751, 1, axis=1);
  %753 = multiply(0.5f, %747);
  %754 = add(%752, %753);
  %755 = strided_slice(%754, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %756 = multiply(%749, %750);
  %757 = expand_dims(%755, axis=1);
  %758 = strided_slice(%707, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %759 = strided_slice(%758, begin=[3], end=[9223372036854775807], strides=[4], axes=[1]);
  %760 = clip(%759, a_min=-inff, a_max=4.13517f);
  %761 = strided_slice(%747, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %762 = exp(%760);
  %763 = expand_dims(%761, axis=1);
  %764 = multiply(%762, %763);
  %765 = add(%756, %757);
  %766 = multiply(%764, 0.5f);
  %767 = subtract(%765, %766);
  %768 = multiply(%737, 0.5f);
  %769 = add(%738, %768);
  %770 = subtract(%769, 1f);
  %771 = multiply(%764, 0.5f);
  %772 = add(%765, %771);
  %773 = subtract(%772, 1f);
  %774 = expand_dims(%740, axis=2);
  %775 = expand_dims(%767, axis=2);
  %776 = expand_dims(%770, axis=2);
  %777 = expand_dims(%773, axis=2);
  %778 = (%774, %775, %776, %777);
  %779 = concatenate(%778, axis=2);
  %780 = reshape(%779, newshape=[147, 4]);
  %781 = reshape(%780, newshape=[1, -1, 4]);
  %782 = take(%781, 0, axis=0);
  %783 = strided_slice(%782, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %784 = strided_slice(%783, begin=[0], end=[9223372036854775807], strides=[2], axes=[1]);
  %785 = clip(%784, a_min=0f, a_max=1279f);
  %786 = strided_slice(%782, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %787 = strided_slice(%786, begin=[1], end=[9223372036854775807], strides=[2], axes=[1]);
  %788 = clip(%787, a_min=0f, a_max=1279f);
  %789 = expand_dims(%785, axis=2);
  %790 = expand_dims(%788, axis=2);
  %791 = (%789, %790);
  %792 = concatenate(%791, axis=2);
  %793 = reshape(%792, newshape=[-1, 4]);
  %794 = %697.0;
  %795 = take(%794, 0, axis=0);
  %796 = expand_dims(%795, axis=0);
  %797 = expand_dims(%793, axis=0);
  %798 = expand_dims(%796, axis=0);
  %799 = vision.all_class_non_max_suppression(%797, %798, 2000, 0.7f, 0f);
  %800 = %799.0;
  %801 = shape_of(%800, dtype="int32");
  %802 = cast_like(%801, meta[relay.Constant][213]);
  %803 = slice_like(%802, meta[relay.Constant][213], axes=None);
  %804 = add(meta[relay.Constant][213], %803);
  %805 = where(meta[relay.Constant][212], %804, meta[relay.Constant][213]);
  %806 = greater_equal(%805, %803);
  %807 = where(%806, %803, %805);
  %808 = %799.1;
  %809 = dyn.strided_slice(%800, %807, %808, meta[relay.Constant][214], begin=None, end=None, strides=None, axes=None);
  %810 = take(%809, meta[relay.Constant][215], axis=1);
  %811 = squeeze(%810, axis=[1]);
  %812 = shape_of(%811, dtype="int32");
  %813 = cast_like(%812, meta[relay.Constant][217]);
  %814 = slice_like(%813, meta[relay.Constant][217], axes=None);
  %815 = add(meta[relay.Constant][217], %814);
  %816 = where(meta[relay.Constant][216], %815, meta[relay.Constant][217]);
  %817 = greater_equal(%816, %814);
  %818 = shape_of(%811, dtype="int64");
  %819 = where(%817, %814, %816);
  %820 = scatter(%818, meta[relay.Constant][218], meta[relay.Constant][219]);
  %821 = dyn.strided_slice(%811, %819, %820, meta[relay.Constant][220], begin=None, end=None, strides=None, axes=None);
  %822 = cast(%821, dtype="int64");
  %823 = shape_of(%793, dtype="int64");
  %824 = take(%823, 0);
  %825 = less(%822, 0);
  %826 = add(%822, %824);
  %827 = where(%825, %826, %822);
  %828 = nn.max_pool2d(%682, pool_size=[1, 1], strides=[2, 2], padding=[0, 0, 0, 0]);
  %829 = nn.conv2d(%828, meta[relay.Constant][169], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3]);
  %830 = nn.bias_add(%829, meta[relay.Constant][170]);
  %831 = nn.relu(%830);
  %832 = nn.conv2d(%831, meta[relay.Constant][171], padding=[0, 0, 0, 0], channels=12, kernel_size=[1, 1]);
  %833 = nn.bias_add(%832, meta[relay.Constant][172]);
  %834 = reshape(%833, newshape=[1, -1, 4, 4, 4]);
  %835 = transpose(%834, axes=[0, 3, 4, 1, 2]);
  %836 = nn.conv2d(%831, meta[relay.Constant][173], padding=[0, 0, 0, 0], channels=3, kernel_size=[1, 1]);
  %837 = nn.bias_add(%836, meta[relay.Constant][174]);
  %838 = reshape(%837, newshape=[1, -1, 1, 4, 4]);
  %839 = transpose(%838, axes=[0, 3, 4, 1, 2]);
  %840 = reshape(%839, newshape=[1, -1, 1]);
  %841 = reshape(%840, newshape=[1, -1]);
  %842 = sigmoid(%841);
  %843 = topk(%842, k=48, axis=1, dtype="int64");
  %844 = %843.1;
  %845 = squeeze(%844, axis=[0]);
  %846 = reshape(%835, newshape=[1, -1, 4]);
  %847 = shape_of(%846, dtype="int64");
  %848 = take(%847, 1);
  %849 = less(%845, 0);
  %850 = add(%845, %848);
  %851 = where(%849, %850, %845);
  %852 = take(%846, %851, axis=1);
  %853 = reshape(%852, newshape=[-1, 4]);
  %854 = strided_slice(%853, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %855 = less(%845, 0);
  %856 = add(%845, 48);
  %857 = where(%855, %856, %845);
  %858 = take(meta[relay.Constant][221], %857, axis=1);
  %859 = reshape(%858, newshape=[-1, 4]);
  %860 = cast(%859, dtype="float32");
  %861 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %862 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %863 = take(%861, 2, axis=1);
  %864 = take(%862, 0, axis=1);
  %865 = subtract(%863, %864);
  %866 = add(%865, 1f);
  %867 = strided_slice(%866, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %868 = strided_slice(%854, begin=[0], end=[9223372036854775807], strides=[4], axes=[1]);
  %869 = expand_dims(%867, axis=1);
  %870 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %871 = take(%870, 0, axis=1);
  %872 = multiply(0.5f, %866);
  %873 = add(%871, %872);
  %874 = strided_slice(%873, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %875 = multiply(%868, %869);
  %876 = expand_dims(%874, axis=1);
  %877 = strided_slice(%853, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %878 = strided_slice(%877, begin=[2], end=[9223372036854775807], strides=[4], axes=[1]);
  %879 = clip(%878, a_min=-inff, a_max=4.13517f);
  %880 = strided_slice(%866, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %881 = exp(%879);
  %882 = expand_dims(%880, axis=1);
  %883 = multiply(%881, %882);
  %884 = add(%875, %876);
  %885 = multiply(%883, 0.5f);
  %886 = subtract(%884, %885);
  %887 = strided_slice(%853, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %888 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %889 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %890 = take(%888, 3, axis=1);
  %891 = take(%889, 1, axis=1);
  %892 = subtract(%890, %891);
  %893 = add(%892, 1f);
  %894 = strided_slice(%893, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %895 = strided_slice(%887, begin=[1], end=[9223372036854775807], strides=[4], axes=[1]);
  %896 = expand_dims(%894, axis=1);
  %897 = strided_slice(%860, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %898 = take(%897, 1, axis=1);
  %899 = multiply(0.5f, %893);
  %900 = add(%898, %899);
  %901 = strided_slice(%900, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %902 = multiply(%895, %896);
  %903 = expand_dims(%901, axis=1);
  %904 = strided_slice(%853, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %905 = strided_slice(%904, begin=[3], end=[9223372036854775807], strides=[4], axes=[1]);
  %906 = clip(%905, a_min=-inff, a_max=4.13517f);
  %907 = strided_slice(%893, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %908 = exp(%906);
  %909 = expand_dims(%907, axis=1);
  %910 = multiply(%908, %909);
  %911 = add(%902, %903);
  %912 = multiply(%910, 0.5f);
  %913 = subtract(%911, %912);
  %914 = multiply(%883, 0.5f);
  %915 = add(%884, %914);
  %916 = subtract(%915, 1f);
  %917 = multiply(%910, 0.5f);
  %918 = add(%911, %917);
  %919 = subtract(%918, 1f);
  %920 = expand_dims(%886, axis=2);
  %921 = expand_dims(%913, axis=2);
  %922 = expand_dims(%916, axis=2);
  %923 = expand_dims(%919, axis=2);
  %924 = (%920, %921, %922, %923);
  %925 = concatenate(%924, axis=2);
  %926 = reshape(%925, newshape=[48, 4]);
  %927 = reshape(%926, newshape=[1, -1, 4]);
  %928 = take(%927, 0, axis=0);
  %929 = strided_slice(%928, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %930 = strided_slice(%929, begin=[0], end=[9223372036854775807], strides=[2], axes=[1]);
  %931 = clip(%930, a_min=0f, a_max=1279f);
  %932 = strided_slice(%928, begin=[0], end=[9223372036854775807], strides=[1], axes=[0]);
  %933 = strided_slice(%932, begin=[1], end=[9223372036854775807], strides=[2], axes=[1]);
  %934 = clip(%933, a_min=0f, a_max=1279f);
  %935 = expand_dims(%931, axis=2);
  %936 = expand_dims(%934, axis=2);
  %937 = (%935, %936);
  %938 = concatenate(%937, axis=2);
  %939 = reshape(%938, newshape=[-1, 4]);
  %940 = %843.0;
  %941 = take(%940, 0, axis=0);
  %942 = expand_dims(%941, axis=0);
  %943 = expand_dims(%939, axis=0);
  %944 = expand_dims(%942, axis=0);
  %945 = vision.all_class_non_max_suppression(%943, %944, 2000, 0.7f, 0f);
  %946 = %945.0;
  %947 = shape_of(%946, dtype="int32");
  %948 = cast_like(%947, meta[relay.Constant][223]);
  %949 = slice_like(%948, meta[relay.Constant][223], axes=None);
  %950 = add(meta[relay.Constant][223], %949);
  %951 = where(meta[relay.Constant][222], %950, meta[relay.Constant][223]);
  %952 = greater_equal(%951, %949);
  %953 = where(%952, %949, %951);
  %954 = %945.1;
  %955 = dyn.strided_slice(%946, %953, %954, meta[relay.Constant][224], begin=None, end=None, strides=None, axes=None);
  %956 = take(%955, meta[relay.Constant][225], axis=1);
  %957 = squeeze(%956, axis=[1]);
  %958 = shape_of(%957, dtype="int32");
  %959 = cast_like(%958, meta[relay.Constant][227]);
  %960 = slice_like(%959, meta[relay.Constant][227], axes=None);
  %961 = add(meta[relay.Constant][227], %960);
  %962 = where(meta[relay.Constant][226], %961, meta[relay.Constant][227]);
  %963 = greater_equal(%962, %960);
  %964 = shape_of(%957, dtype="int64");
  %965 = where(%963, %960, %962);
  %966 = scatter(%964, meta[relay.Constant][228], meta[relay.Constant][229]);
  %967 = dyn.strided_slice(%957, %965, %966, meta[relay.Constant][230], begin=None, end=None, strides=None, axes=None);
  %968 = cast(%967, dtype="int64");
  %969 = shape_of(%939, dtype="int64");
  %970 = take(%969, 0);
  %971 = less(%968, 0);
  %972 = add(%968, %970);
  %973 = where(%971, %972, %968);
  %974 = take(%352, %386, axis=0);
  %975 = take(%499, %533, axis=0);
  %976 = take(%646, %680, axis=0);
  %977 = take(%793, %827, axis=0);
  %978 = take(%939, %973, axis=0);
  %979 = (%974, %975, %976, %977, %978);
  %980 = cast(%381, dtype="int64");
  %981 = shape_of(%354, dtype="int64");
  %982 = take(%981, 0);
  %983 = less(%980, 0);
  %984 = add(%980, %982);
  %985 = where(%983, %984, %980);
  %986 = cast(%528, dtype="int64");
  %987 = shape_of(%501, dtype="int64");
  %988 = take(%987, 0);
  %989 = less(%986, 0);
  %990 = add(%986, %988);
  %991 = where(%989, %990, %986);
  %992 = cast(%675, dtype="int64");
  %993 = shape_of(%648, dtype="int64");
  %994 = take(%993, 0);
  %995 = less(%992, 0);
  %996 = add(%992, %994);
  %997 = where(%995, %996, %992);
  %998 = cast(%822, dtype="int64");
  %999 = shape_of(%795, dtype="int64");
  %1000 = take(%999, 0);
  %1001 = less(%998, 0);
  %1002 = add(%998, %1000);
  %1003 = where(%1001, %1002, %998);
  %1004 = cast(%968, dtype="int64");
  %1005 = shape_of(%941, dtype="int64");
  %1006 = take(%1005, 0);
  %1007 = less(%1004, 0);
  %1008 = add(%1004, %1006);
  %1009 = where(%1007, %1008, %1004);
  %1010 = take(%354, %985, axis=0);
  %1011 = take(%501, %991, axis=0);
  %1012 = take(%648, %997, axis=0);
  %1013 = take(%795, %1003, axis=0);
  %1014 = take(%941, %1009, axis=0);
  %1015 = (%1010, %1011, %1012, %1013, %1014);
  %1016 = concatenate(%1015);
  %1017 = shape_of(%1016, dtype="int64");
  %1018 = (meta[relay.Constant][231], %1017);
  %1019 = concatenate(%1018);
  %1020 = cast(%1019, dtype="int32");
  %1021 = min(%1020, axis=[0]);
  %1022 = cast(%1021, dtype="int64");
  %1023 = expand_dims(%1022, axis=0);
  %1024 = dyn.topk(%1016, %1023, k=None, axis=0, dtype="int64");
  %1025 = %1024.1;
  %1026 = cast(%1025, dtype="int64");
  %1027 = concatenate(%979);
  %1028 = shape_of(%1027, dtype="int64");
  %1029 = take(%1028, 0);
  %1030 = less(%1026, 0);
  %1031 = add(%1026, %1029);
  %1032 = where(%1030, %1031, %1026);
  %1033 = take(%1027, %1032, axis=0);
  %1034 = shape_of(%1033, dtype="int32");
  %1035 = cast_like(%1034, meta[relay.Constant][233]);
  %1036 = slice_like(%1035, meta[relay.Constant][233], axes=None);
  %1037 = add(meta[relay.Constant][233], %1036);
  %1038 = where(meta[relay.Constant][232], %1037, meta[relay.Constant][233]);
  %1039 = greater_equal(%1038, %1036);
  %1040 = shape_of(%1033, dtype="int64");
  %1041 = where(%1039, %1036, %1038);
  %1042 = scatter(%1040, meta[relay.Constant][234], meta[relay.Constant][235]);
  %1043 = dyn.strided_slice(%1033, %1041, %1042, meta[relay.Constant][236], begin=None, end=None, strides=None, axes=None);
  %1044 = shape_of(%1033, dtype="int32");
  %1045 = cast_like(%1044, meta[relay.Constant][238]);
  %1046 = slice_like(%1045, meta[relay.Constant][238], axes=None);
  %1047 = add(meta[relay.Constant][238], %1046);
  %1048 = where(meta[relay.Constant][237], %1047, meta[relay.Constant][238]);
  %1049 = greater_equal(%1048, %1046);
  %1050 = shape_of(%1033, dtype="int64");
  %1051 = where(%1049, %1046, %1048);
  %1052 = scatter(%1050, meta[relay.Constant][239], meta[relay.Constant][240]);
  %1053 = dyn.strided_slice(%1033, %1051, %1052, meta[relay.Constant][241], begin=None, end=None, strides=None, axes=None);
  %1054 = take(%1043, 2, axis=1);
  %1055 = take(%1053, 0, axis=1);
  %1056 = subtract(%1054, %1055);
  %1057 = shape_of(%1033, dtype="int32");
  %1058 = cast_like(%1057, meta[relay.Constant][243]);
  %1059 = slice_like(%1058, meta[relay.Constant][243], axes=None);
  %1060 = add(meta[relay.Constant][243], %1059);
  %1061 = where(meta[relay.Constant][242], %1060, meta[relay.Constant][243]);
  %1062 = greater_equal(%1061, %1059);
  %1063 = shape_of(%1033, dtype="int64");
  %1064 = where(%1062, %1059, %1061);
  %1065 = scatter(%1063, meta[relay.Constant][244], meta[relay.Constant][245]);
  %1066 = dyn.strided_slice(%1033, %1064, %1065, meta[relay.Constant][246], begin=None, end=None, strides=None, axes=None);
  %1067 = shape_of(%1033, dtype="int32");
  %1068 = cast_like(%1067, meta[relay.Constant][248]);
  %1069 = slice_like(%1068, meta[relay.Constant][248], axes=None);
  %1070 = add(meta[relay.Constant][248], %1069);
  %1071 = where(meta[relay.Constant][247], %1070, meta[relay.Constant][248]);
  %1072 = greater_equal(%1071, %1069);
  %1073 = shape_of(%1033, dtype="int64");
  %1074 = where(%1072, %1069, %1071);
  %1075 = scatter(%1073, meta[relay.Constant][249], meta[relay.Constant][250]);
  %1076 = dyn.strided_slice(%1033, %1074, %1075, meta[relay.Constant][251], begin=None, end=None, strides=None, axes=None);
  %1077 = take(%1066, 3, axis=1);
  %1078 = take(%1076, 1, axis=1);
  %1079 = subtract(%1077, %1078);
  %1080 = add(%1056, 1f);
  %1081 = add(%1079, 1f);
  %1082 = multiply(%1080, %1081);
  %1083 = sqrt(%1082);
  %1084 = divide(%1083, 224f);
  %1085 = add(1e-06f, %1084);
  %1086 = log(%1085);
  %1087 = divide(%1086, meta[relay.Constant][252]);
  %1088 = add(%1087, 4f);
  %1089 = floor(%1088);
  %1090 = clip(%1089, a_min=2f, a_max=5f);
  %1091 = cast(%1090, dtype="int64");
  %1092 = subtract(%1091, 2);
  %1093 = shape_of(%1092, dtype="int64");
  %1094 = take(%1093, 0, axis=0);
  %1095 = shape_of(%1033, dtype="int32");
  %1096 = cast_like(%1095, meta[relay.Constant][254]);
  %1097 = slice_like(%1096, meta[relay.Constant][254], axes=None);
  %1098 = add(meta[relay.Constant][254], %1097);
  %1099 = where(meta[relay.Constant][253], %1098, meta[relay.Constant][254]);
  %1100 = greater_equal(%1099, %1097);
  %1101 = shape_of(%1033, dtype="int64");
  %1102 = where(%1100, %1097, %1099);
  %1103 = scatter(%1101, meta[relay.Constant][255], meta[relay.Constant][256]);
  %1104 = dyn.strided_slice(%1033, %1102, %1103, meta[relay.Constant][257], begin=None, end=None, strides=None, axes=None);
  %1105 = shape_of(%1104, dtype="int32");
  %1106 = cast_like(%1105, meta[relay.Constant][259]);
  %1107 = slice_like(%1106, meta[relay.Constant][259], axes=None);
  %1108 = add(meta[relay.Constant][259], %1107);
  %1109 = where(meta[relay.Constant][258], %1108, meta[relay.Constant][259]);
  %1110 = greater_equal(%1109, %1107);
  %1111 = shape_of(%1104, dtype="int64");
  %1112 = where(%1110, %1107, %1109);
  %1113 = scatter(%1111, meta[relay.Constant][260], meta[relay.Constant][261]);
  %1114 = dyn.strided_slice(%1104, %1112, %1113, meta[relay.Constant][262], begin=None, end=None, strides=None, axes=None);
  %1115 = shape_of(%1114, dtype="int64");
  %1116 = dyn.full(0f, %1115, shape=None, dtype="float32");
  %1117 = (%1116, %1033);
  %1118 = equal(%1092, 0);
  %1119 = cast(%1118, dtype="uint8");
  %1120 = cast(%1119, dtype="float32");
  %1121 = argwhere(%1120);
  %1122 = cast(%1121, dtype="int64");
  %1123 = transpose(%1122, axes=[1, 0]);
  %1124 = transpose(%1123, axes=[1, 0]);
  %1125 = squeeze(%1124, axis=[1]);
  %1126 = cast(%1125, dtype="int64");
  %1127 = concatenate(%1117, axis=1);
  %1128 = shape_of(%1127, dtype="int64");
  %1129 = take(%1128, 0);
  %1130 = less(%1126, 0);
  %1131 = add(%1126, %1129);
  %1132 = where(%1130, %1131, %1126);
  %1133 = take(%1127, %1132, axis=0);
  %1134 = take(%1133, meta[relay.Constant][263], axis=1);
  %1135 = squeeze(%1134, axis=[1]);
  %1136 = cast(%1135, dtype="int64");
  %1137 = expand_dims(%1136, axis=1);
  %1138 = shape_of(%1133, dtype="int64");
  %1139 = take(%1138, 1);
  %1140 = add(meta[relay.Constant][265], %1139);
  %1141 = where(meta[relay.Constant][264], %1140, meta[relay.Constant][265]);
  %1142 = cast(%1137, dtype="float32");
  %1143 = take(%1133, %1141, axis=1);
  %1144 = (%1142, %1143);
  %1145 = concatenate(%1144, axis=1);
  %1146 = vision.roi_align(%241, %1145, pooled_size=[7, 7], spatial_scale=0.25f, sample_ratio=2);
  %1147 = shape_of(%1146, dtype="int64");
  %1148 = take(%1147, 1, axis=0);
  %1149 = shape_of(%1146, dtype="int64");
  %1150 = take(%1149, 2, axis=0);
  %1151 = shape_of(%1146, dtype="int64");
  %1152 = take(%1151, 3, axis=0);
  %1153 = expand_dims(%1094, axis=0);
  %1154 = expand_dims(%1148, axis=0);
  %1155 = expand_dims(%1150, axis=0);
  %1156 = expand_dims(%1152, axis=0);
  %1157 = (%1153, %1154, %1155, %1156);
  %1158 = concatenate(%1157);
  %1159 = equal(%1092, 0);
  %1160 = cast(%1159, dtype="uint8");
  %1161 = cast(%1160, dtype="float32");
  %1162 = argwhere(%1161);
  %1163 = cast(%1162, dtype="int64");
  %1164 = transpose(%1163, axes=[1, 0]);
  %1165 = transpose(%1164, axes=[1, 0]);
  %1166 = reshape(%1165, newshape=[-1, 1, 1, 1]);
  %1167 = shape_of(%1166, dtype="int64");
  %1168 = take(%1167, 0, axis=0);
  %1169 = shape_of(%1146, dtype="int64");
  %1170 = take(%1169, 1, axis=0);
  %1171 = shape_of(%1146, dtype="int64");
  %1172 = take(%1171, 2, axis=0);
  %1173 = shape_of(%1146, dtype="int64");
  %1174 = take(%1173, 3, axis=0);
  %1175 = expand_dims(%1168, axis=0);
  %1176 = expand_dims(%1170, axis=0);
  %1177 = expand_dims(%1172, axis=0);
  %1178 = expand_dims(%1174, axis=0);
  %1179 = (%1175, %1176, %1177, %1178);
  %1180 = shape_of(%1166, dtype="int64");
  %1181 = concatenate(%1179);
  %1182 = maximum(%1180, %1181);
  %1183 = dyn.broadcast_to(%1166, %1182, shape=None, dtype="");
  %1184 = dyn.full(0f, %1158, shape=None, dtype="float32");
  %1185 = cast(%1183, dtype="int64");
  %1186 = equal(%1092, 1);
  %1187 = cast(%1186, dtype="uint8");
  %1188 = cast(%1187, dtype="float32");
  %1189 = argwhere(%1188);
  %1190 = cast(%1189, dtype="int64");
  %1191 = transpose(%1190, axes=[1, 0]);
  %1192 = transpose(%1191, axes=[1, 0]);
  %1193 = reshape(%1192, newshape=[-1, 1, 1, 1]);
  %1194 = shape_of(%1193, dtype="int64");
  %1195 = take(%1194, 0, axis=0);
  %1196 = equal(%1092, 1);
  %1197 = cast(%1196, dtype="uint8");
  %1198 = cast(%1197, dtype="float32");
  %1199 = argwhere(%1198);
  %1200 = cast(%1199, dtype="int64");
  %1201 = transpose(%1200, axes=[1, 0]);
  %1202 = transpose(%1201, axes=[1, 0]);
  %1203 = squeeze(%1202, axis=[1]);
  %1204 = cast(%1203, dtype="int64");
  %1205 = shape_of(%1127, dtype="int64");
  %1206 = take(%1205, 0);
  %1207 = less(%1204, 0);
  %1208 = add(%1204, %1206);
  %1209 = where(%1207, %1208, %1204);
  %1210 = take(%1127, %1209, axis=0);
  %1211 = take(%1210, meta[relay.Constant][266], axis=1);
  %1212 = squeeze(%1211, axis=[1]);
  %1213 = cast(%1212, dtype="int64");
  %1214 = expand_dims(%1213, axis=1);
  %1215 = shape_of(%1210, dtype="int64");
  %1216 = take(%1215, 1);
  %1217 = add(meta[relay.Constant][268], %1216);
  %1218 = where(meta[relay.Constant][267], %1217, meta[relay.Constant][268]);
  %1219 = cast(%1214, dtype="float32");
  %1220 = take(%1210, %1218, axis=1);
  %1221 = (%1219, %1220);
  %1222 = concatenate(%1221, axis=1);
  %1223 = vision.roi_align(%388, %1222, pooled_size=[7, 7], spatial_scale=0.125f, sample_ratio=2);
  %1224 = shape_of(%1223, dtype="int64");
  %1225 = take(%1224, 1, axis=0);
  %1226 = shape_of(%1223, dtype="int64");
  %1227 = take(%1226, 2, axis=0);
  %1228 = shape_of(%1223, dtype="int64");
  %1229 = take(%1228, 3, axis=0);
  %1230 = expand_dims(%1195, axis=0);
  %1231 = expand_dims(%1225, axis=0);
  %1232 = expand_dims(%1227, axis=0);
  %1233 = expand_dims(%1229, axis=0);
  %1234 = (%1230, %1231, %1232, %1233);
  %1235 = shape_of(%1193, dtype="int64");
  %1236 = concatenate(%1234);
  %1237 = maximum(%1235, %1236);
  %1238 = dyn.broadcast_to(%1193, %1237, shape=None, dtype="");
  %1239 = scatter(%1184, %1185, %1146);
  %1240 = cast(%1238, dtype="int64");
  %1241 = equal(%1092, 2);
  %1242 = cast(%1241, dtype="uint8");
  %1243 = cast(%1242, dtype="float32");
  %1244 = argwhere(%1243);
  %1245 = cast(%1244, dtype="int64");
  %1246 = transpose(%1245, axes=[1, 0]);
  %1247 = transpose(%1246, axes=[1, 0]);
  %1248 = reshape(%1247, newshape=[-1, 1, 1, 1]);
  %1249 = shape_of(%1248, dtype="int64");
  %1250 = take(%1249, 0, axis=0);
  %1251 = equal(%1092, 2);
  %1252 = cast(%1251, dtype="uint8");
  %1253 = cast(%1252, dtype="float32");
  %1254 = argwhere(%1253);
  %1255 = cast(%1254, dtype="int64");
  %1256 = transpose(%1255, axes=[1, 0]);
  %1257 = transpose(%1256, axes=[1, 0]);
  %1258 = squeeze(%1257, axis=[1]);
  %1259 = cast(%1258, dtype="int64");
  %1260 = shape_of(%1127, dtype="int64");
  %1261 = take(%1260, 0);
  %1262 = less(%1259, 0);
  %1263 = add(%1259, %1261);
  %1264 = where(%1262, %1263, %1259);
  %1265 = take(%1127, %1264, axis=0);
  %1266 = take(%1265, meta[relay.Constant][269], axis=1);
  %1267 = squeeze(%1266, axis=[1]);
  %1268 = cast(%1267, dtype="int64");
  %1269 = expand_dims(%1268, axis=1);
  %1270 = shape_of(%1265, dtype="int64");
  %1271 = take(%1270, 1);
  %1272 = add(meta[relay.Constant][271], %1271);
  %1273 = where(meta[relay.Constant][270], %1272, meta[relay.Constant][271]);
  %1274 = cast(%1269, dtype="float32");
  %1275 = take(%1265, %1273, axis=1);
  %1276 = (%1274, %1275);
  %1277 = concatenate(%1276, axis=1);
  %1278 = vision.roi_align(%535, %1277, pooled_size=[7, 7], spatial_scale=0.0625f, sample_ratio=2);
  %1279 = shape_of(%1278, dtype="int64");
  %1280 = take(%1279, 1, axis=0);
  %1281 = shape_of(%1278, dtype="int64");
  %1282 = take(%1281, 2, axis=0);
  %1283 = shape_of(%1278, dtype="int64");
  %1284 = take(%1283, 3, axis=0);
  %1285 = expand_dims(%1250, axis=0);
  %1286 = expand_dims(%1280, axis=0);
  %1287 = expand_dims(%1282, axis=0);
  %1288 = expand_dims(%1284, axis=0);
  %1289 = (%1285, %1286, %1287, %1288);
  %1290 = shape_of(%1248, dtype="int64");
  %1291 = concatenate(%1289);
  %1292 = maximum(%1290, %1291);
  %1293 = dyn.broadcast_to(%1248, %1292, shape=None, dtype="");
  %1294 = scatter(%1239, %1240, %1223);
  %1295 = cast(%1293, dtype="int64");
  %1296 = equal(%1092, 3);
  %1297 = cast(%1296, dtype="uint8");
  %1298 = cast(%1297, dtype="float32");
  %1299 = argwhere(%1298);
  %1300 = cast(%1299, dtype="int64");
  %1301 = transpose(%1300, axes=[1, 0]);
  %1302 = transpose(%1301, axes=[1, 0]);
  %1303 = reshape(%1302, newshape=[-1, 1, 1, 1]);
  %1304 = shape_of(%1303, dtype="int64");
  %1305 = take(%1304, 0, axis=0);
  %1306 = equal(%1092, 3);
  %1307 = cast(%1306, dtype="uint8");
  %1308 = cast(%1307, dtype="float32");
  %1309 = argwhere(%1308);
  %1310 = cast(%1309, dtype="int64");
  %1311 = transpose(%1310, axes=[1, 0]);
  %1312 = transpose(%1311, axes=[1, 0]);
  %1313 = squeeze(%1312, axis=[1]);
  %1314 = cast(%1313, dtype="int64");
  %1315 = shape_of(%1127, dtype="int64");
  %1316 = take(%1315, 0);
  %1317 = less(%1314, 0);
  %1318 = add(%1314, %1316);
  %1319 = where(%1317, %1318, %1314);
  %1320 = take(%1127, %1319, axis=0);
  %1321 = take(%1320, meta[relay.Constant][272], axis=1);
  %1322 = squeeze(%1321, axis=[1]);
  %1323 = cast(%1322, dtype="int64");
  %1324 = expand_dims(%1323, axis=1);
  %1325 = shape_of(%1320, dtype="int64");
  %1326 = take(%1325, 1);
  %1327 = add(meta[relay.Constant][274], %1326);
  %1328 = where(meta[relay.Constant][273], %1327, meta[relay.Constant][274]);
  %1329 = cast(%1324, dtype="float32");
  %1330 = take(%1320, %1328, axis=1);
  %1331 = (%1329, %1330);
  %1332 = concatenate(%1331, axis=1);
  %1333 = vision.roi_align(%682, %1332, pooled_size=[7, 7], spatial_scale=0.03125f, sample_ratio=2);
  %1334 = shape_of(%1333, dtype="int64");
  %1335 = take(%1334, 1, axis=0);
  %1336 = shape_of(%1333, dtype="int64");
  %1337 = take(%1336, 2, axis=0);
  %1338 = shape_of(%1333, dtype="int64");
  %1339 = take(%1338, 3, axis=0);
  %1340 = expand_dims(%1305, axis=0);
  %1341 = expand_dims(%1335, axis=0);
  %1342 = expand_dims(%1337, axis=0);
  %1343 = expand_dims(%1339, axis=0);
  %1344 = (%1340, %1341, %1342, %1343);
  %1345 = shape_of(%1303, dtype="int64");
  %1346 = concatenate(%1344);
  %1347 = maximum(%1345, %1346);
  %1348 = dyn.broadcast_to(%1303, %1347, shape=None, dtype="");
  %1349 = scatter(%1294, %1295, %1278);
  %1350 = cast(%1348, dtype="int64");
  %1351 = scatter(%1349, %1350, %1333);
  %1352 = shape_of(%1351, dtype="int64");
  %1353 = take(%1352, 0, axis=0);
  %1354 = expand_dims(%1353, axis=0);
  %1355 = (%1354, meta[relay.Constant][275]);
  %1356 = concatenate(%1355);
  %1357 = dyn.reshape(%1351, %1356, newshape=[]);
  %1358 = nn.batch_flatten(%1357);
  %1359 = nn.dense(%1358, meta[relay.Constant][276], units=1024);
  %1360 = add(%1359, meta[relay.Constant][277]);
  %1361 = nn.relu(%1360);
  %1362 = nn.batch_flatten(%1361);
  %1363 = nn.dense(%1362, meta[relay.Constant][278], units=1024);
  %1364 = add(%1363, meta[relay.Constant][279]);
  %1365 = nn.relu(%1364);
  %1366 = nn.batch_flatten(%1365);
  %1367 = nn.dense(%1366, meta[relay.Constant][280], units=324);
  %1368 = add(%1367, meta[relay.Constant][281]);
  %1369 = nn.batch_flatten(%1368);
  %1370 = shape_of(%1369, dtype="int32");
  %1371 = cast_like(%1370, meta[relay.Constant][283]);
  %1372 = slice_like(%1371, meta[relay.Constant][283], axes=None);
  %1373 = add(meta[relay.Constant][283], %1372);
  %1374 = where(meta[relay.Constant][282], %1373, meta[relay.Constant][283]);
  %1375 = greater_equal(%1374, %1372);
  %1376 = shape_of(%1369, dtype="int64");
  %1377 = where(%1375, %1372, %1374);
  %1378 = scatter(%1376, meta[relay.Constant][284], meta[relay.Constant][285]);
  %1379 = dyn.strided_slice(%1369, %1377, %1378, meta[relay.Constant][286], begin=None, end=None, strides=None, axes=None);
  %1380 = shape_of(%1379, dtype="int32");
  %1381 = cast_like(%1380, meta[relay.Constant][288]);
  %1382 = slice_like(%1381, meta[relay.Constant][288], axes=None);
  %1383 = add(meta[relay.Constant][288], %1382);
  %1384 = where(meta[relay.Constant][287], %1383, meta[relay.Constant][288]);
  %1385 = greater_equal(%1384, %1382);
  %1386 = shape_of(%1379, dtype="int64");
  %1387 = where(%1385, %1382, %1384);
  %1388 = scatter(%1386, meta[relay.Constant][289], meta[relay.Constant][290]);
  %1389 = dyn.strided_slice(%1379, %1387, %1388, meta[relay.Constant][291], begin=None, end=None, strides=None, axes=None);
  %1390 = (%1033,);
  %1391 = concatenate(%1390);
  %1392 = cast(%1391, dtype="float32");
  %1393 = shape_of(%1392, dtype="int32");
  %1394 = cast_like(%1393, meta[relay.Constant][293]);
  %1395 = slice_like(%1394, meta[relay.Constant][293], axes=None);
  %1396 = add(meta[relay.Constant][293], %1395);
  %1397 = where(meta[relay.Constant][292], %1396, meta[relay.Constant][293]);
  %1398 = greater_equal(%1397, %1395);
  %1399 = shape_of(%1392, dtype="int64");
  %1400 = where(%1398, %1395, %1397);
  %1401 = scatter(%1399, meta[relay.Constant][294], meta[relay.Constant][295]);
  %1402 = dyn.strided_slice(%1392, %1400, %1401, meta[relay.Constant][296], begin=None, end=None, strides=None, axes=None);
  %1403 = shape_of(%1392, dtype="int32");
  %1404 = cast_like(%1403, meta[relay.Constant][298]);
  %1405 = slice_like(%1404, meta[relay.Constant][298], axes=None);
  %1406 = add(meta[relay.Constant][298], %1405);
  %1407 = where(meta[relay.Constant][297], %1406, meta[relay.Constant][298]);
  %1408 = greater_equal(%1407, %1405);
  %1409 = shape_of(%1392, dtype="int64");
  %1410 = where(%1408, %1405, %1407);
  %1411 = scatter(%1409, meta[relay.Constant][299], meta[relay.Constant][300]);
  %1412 = dyn.strided_slice(%1392, %1410, %1411, meta[relay.Constant][301], begin=None, end=None, strides=None, axes=None);
  %1413 = take(%1402, 2, axis=1);
  %1414 = take(%1412, 0, axis=1);
  %1415 = subtract(%1413, %1414);
  %1416 = add(%1415, 1f);
  %1417 = shape_of(%1416, dtype="int32");
  %1418 = cast_like(%1417, meta[relay.Constant][303]);
  %1419 = slice_like(%1418, meta[relay.Constant][303], axes=None);
  %1420 = add(meta[relay.Constant][303], %1419);
  %1421 = where(meta[relay.Constant][302], %1420, meta[relay.Constant][303]);
  %1422 = greater_equal(%1421, %1419);
  %1423 = shape_of(%1416, dtype="int64");
  %1424 = where(%1422, %1419, %1421);
  %1425 = scatter(%1423, meta[relay.Constant][304], meta[relay.Constant][305]);
  %1426 = dyn.strided_slice(%1416, %1424, %1425, meta[relay.Constant][306], begin=None, end=None, strides=None, axes=None);
  %1427 = divide(%1389, 10f);
  %1428 = expand_dims(%1426, axis=1);
  %1429 = shape_of(%1392, dtype="int32");
  %1430 = cast_like(%1429, meta[relay.Constant][308]);
  %1431 = slice_like(%1430, meta[relay.Constant][308], axes=None);
  %1432 = add(meta[relay.Constant][308], %1431);
  %1433 = where(meta[relay.Constant][307], %1432, meta[relay.Constant][308]);
  %1434 = greater_equal(%1433, %1431);
  %1435 = shape_of(%1392, dtype="int64");
  %1436 = where(%1434, %1431, %1433);
  %1437 = scatter(%1435, meta[relay.Constant][309], meta[relay.Constant][310]);
  %1438 = dyn.strided_slice(%1392, %1436, %1437, meta[relay.Constant][311], begin=None, end=None, strides=None, axes=None);
  %1439 = take(%1438, 0, axis=1);
  %1440 = multiply(0.5f, %1416);
  %1441 = add(%1439, %1440);
  %1442 = shape_of(%1441, dtype="int32");
  %1443 = cast_like(%1442, meta[relay.Constant][313]);
  %1444 = slice_like(%1443, meta[relay.Constant][313], axes=None);
  %1445 = add(meta[relay.Constant][313], %1444);
  %1446 = where(meta[relay.Constant][312], %1445, meta[relay.Constant][313]);
  %1447 = greater_equal(%1446, %1444);
  %1448 = shape_of(%1441, dtype="int64");
  %1449 = where(%1447, %1444, %1446);
  %1450 = scatter(%1448, meta[relay.Constant][314], meta[relay.Constant][315]);
  %1451 = dyn.strided_slice(%1441, %1449, %1450, meta[relay.Constant][316], begin=None, end=None, strides=None, axes=None);
  %1452 = multiply(%1427, %1428);
  %1453 = expand_dims(%1451, axis=1);
  %1454 = shape_of(%1369, dtype="int32");
  %1455 = cast_like(%1454, meta[relay.Constant][318]);
  %1456 = slice_like(%1455, meta[relay.Constant][318], axes=None);
  %1457 = add(meta[relay.Constant][318], %1456);
  %1458 = where(meta[relay.Constant][317], %1457, meta[relay.Constant][318]);
  %1459 = greater_equal(%1458, %1456);
  %1460 = shape_of(%1369, dtype="int64");
  %1461 = where(%1459, %1456, %1458);
  %1462 = scatter(%1460, meta[relay.Constant][319], meta[relay.Constant][320]);
  %1463 = dyn.strided_slice(%1369, %1461, %1462, meta[relay.Constant][321], begin=None, end=None, strides=None, axes=None);
  %1464 = shape_of(%1463, dtype="int32");
  %1465 = cast_like(%1464, meta[relay.Constant][323]);
  %1466 = slice_like(%1465, meta[relay.Constant][323], axes=None);
  %1467 = add(meta[relay.Constant][323], %1466);
  %1468 = where(meta[relay.Constant][322], %1467, meta[relay.Constant][323]);
  %1469 = greater_equal(%1468, %1466);
  %1470 = shape_of(%1463, dtype="int64");
  %1471 = where(%1469, %1466, %1468);
  %1472 = scatter(%1470, meta[relay.Constant][324], meta[relay.Constant][325]);
  %1473 = dyn.strided_slice(%1463, %1471, %1472, meta[relay.Constant][326], begin=None, end=None, strides=None, axes=None);
  %1474 = divide(%1473, 5f);
  %1475 = clip(%1474, a_min=-inff, a_max=4.13517f);
  %1476 = shape_of(%1416, dtype="int32");
  %1477 = cast_like(%1476, meta[relay.Constant][328]);
  %1478 = slice_like(%1477, meta[relay.Constant][328], axes=None);
  %1479 = add(meta[relay.Constant][328], %1478);
  %1480 = where(meta[relay.Constant][327], %1479, meta[relay.Constant][328]);
  %1481 = greater_equal(%1480, %1478);
  %1482 = shape_of(%1416, dtype="int64");
  %1483 = where(%1481, %1478, %1480);
  %1484 = scatter(%1482, meta[relay.Constant][329], meta[relay.Constant][330]);
  %1485 = dyn.strided_slice(%1416, %1483, %1484, meta[relay.Constant][331], begin=None, end=None, strides=None, axes=None);
  %1486 = exp(%1475);
  %1487 = expand_dims(%1485, axis=1);
  %1488 = multiply(%1486, %1487);
  %1489 = add(%1452, %1453);
  %1490 = multiply(%1488, 0.5f);
  %1491 = subtract(%1489, %1490);
  %1492 = shape_of(%1369, dtype="int32");
  %1493 = cast_like(%1492, meta[relay.Constant][333]);
  %1494 = slice_like(%1493, meta[relay.Constant][333], axes=None);
  %1495 = add(meta[relay.Constant][333], %1494);
  %1496 = where(meta[relay.Constant][332], %1495, meta[relay.Constant][333]);
  %1497 = greater_equal(%1496, %1494);
  %1498 = shape_of(%1369, dtype="int64");
  %1499 = where(%1497, %1494, %1496);
  %1500 = scatter(%1498, meta[relay.Constant][334], meta[relay.Constant][335]);
  %1501 = dyn.strided_slice(%1369, %1499, %1500, meta[relay.Constant][336], begin=None, end=None, strides=None, axes=None);
  %1502 = shape_of(%1501, dtype="int32");
  %1503 = cast_like(%1502, meta[relay.Constant][338]);
  %1504 = slice_like(%1503, meta[relay.Constant][338], axes=None);
  %1505 = add(meta[relay.Constant][338], %1504);
  %1506 = where(meta[relay.Constant][337], %1505, meta[relay.Constant][338]);
  %1507 = greater_equal(%1506, %1504);
  %1508 = shape_of(%1501, dtype="int64");
  %1509 = where(%1507, %1504, %1506);
  %1510 = scatter(%1508, meta[relay.Constant][339], meta[relay.Constant][340]);
  %1511 = dyn.strided_slice(%1501, %1509, %1510, meta[relay.Constant][341], begin=None, end=None, strides=None, axes=None);
  %1512 = shape_of(%1392, dtype="int32");
  %1513 = cast_like(%1512, meta[relay.Constant][343]);
  %1514 = slice_like(%1513, meta[relay.Constant][343], axes=None);
  %1515 = add(meta[relay.Constant][343], %1514);
  %1516 = where(meta[relay.Constant][342], %1515, meta[relay.Constant][343]);
  %1517 = greater_equal(%1516, %1514);
  %1518 = shape_of(%1392, dtype="int64");
  %1519 = where(%1517, %1514, %1516);
  %1520 = scatter(%1518, meta[relay.Constant][344], meta[relay.Constant][345]);
  %1521 = dyn.strided_slice(%1392, %1519, %1520, meta[relay.Constant][346], begin=None, end=None, strides=None, axes=None);
  %1522 = shape_of(%1392, dtype="int32");
  %1523 = cast_like(%1522, meta[relay.Constant][348]);
  %1524 = slice_like(%1523, meta[relay.Constant][348], axes=None);
  %1525 = add(meta[relay.Constant][348], %1524);
  %1526 = where(meta[relay.Constant][347], %1525, meta[relay.Constant][348]);
  %1527 = greater_equal(%1526, %1524);
  %1528 = shape_of(%1392, dtype="int64");
  %1529 = where(%1527, %1524, %1526);
  %1530 = scatter(%1528, meta[relay.Constant][349], meta[relay.Constant][350]);
  %1531 = dyn.strided_slice(%1392, %1529, %1530, meta[relay.Constant][351], begin=None, end=None, strides=None, axes=None);
  %1532 = take(%1521, 3, axis=1);
  %1533 = take(%1531, 1, axis=1);
  %1534 = subtract(%1532, %1533);
  %1535 = add(%1534, 1f);
  %1536 = shape_of(%1535, dtype="int32");
  %1537 = cast_like(%1536, meta[relay.Constant][353]);
  %1538 = slice_like(%1537, meta[relay.Constant][353], axes=None);
  %1539 = add(meta[relay.Constant][353], %1538);
  %1540 = where(meta[relay.Constant][352], %1539, meta[relay.Constant][353]);
  %1541 = greater_equal(%1540, %1538);
  %1542 = shape_of(%1535, dtype="int64");
  %1543 = where(%1541, %1538, %1540);
  %1544 = scatter(%1542, meta[relay.Constant][354], meta[relay.Constant][355]);
  %1545 = dyn.strided_slice(%1535, %1543, %1544, meta[relay.Constant][356], begin=None, end=None, strides=None, axes=None);
  %1546 = divide(%1511, 10f);
  %1547 = expand_dims(%1545, axis=1);
  %1548 = shape_of(%1392, dtype="int32");
  %1549 = cast_like(%1548, meta[relay.Constant][358]);
  %1550 = slice_like(%1549, meta[relay.Constant][358], axes=None);
  %1551 = add(meta[relay.Constant][358], %1550);
  %1552 = where(meta[relay.Constant][357], %1551, meta[relay.Constant][358]);
  %1553 = greater_equal(%1552, %1550);
  %1554 = shape_of(%1392, dtype="int64");
  %1555 = where(%1553, %1550, %1552);
  %1556 = scatter(%1554, meta[relay.Constant][359], meta[relay.Constant][360]);
  %1557 = dyn.strided_slice(%1392, %1555, %1556, meta[relay.Constant][361], begin=None, end=None, strides=None, axes=None);
  %1558 = take(%1557, 1, axis=1);
  %1559 = multiply(0.5f, %1535);
  %1560 = add(%1558, %1559);
  %1561 = shape_of(%1560, dtype="int32");
  %1562 = cast_like(%1561, meta[relay.Constant][363]);
  %1563 = slice_like(%1562, meta[relay.Constant][363], axes=None);
  %1564 = add(meta[relay.Constant][363], %1563);
  %1565 = where(meta[relay.Constant][362], %1564, meta[relay.Constant][363]);
  %1566 = greater_equal(%1565, %1563);
  %1567 = shape_of(%1560, dtype="int64");
  %1568 = where(%1566, %1563, %1565);
  %1569 = scatter(%1567, meta[relay.Constant][364], meta[relay.Constant][365]);
  %1570 = dyn.strided_slice(%1560, %1568, %1569, meta[relay.Constant][366], begin=None, end=None, strides=None, axes=None);
  %1571 = multiply(%1546, %1547);
  %1572 = expand_dims(%1570, axis=1);
  %1573 = shape_of(%1369, dtype="int32");
  %1574 = cast_like(%1573, meta[relay.Constant][368]);
  %1575 = slice_like(%1574, meta[relay.Constant][368], axes=None);
  %1576 = add(meta[relay.Constant][368], %1575);
  %1577 = where(meta[relay.Constant][367], %1576, meta[relay.Constant][368]);
  %1578 = greater_equal(%1577, %1575);
  %1579 = shape_of(%1369, dtype="int64");
  %1580 = where(%1578, %1575, %1577);
  %1581 = scatter(%1579, meta[relay.Constant][369], meta[relay.Constant][370]);
  %1582 = dyn.strided_slice(%1369, %1580, %1581, meta[relay.Constant][371], begin=None, end=None, strides=None, axes=None);
  %1583 = shape_of(%1582, dtype="int32");
  %1584 = cast_like(%1583, meta[relay.Constant][373]);
  %1585 = slice_like(%1584, meta[relay.Constant][373], axes=None);
  %1586 = add(meta[relay.Constant][373], %1585);
  %1587 = where(meta[relay.Constant][372], %1586, meta[relay.Constant][373]);
  %1588 = greater_equal(%1587, %1585);
  %1589 = shape_of(%1582, dtype="int64");
  %1590 = where(%1588, %1585, %1587);
  %1591 = scatter(%1589, meta[relay.Constant][374], meta[relay.Constant][375]);
  %1592 = dyn.strided_slice(%1582, %1590, %1591, meta[relay.Constant][376], begin=None, end=None, strides=None, axes=None);
  %1593 = divide(%1592, 5f);
  %1594 = clip(%1593, a_min=-inff, a_max=4.13517f);
  %1595 = shape_of(%1535, dtype="int32");
  %1596 = cast_like(%1595, meta[relay.Constant][378]);
  %1597 = slice_like(%1596, meta[relay.Constant][378], axes=None);
  %1598 = add(meta[relay.Constant][378], %1597);
  %1599 = where(meta[relay.Constant][377], %1598, meta[relay.Constant][378]);
  %1600 = greater_equal(%1599, %1597);
  %1601 = shape_of(%1535, dtype="int64");
  %1602 = where(%1600, %1597, %1599);
  %1603 = scatter(%1601, meta[relay.Constant][379], meta[relay.Constant][380]);
  %1604 = dyn.strided_slice(%1535, %1602, %1603, meta[relay.Constant][381], begin=None, end=None, strides=None, axes=None);
  %1605 = exp(%1594);
  %1606 = expand_dims(%1604, axis=1);
  %1607 = multiply(%1605, %1606);
  %1608 = add(%1571, %1572);
  %1609 = multiply(%1607, 0.5f);
  %1610 = subtract(%1608, %1609);
  %1611 = multiply(%1488, 0.5f);
  %1612 = add(%1489, %1611);
  %1613 = subtract(%1612, 1f);
  %1614 = multiply(%1607, 0.5f);
  %1615 = add(%1608, %1614);
  %1616 = subtract(%1615, 1f);
  %1617 = expand_dims(%1491, axis=2);
  %1618 = expand_dims(%1610, axis=2);
  %1619 = expand_dims(%1613, axis=2);
  %1620 = expand_dims(%1616, axis=2);
  %1621 = (%1617, %1618, %1619, %1620);
  %1622 = concatenate(%1621, axis=2);
  %1623 = shape_of(%1369, dtype="int64");
  %1624 = dyn.reshape(%1622, %1623, newshape=[]);
  %1625 = reshape(%1624, newshape=[-1, 4]);
  %1626 = shape_of(%1625, dtype="int32");
  %1627 = cast_like(%1626, meta[relay.Constant][383]);
  %1628 = slice_like(%1627, meta[relay.Constant][383], axes=None);
  %1629 = add(meta[relay.Constant][383], %1628);
  %1630 = where(meta[relay.Constant][382], %1629, meta[relay.Constant][383]);
  %1631 = greater_equal(%1630, %1628);
  %1632 = shape_of(%1625, dtype="int64");
  %1633 = where(%1631, %1628, %1630);
  %1634 = scatter(%1632, meta[relay.Constant][384], meta[relay.Constant][385]);
  %1635 = dyn.strided_slice(%1625, %1633, %1634, meta[relay.Constant][386], begin=None, end=None, strides=None, axes=None);
  %1636 = shape_of(%1635, dtype="int32");
  %1637 = cast_like(%1636, meta[relay.Constant][388]);
  %1638 = slice_like(%1637, meta[relay.Constant][388], axes=None);
  %1639 = add(meta[relay.Constant][388], %1638);
  %1640 = where(meta[relay.Constant][387], %1639, meta[relay.Constant][388]);
  %1641 = greater_equal(%1640, %1638);
  %1642 = shape_of(%1635, dtype="int64");
  %1643 = where(%1641, %1638, %1640);
  %1644 = scatter(%1642, meta[relay.Constant][389], meta[relay.Constant][390]);
  %1645 = dyn.strided_slice(%1635, %1643, %1644, meta[relay.Constant][391], begin=None, end=None, strides=None, axes=None);
  %1646 = clip(%1645, a_min=0f, a_max=1279f);
  %1647 = shape_of(%1625, dtype="int32");
  %1648 = cast_like(%1647, meta[relay.Constant][393]);
  %1649 = slice_like(%1648, meta[relay.Constant][393], axes=None);
  %1650 = add(meta[relay.Constant][393], %1649);
  %1651 = where(meta[relay.Constant][392], %1650, meta[relay.Constant][393]);
  %1652 = greater_equal(%1651, %1649);
  %1653 = shape_of(%1625, dtype="int64");
  %1654 = where(%1652, %1649, %1651);
  %1655 = scatter(%1653, meta[relay.Constant][394], meta[relay.Constant][395]);
  %1656 = dyn.strided_slice(%1625, %1654, %1655, meta[relay.Constant][396], begin=None, end=None, strides=None, axes=None);
  %1657 = shape_of(%1656, dtype="int32");
  %1658 = cast_like(%1657, meta[relay.Constant][398]);
  %1659 = slice_like(%1658, meta[relay.Constant][398], axes=None);
  %1660 = add(meta[relay.Constant][398], %1659);
  %1661 = where(meta[relay.Constant][397], %1660, meta[relay.Constant][398]);
  %1662 = greater_equal(%1661, %1659);
  %1663 = shape_of(%1656, dtype="int64");
  %1664 = where(%1662, %1659, %1661);
  %1665 = scatter(%1663, meta[relay.Constant][399], meta[relay.Constant][400]);
  %1666 = dyn.strided_slice(%1656, %1664, %1665, meta[relay.Constant][401], begin=None, end=None, strides=None, axes=None);
  %1667 = clip(%1666, a_min=0f, a_max=1279f);
  %1668 = expand_dims(%1646, axis=2);
  %1669 = expand_dims(%1667, axis=2);
  %1670 = (%1668, %1669);
  %1671 = concatenate(%1670, axis=2);
  %1672 = nn.batch_flatten(%1365);
  %1673 = nn.dense(%1672, meta[relay.Constant][403], units=81);
  %1674 = add(%1673, meta[relay.Constant][404]);
  %1675 = max(%1674, axis=[1], keepdims=True);
  %1676 = subtract(%1674, %1675);
  %1677 = exp(%1676);
  %1678 = sum(%1677, axis=[1], keepdims=True);
  %1679 = divide(%1677, %1678);
  %1680 = shape_of(%1679, dtype="int64");
  %1681 = take(%1680, 1, axis=0);
  %1682 = multiply(%1681, 4);
  %1683 = expand_dims(%1682, axis=0);
  %1684 = (meta[relay.Constant][402], %1683);
  %1685 = reshape(%1671, newshape=[-1, 4]);
  %1686 = concatenate(%1684);
  %1687 = dyn.reshape(%1685, %1686, newshape=[]);
  %1688 = shape_of(%1687, dtype="int32");
  %1689 = cast_like(%1688, meta[relay.Constant][406]);
  %1690 = slice_like(%1689, meta[relay.Constant][406], axes=None);
  %1691 = add(meta[relay.Constant][406], %1690);
  %1692 = where(meta[relay.Constant][405], %1691, meta[relay.Constant][406]);
  %1693 = greater_equal(%1692, %1690);
  %1694 = shape_of(%1687, dtype="int64");
  %1695 = where(%1693, %1690, %1692);
  %1696 = scatter(%1694, meta[relay.Constant][407], meta[relay.Constant][408]);
  %1697 = expand_dims(%1681, axis=0);
  %1698 = (meta[relay.Constant][410], %1697);
  %1699 = reshape(%1679, newshape=[-1]);
  %1700 = concatenate(%1698);
  %1701 = dyn.reshape(%1699, %1700, newshape=[]);
  %1702 = greater(%1701, 0.05f);
  %1703 = cast(%1702, dtype="uint8");
  %1704 = shape_of(%1703, dtype="int32");
  %1705 = cast_like(%1704, meta[relay.Constant][412]);
  %1706 = slice_like(%1705, meta[relay.Constant][412], axes=None);
  %1707 = add(meta[relay.Constant][412], %1706);
  %1708 = where(meta[relay.Constant][411], %1707, meta[relay.Constant][412]);
  %1709 = greater_equal(%1708, %1706);
  %1710 = shape_of(%1703, dtype="int64");
  %1711 = where(%1709, %1706, %1708);
  %1712 = scatter(%1710, meta[relay.Constant][413], meta[relay.Constant][414]);
  %1713 = dyn.strided_slice(%1703, %1711, %1712, meta[relay.Constant][415], begin=None, end=None, strides=None, axes=None);
  %1714 = take(%1713, 1, axis=1);
  %1715 = cast(%1714, dtype="float32");
  %1716 = argwhere(%1715);
  %1717 = cast(%1716, dtype="int64");
  %1718 = transpose(%1717, axes=[1, 0]);
  %1719 = transpose(%1718, axes=[1, 0]);
  %1720 = squeeze(%1719, axis=[1]);
  %1721 = cast(%1720, dtype="int64");
  %1722 = cast(%1721, dtype="int64");
  %1723 = dyn.strided_slice(%1687, %1695, %1696, meta[relay.Constant][409], begin=None, end=None, strides=None, axes=None);
  %1724 = shape_of(%1723, dtype="int64");
  %1725 = take(%1724, 0);
  %1726 = less(%1722, 0);
  %1727 = add(%1722, %1725);
  %1728 = where(%1726, %1727, %1722);
  %1729 = take(%1723, %1728, axis=0);
  %1730 = take(%1701, 1, axis=1);
  %1731 = shape_of(%1730, dtype="int64");
  %1732 = take(%1731, 0);
  %1733 = less(%1721, 0);
  %1734 = add(%1721, %1732);
  %1735 = where(%1733, %1734, %1721);
  %1736 = take(%1730, %1735, axis=0);
  %1737 = expand_dims(%1736, axis=0);
  %1738 = expand_dims(%1729, axis=0);
  %1739 = expand_dims(%1737, axis=0);
  %1740 = vision.all_class_non_max_suppression(%1738, %1739, 2000, 0.5f, 0f);
  %1741 = %1740.0;
  %1742 = shape_of(%1741, dtype="int32");
  %1743 = cast_like(%1742, meta[relay.Constant][417]);
  %1744 = slice_like(%1743, meta[relay.Constant][417], axes=None);
  %1745 = add(meta[relay.Constant][417], %1744);
  %1746 = where(meta[relay.Constant][416], %1745, meta[relay.Constant][417]);
  %1747 = greater_equal(%1746, %1744);
  %1748 = where(%1747, %1744, %1746);
  %1749 = %1740.1;
  %1750 = dyn.strided_slice(%1741, %1748, %1749, meta[relay.Constant][418], begin=None, end=None, strides=None, axes=None);
  %1751 = take(%1750, meta[relay.Constant][419], axis=1);
  %1752 = squeeze(%1751, axis=[1]);
  %1753 = cast(%1752, dtype="int64");
  %1754 = shape_of(%1729, dtype="int64");
  %1755 = take(%1754, 0);
  %1756 = less(%1753, 0);
  %1757 = add(%1753, %1755);
  %1758 = where(%1756, %1757, %1753);
  %1759 = shape_of(%1687, dtype="int32");
  %1760 = cast_like(%1759, meta[relay.Constant][421]);
  %1761 = slice_like(%1760, meta[relay.Constant][421], axes=None);
  %1762 = add(meta[relay.Constant][421], %1761);
  %1763 = where(meta[relay.Constant][420], %1762, meta[relay.Constant][421]);
  %1764 = greater_equal(%1763, %1761);
  %1765 = shape_of(%1687, dtype="int64");
  %1766 = where(%1764, %1761, %1763);
  %1767 = scatter(%1765, meta[relay.Constant][422], meta[relay.Constant][423]);
  %1768 = shape_of(%1703, dtype="int32");
  %1769 = cast_like(%1768, meta[relay.Constant][426]);
  %1770 = slice_like(%1769, meta[relay.Constant][426], axes=None);
  %1771 = add(meta[relay.Constant][426], %1770);
  %1772 = where(meta[relay.Constant][425], %1771, meta[relay.Constant][426]);
  %1773 = greater_equal(%1772, %1770);
  %1774 = shape_of(%1703, dtype="int64");
  %1775 = where(%1773, %1770, %1772);
  %1776 = scatter(%1774, meta[relay.Constant][427], meta[relay.Constant][428]);
  %1777 = dyn.strided_slice(%1703, %1775, %1776, meta[relay.Constant][429], begin=None, end=None, strides=None, axes=None);
  %1778 = take(%1777, 2, axis=1);
  %1779 = cast(%1778, dtype="float32");
  %1780 = argwhere(%1779);
  %1781 = cast(%1780, dtype="int64");
  %1782 = transpose(%1781, axes=[1, 0]);
  %1783 = transpose(%1782, axes=[1, 0]);
  %1784 = squeeze(%1783, axis=[1]);
  %1785 = cast(%1784, dtype="int64");
  %1786 = cast(%1785, dtype="int64");
  %1787 = dyn.strided_slice(%1687, %1766, %1767, meta[relay.Constant][424], begin=None, end=None, strides=None, axes=None);
  %1788 = shape_of(%1787, dtype="int64");
  %1789 = take(%1788, 0);
  %1790 = less(%1786, 0);
  %1791 = add(%1786, %1789);
  %1792 = where(%1790, %1791, %1786);
  %1793 = take(%1787, %1792, axis=0);
  %1794 = take(%1701, 2, axis=1);
  %1795 = shape_of(%1794, dtype="int64");
  %1796 = take(%1795, 0);
  %1797 = less(%1785, 0);
  %1798 = add(%1785, %1796);
  %1799 = where(%1797, %1798, %1785);
  %1800 = take(%1794, %1799, axis=0);
  %1801 = expand_dims(%1800, axis=0);
  %1802 = expand_dims(%1793, axis=0);
  %1803 = expand_dims(%1801, axis=0);
  %1804 = vision.all_class_non_max_suppression(%1802, %1803, 2000, 0.5f, 0f);
  %1805 = %1804.0;
  %1806 = shape_of(%1805, dtype="int32");
  %1807 = cast_like(%1806, meta[relay.Constant][431]);
  %1808 = slice_like(%1807, meta[relay.Constant][431], axes=None);
  %1809 = add(meta[relay.Constant][431], %1808);
  %1810 = where(meta[relay.Constant][430], %1809, meta[relay.Constant][431]);
  %1811 = greater_equal(%1810, %1808);
  %1812 = where(%1811, %1808, %1810);
  %1813 = %1804.1;
  %1814 = dyn.strided_slice(%1805, %1812, %1813, meta[relay.Constant][432], begin=None, end=None, strides=None, axes=None);
  %1815 = take(%1814, meta[relay.Constant][433], axis=1);
  %1816 = squeeze(%1815, axis=[1]);
  %1817 = cast(%1816, dtype="int64");
  %1818 = shape_of(%1793, dtype="int64");
  %1819 = take(%1818, 0);
  %1820 = less(%1817, 0);
  %1821 = add(%1817, %1819);
  %1822 = where(%1820, %1821, %1817);
  %1823 = shape_of(%1687, dtype="int32");
  %1824 = cast_like(%1823, meta[relay.Constant][435]);
  %1825 = slice_like(%1824, meta[relay.Constant][435], axes=None);
  %1826 = add(meta[relay.Constant][435], %1825);
  %1827 = where(meta[relay.Constant][434], %1826, meta[relay.Constant][435]);
  %1828 = greater_equal(%1827, %1825);
  %1829 = shape_of(%1687, dtype="int64");
  %1830 = where(%1828, %1825, %1827);
  %1831 = scatter(%1829, meta[relay.Constant][436], meta[relay.Constant][437]);
  %1832 = shape_of(%1703, dtype="int32");
  %1833 = cast_like(%1832, meta[relay.Constant][440]);
  %1834 = slice_like(%1833, meta[relay.Constant][440], axes=None);
  %1835 = add(meta[relay.Constant][440], %1834);
  %1836 = where(meta[relay.Constant][439], %1835, meta[relay.Constant][440]);
  %1837 = greater_equal(%1836, %1834);
  %1838 = shape_of(%1703, dtype="int64");
  %1839 = where(%1837, %1834, %1836);
  %1840 = scatter(%1838, meta[relay.Constant][441], meta[relay.Constant][442]);
  %1841 = dyn.strided_slice(%1703, %1839, %1840, meta[relay.Constant][443], begin=None, end=None, strides=None, axes=None);
  %1842 = take(%1841, 3, axis=1);
  %1843 = cast(%1842, dtype="float32");
  %1844 = argwhere(%1843);
  %1845 = cast(%1844, dtype="int64");
  %1846 = transpose(%1845, axes=[1, 0]);
  %1847 = transpose(%1846, axes=[1, 0]);
  %1848 = squeeze(%1847, axis=[1]);
  %1849 = cast(%1848, dtype="int64");
  %1850 = cast(%1849, dtype="int64");
  %1851 = dyn.strided_slice(%1687, %1830, %1831, meta[relay.Constant][438], begin=None, end=None, strides=None, axes=None);
  %1852 = shape_of(%1851, dtype="int64");
  %1853 = take(%1852, 0);
  %1854 = less(%1850, 0);
  %1855 = add(%1850, %1853);
  %1856 = where(%1854, %1855, %1850);
  %1857 = take(%1851, %1856, axis=0);
  %1858 = take(%1701, 3, axis=1);
  %1859 = shape_of(%1858, dtype="int64");
  %1860 = take(%1859, 0);
  %1861 = less(%1849, 0);
  %1862 = add(%1849, %1860);
  %1863 = where(%1861, %1862, %1849);
  %1864 = take(%1858, %1863, axis=0);
  %1865 = expand_dims(%1864, axis=0);
  %1866 = expand_dims(%1857, axis=0);
  %1867 = expand_dims(%1865, axis=0);
  %1868 = vision.all_class_non_max_suppression(%1866, %1867, 2000, 0.5f, 0f);
  %1869 = %1868.0;
  %1870 = shape_of(%1869, dtype="int32");
  %1871 = cast_like(%1870, meta[relay.Constant][445]);
  %1872 = slice_like(%1871, meta[relay.Constant][445], axes=None);
  %1873 = add(meta[relay.Constant][445], %1872);
  %1874 = where(meta[relay.Constant][444], %1873, meta[relay.Constant][445]);
  %1875 = greater_equal(%1874, %1872);
  %1876 = where(%1875, %1872, %1874);
  %1877 = %1868.1;
  %1878 = dyn.strided_slice(%1869, %1876, %1877, meta[relay.Constant][446], begin=None, end=None, strides=None, axes=None);
  %1879 = take(%1878, meta[relay.Constant][447], axis=1);
  %1880 = squeeze(%1879, axis=[1]);
  %1881 = cast(%1880, dtype="int64");
  %1882 = shape_of(%1857, dtype="int64");
  %1883 = take(%1882, 0);
  %1884 = less(%1881, 0);
  %1885 = add(%1881, %1883);
  %1886 = where(%1884, %1885, %1881);
  %1887 = shape_of(%1687, dtype="int32");
  %1888 = cast_like(%1887, meta[relay.Constant][449]);
  %1889 = slice_like(%1888, meta[relay.Constant][449], axes=None);
  %1890 = add(meta[relay.Constant][449], %1889);
  %1891 = where(meta[relay.Constant][448], %1890, meta[relay.Constant][449]);
  %1892 = greater_equal(%1891, %1889);
  %1893 = shape_of(%1687, dtype="int64");
  %1894 = where(%1892, %1889, %1891);
  %1895 = scatter(%1893, meta[relay.Constant][450], meta[relay.Constant][451]);
  %1896 = shape_of(%1703, dtype="int32");
  %1897 = cast_like(%1896, meta[relay.Constant][454]);
  %1898 = slice_like(%1897, meta[relay.Constant][454], axes=None);
  %1899 = add(meta[relay.Constant][454], %1898);
  %1900 = where(meta[relay.Constant][453], %1899, meta[relay.Constant][454]);
  %1901 = greater_equal(%1900, %1898);
  %1902 = shape_of(%1703, dtype="int64");
  %1903 = where(%1901, %1898, %1900);
  %1904 = scatter(%1902, meta[relay.Constant][455], meta[relay.Constant][456]);
  %1905 = dyn.strided_slice(%1703, %1903, %1904, meta[relay.Constant][457], begin=None, end=None, strides=None, axes=None);
  %1906 = take(%1905, 4, axis=1);
  %1907 = cast(%1906, dtype="float32");
  %1908 = argwhere(%1907);
  %1909 = cast(%1908, dtype="int64");
  %1910 = transpose(%1909, axes=[1, 0]);
  %1911 = transpose(%1910, axes=[1, 0]);
  %1912 = squeeze(%1911, axis=[1]);
  %1913 = cast(%1912, dtype="int64");
  %1914 = cast(%1913, dtype="int64");
  %1915 = dyn.strided_slice(%1687, %1894, %1895, meta[relay.Constant][452], begin=None, end=None, strides=None, axes=None);
  %1916 = shape_of(%1915, dtype="int64");
  %1917 = take(%1916, 0);
  %1918 = less(%1914, 0);
  %1919 = add(%1914, %1917);
  %1920 = where(%1918, %1919, %1914);
  %1921 = take(%1915, %1920, axis=0);
  %1922 = take(%1701, 4, axis=1);
  %1923 = shape_of(%1922, dtype="int64");
  %1924 = take(%1923, 0);
  %1925 = less(%1913, 0);
  %1926 = add(%1913, %1924);
  %1927 = where(%1925, %1926, %1913);
  %1928 = take(%1922, %1927, axis=0);
  %1929 = expand_dims(%1928, axis=0);
  %1930 = expand_dims(%1921, axis=0);
  %1931 = expand_dims(%1929, axis=0);
  %1932 = vision.all_class_non_max_suppression(%1930, %1931, 2000, 0.5f, 0f);
  %1933 = %1932.0;
  %1934 = shape_of(%1933, dtype="int32");
  %1935 = cast_like(%1934, meta[relay.Constant][459]);
  %1936 = slice_like(%1935, meta[relay.Constant][459], axes=None);
  %1937 = add(meta[relay.Constant][459], %1936);
  %1938 = where(meta[relay.Constant][458], %1937, meta[relay.Constant][459]);
  %1939 = greater_equal(%1938, %1936);
  %1940 = where(%1939, %1936, %1938);
  %1941 = %1932.1;
  %1942 = dyn.strided_slice(%1933, %1940, %1941, meta[relay.Constant][460], begin=None, end=None, strides=None, axes=None);
  %1943 = take(%1942, meta[relay.Constant][461], axis=1);
  %1944 = squeeze(%1943, axis=[1]);
  %1945 = cast(%1944, dtype="int64");
  %1946 = shape_of(%1921, dtype="int64");
  %1947 = take(%1946, 0);
  %1948 = less(%1945, 0);
  %1949 = add(%1945, %1947);
  %1950 = where(%1948, %1949, %1945);
  %1951 = shape_of(%1687, dtype="int32");
  %1952 = cast_like(%1951, meta[relay.Constant][463]);
  %1953 = slice_like(%1952, meta[relay.Constant][463], axes=None);
  %1954 = add(meta[relay.Constant][463], %1953);
  %1955 = where(meta[relay.Constant][462], %1954, meta[relay.Constant][463]);
  %1956 = greater_equal(%1955, %1953);
  %1957 = shape_of(%1687, dtype="int64");
  %1958 = where(%1956, %1953, %1955);
  %1959 = scatter(%1957, meta[relay.Constant][464], meta[relay.Constant][465]);
  %1960 = shape_of(%1703, dtype="int32");
  %1961 = cast_like(%1960, meta[relay.Constant][468]);
  %1962 = slice_like(%1961, meta[relay.Constant][468], axes=None);
  %1963 = add(meta[relay.Constant][468], %1962);
  %1964 = where(meta[relay.Constant][467], %1963, meta[relay.Constant][468]);
  %1965 = greater_equal(%1964, %1962);
  %1966 = shape_of(%1703, dtype="int64");
  %1967 = where(%1965, %1962, %1964);
  %1968 = scatter(%1966, meta[relay.Constant][469], meta[relay.Constant][470]);
  %1969 = dyn.strided_slice(%1703, %1967, %1968, meta[relay.Constant][471], begin=None, end=None, strides=None, axes=None);
  %1970 = take(%1969, 5, axis=1);
  %1971 = cast(%1970, dtype="float32");
  %1972 = argwhere(%1971);
  %1973 = cast(%1972, dtype="int64");
  %1974 = transpose(%1973, axes=[1, 0]);
  %1975 = transpose(%1974, axes=[1, 0]);
  %1976 = squeeze(%1975, axis=[1]);
  %1977 = cast(%1976, dtype="int64");
  %1978 = cast(%1977, dtype="int64");
  %1979 = dyn.strided_slice(%1687, %1958, %1959, meta[relay.Constant][466], begin=None, end=None, strides=None, axes=None);
  %1980 = shape_of(%1979, dtype="int64");
  %1981 = take(%1980, 0);
  %1982 = less(%1978, 0);
  %1983 = add(%1978, %1981);
  %1984 = where(%1982, %1983, %1978);
  %1985 = take(%1979, %1984, axis=0);
  %1986 = take(%1701, 5, axis=1);
  %1987 = shape_of(%1986, dtype="int64");
  %1988 = take(%1987, 0);
  %1989 = less(%1977, 0);
  %1990 = add(%1977, %1988);
  %1991 = where(%1989, %1990, %1977);
  %1992 = take(%1986, %1991, axis=0);
  %1993 = expand_dims(%1992, axis=0);
  %1994 = expand_dims(%1985, axis=0);
  %1995 = expand_dims(%1993, axis=0);
  %1996 = vision.all_class_non_max_suppression(%1994, %1995, 2000, 0.5f, 0f);
  %1997 = %1996.0;
  %1998 = shape_of(%1997, dtype="int32");
  %1999 = cast_like(%1998, meta[relay.Constant][473]);
  %2000 = slice_like(%1999, meta[relay.Constant][473], axes=None);
  %2001 = add(meta[relay.Constant][473], %2000);
  %2002 = where(meta[relay.Constant][472], %2001, meta[relay.Constant][473]);
  %2003 = greater_equal(%2002, %2000);
  %2004 = where(%2003, %2000, %2002);
  %2005 = %1996.1;
  %2006 = dyn.strided_slice(%1997, %2004, %2005, meta[relay.Constant][474], begin=None, end=None, strides=None, axes=None);
  %2007 = take(%2006, meta[relay.Constant][475], axis=1);
  %2008 = squeeze(%2007, axis=[1]);
  %2009 = cast(%2008, dtype="int64");
  %2010 = shape_of(%1985, dtype="int64");
  %2011 = take(%2010, 0);
  %2012 = less(%2009, 0);
  %2013 = add(%2009, %2011);
  %2014 = where(%2012, %2013, %2009);
  %2015 = shape_of(%1687, dtype="int32");
  %2016 = cast_like(%2015, meta[relay.Constant][477]);
  %2017 = slice_like(%2016, meta[relay.Constant][477], axes=None);
  %2018 = add(meta[relay.Constant][477], %2017);
  %2019 = where(meta[relay.Constant][476], %2018, meta[relay.Constant][477]);
  %2020 = greater_equal(%2019, %2017);
  %2021 = shape_of(%1687, dtype="int64");
  %2022 = where(%2020, %2017, %2019);
  %2023 = scatter(%2021, meta[relay.Constant][478], meta[relay.Constant][479]);
  %2024 = shape_of(%1703, dtype="int32");
  %2025 = cast_like(%2024, meta[relay.Constant][482]);
  %2026 = slice_like(%2025, meta[relay.Constant][482], axes=None);
  %2027 = add(meta[relay.Constant][482], %2026);
  %2028 = where(meta[relay.Constant][481], %2027, meta[relay.Constant][482]);
  %2029 = greater_equal(%2028, %2026);
  %2030 = shape_of(%1703, dtype="int64");
  %2031 = where(%2029, %2026, %2028);
  %2032 = scatter(%2030, meta[relay.Constant][483], meta[relay.Constant][484]);
  %2033 = dyn.strided_slice(%1703, %2031, %2032, meta[relay.Constant][485], begin=None, end=None, strides=None, axes=None);
  %2034 = take(%2033, 6, axis=1);
  %2035 = cast(%2034, dtype="float32");
  %2036 = argwhere(%2035);
  %2037 = cast(%2036, dtype="int64");
  %2038 = transpose(%2037, axes=[1, 0]);
  %2039 = transpose(%2038, axes=[1, 0]);
  %2040 = squeeze(%2039, axis=[1]);
  %2041 = cast(%2040, dtype="int64");
  %2042 = cast(%2041, dtype="int64");
  %2043 = dyn.strided_slice(%1687, %2022, %2023, meta[relay.Constant][480], begin=None, end=None, strides=None, axes=None);
  %2044 = shape_of(%2043, dtype="int64");
  %2045 = take(%2044, 0);
  %2046 = less(%2042, 0);
  %2047 = add(%2042, %2045);
  %2048 = where(%2046, %2047, %2042);
  %2049 = take(%2043, %2048, axis=0);
  %2050 = take(%1701, 6, axis=1);
  %2051 = shape_of(%2050, dtype="int64");
  %2052 = take(%2051, 0);
  %2053 = less(%2041, 0);
  %2054 = add(%2041, %2052);
  %2055 = where(%2053, %2054, %2041);
  %2056 = take(%2050, %2055, axis=0);
  %2057 = expand_dims(%2056, axis=0);
  %2058 = expand_dims(%2049, axis=0);
  %2059 = expand_dims(%2057, axis=0);
  %2060 = vision.all_class_non_max_suppression(%2058, %2059, 2000, 0.5f, 0f);
  %2061 = %2060.0;
  %2062 = shape_of(%2061, dtype="int32");
  %2063 = cast_like(%2062, meta[relay.Constant][487]);
  %2064 = slice_like(%2063, meta[relay.Constant][487], axes=None);
  %2065 = add(meta[relay.Constant][487], %2064);
  %2066 = where(meta[relay.Constant][486], %2065, meta[relay.Constant][487]);
  %2067 = greater_equal(%2066, %2064);
  %2068 = where(%2067, %2064, %2066);
  %2069 = %2060.1;
  %2070 = dyn.strided_slice(%2061, %2068, %2069, meta[relay.Constant][488], begin=None, end=None, strides=None, axes=None);
  %2071 = take(%2070, meta[relay.Constant][489], axis=1);
  %2072 = squeeze(%2071, axis=[1]);
  %2073 = cast(%2072, dtype="int64");
  %2074 = shape_of(%2049, dtype="int64");
  %2075 = take(%2074, 0);
  %2076 = less(%2073, 0);
  %2077 = add(%2073, %2075);
  %2078 = where(%2076, %2077, %2073);
  %2079 = shape_of(%1687, dtype="int32");
  %2080 = cast_like(%2079, meta[relay.Constant][491]);
  %2081 = slice_like(%2080, meta[relay.Constant][491], axes=None);
  %2082 = add(meta[relay.Constant][491], %2081);
  %2083 = where(meta[relay.Constant][490], %2082, meta[relay.Constant][491]);
  %2084 = greater_equal(%2083, %2081);
  %2085 = shape_of(%1687, dtype="int64");
  %2086 = where(%2084, %2081, %2083);
  %2087 = scatter(%2085, meta[relay.Constant][492], meta[relay.Constant][493]);
  %2088 = shape_of(%1703, dtype="int32");
  %2089 = cast_like(%2088, meta[relay.Constant][496]);
  %2090 = slice_like(%2089, meta[relay.Constant][496], axes=None);
  %2091 = add(meta[relay.Constant][496], %2090);
  %2092 = where(meta[relay.Constant][495], %2091, meta[relay.Constant][496]);
  %2093 = greater_equal(%2092, %2090);
  %2094 = shape_of(%1703, dtype="int64");
  %2095 = where(%2093, %2090, %2092);
  %2096 = scatter(%2094, meta[relay.Constant][497], meta[relay.Constant][498]);
  %2097 = dyn.strided_slice(%1703, %2095, %2096, meta[relay.Constant][499], begin=None, end=None, strides=None, axes=None);
  %2098 = take(%2097, 7, axis=1);
  %2099 = cast(%2098, dtype="float32");
  %2100 = argwhere(%2099);
  %2101 = cast(%2100, dtype="int64");
  %2102 = transpose(%2101, axes=[1, 0]);
  %2103 = transpose(%2102, axes=[1, 0]);
  %2104 = squeeze(%2103, axis=[1]);
  %2105 = cast(%2104, dtype="int64");
  %2106 = cast(%2105, dtype="int64");
  %2107 = dyn.strided_slice(%1687, %2086, %2087, meta[relay.Constant][494], begin=None, end=None, strides=None, axes=None);
  %2108 = shape_of(%2107, dtype="int64");
  %2109 = take(%2108, 0);
  %2110 = less(%2106, 0);
  %2111 = add(%2106, %2109);
  %2112 = where(%2110, %2111, %2106);
  %2113 = take(%2107, %2112, axis=0);
  %2114 = take(%1701, 7, axis=1);
  %2115 = shape_of(%2114, dtype="int64");
  %2116 = take(%2115, 0);
  %2117 = less(%2105, 0);
  %2118 = add(%2105, %2116);
  %2119 = where(%2117, %2118, %2105);
  %2120 = take(%2114, %2119, axis=0);
  %2121 = expand_dims(%2120, axis=0);
  %2122 = expand_dims(%2113, axis=0);
  %2123 = expand_dims(%2121, axis=0);
  %2124 = vision.all_class_non_max_suppression(%2122, %2123, 2000, 0.5f, 0f);
  %2125 = %2124.0;
  %2126 = shape_of(%2125, dtype="int32");
  %2127 = cast_like(%2126, meta[relay.Constant][501]);
  %2128 = slice_like(%2127, meta[relay.Constant][501], axes=None);
  %2129 = add(meta[relay.Constant][501], %2128);
  %2130 = where(meta[relay.Constant][500], %2129, meta[relay.Constant][501]);
  %2131 = greater_equal(%2130, %2128);
  %2132 = where(%2131, %2128, %2130);
  %2133 = %2124.1;
  %2134 = dyn.strided_slice(%2125, %2132, %2133, meta[relay.Constant][502], begin=None, end=None, strides=None, axes=None);
  %2135 = take(%2134, meta[relay.Constant][503], axis=1);
  %2136 = squeeze(%2135, axis=[1]);
  %2137 = cast(%2136, dtype="int64");
  %2138 = shape_of(%2113, dtype="int64");
  %2139 = take(%2138, 0);
  %2140 = less(%2137, 0);
  %2141 = add(%2137, %2139);
  %2142 = where(%2140, %2141, %2137);
  %2143 = shape_of(%1687, dtype="int32");
  %2144 = cast_like(%2143, meta[relay.Constant][505]);
  %2145 = slice_like(%2144, meta[relay.Constant][505], axes=None);
  %2146 = add(meta[relay.Constant][505], %2145);
  %2147 = where(meta[relay.Constant][504], %2146, meta[relay.Constant][505]);
  %2148 = greater_equal(%2147, %2145);
  %2149 = shape_of(%1687, dtype="int64");
  %2150 = where(%2148, %2145, %2147);
  %2151 = scatter(%2149, meta[relay.Constant][506], meta[relay.Constant][507]);
  %2152 = shape_of(%1703, dtype="int32");
  %2153 = cast_like(%2152, meta[relay.Constant][510]);
  %2154 = slice_like(%2153, meta[relay.Constant][510], axes=None);
  %2155 = add(meta[relay.Constant][510], %2154);
  %2156 = where(meta[relay.Constant][509], %2155, meta[relay.Constant][510]);
  %2157 = greater_equal(%2156, %2154);
  %2158 = shape_of(%1703, dtype="int64");
  %2159 = where(%2157, %2154, %2156);
  %2160 = scatter(%2158, meta[relay.Constant][511], meta[relay.Constant][512]);
  %2161 = dyn.strided_slice(%1703, %2159, %2160, meta[relay.Constant][513], begin=None, end=None, strides=None, axes=None);
  %2162 = take(%2161, 8, axis=1);
  %2163 = cast(%2162, dtype="float32");
  %2164 = argwhere(%2163);
  %2165 = cast(%2164, dtype="int64");
  %2166 = transpose(%2165, axes=[1, 0]);
  %2167 = transpose(%2166, axes=[1, 0]);
  %2168 = squeeze(%2167, axis=[1]);
  %2169 = cast(%2168, dtype="int64");
  %2170 = cast(%2169, dtype="int64");
  %2171 = dyn.strided_slice(%1687, %2150, %2151, meta[relay.Constant][508], begin=None, end=None, strides=None, axes=None);
  %2172 = shape_of(%2171, dtype="int64");
  %2173 = take(%2172, 0);
  %2174 = less(%2170, 0);
  %2175 = add(%2170, %2173);
  %2176 = where(%2174, %2175, %2170);
  %2177 = take(%2171, %2176, axis=0);
  %2178 = take(%1701, 8, axis=1);
  %2179 = shape_of(%2178, dtype="int64");
  %2180 = take(%2179, 0);
  %2181 = less(%2169, 0);
  %2182 = add(%2169, %2180);
  %2183 = where(%2181, %2182, %2169);
  %2184 = take(%2178, %2183, axis=0);
  %2185 = expand_dims(%2184, axis=0);
  %2186 = expand_dims(%2177, axis=0);
  %2187 = expand_dims(%2185, axis=0);
  %2188 = vision.all_class_non_max_suppression(%2186, %2187, 2000, 0.5f, 0f);
  %2189 = %2188.0;
  %2190 = shape_of(%2189, dtype="int32");
  %2191 = cast_like(%2190, meta[relay.Constant][515]);
  %2192 = slice_like(%2191, meta[relay.Constant][515], axes=None);
  %2193 = add(meta[relay.Constant][515], %2192);
  %2194 = where(meta[relay.Constant][514], %2193, meta[relay.Constant][515]);
  %2195 = greater_equal(%2194, %2192);
  %2196 = where(%2195, %2192, %2194);
  %2197 = %2188.1;
  %2198 = dyn.strided_slice(%2189, %2196, %2197, meta[relay.Constant][516], begin=None, end=None, strides=None, axes=None);
  %2199 = take(%2198, meta[relay.Constant][517], axis=1);
  %2200 = squeeze(%2199, axis=[1]);
  %2201 = cast(%2200, dtype="int64");
  %2202 = shape_of(%2177, dtype="int64");
  %2203 = take(%2202, 0);
  %2204 = less(%2201, 0);
  %2205 = add(%2201, %2203);
  %2206 = where(%2204, %2205, %2201);
  %2207 = shape_of(%1687, dtype="int32");
  %2208 = cast_like(%2207, meta[relay.Constant][519]);
  %2209 = slice_like(%2208, meta[relay.Constant][519], axes=None);
  %2210 = add(meta[relay.Constant][519], %2209);
  %2211 = where(meta[relay.Constant][518], %2210, meta[relay.Constant][519]);
  %2212 = greater_equal(%2211, %2209);
  %2213 = shape_of(%1687, dtype="int64");
  %2214 = where(%2212, %2209, %2211);
  %2215 = scatter(%2213, meta[relay.Constant][520], meta[relay.Constant][521]);
  %2216 = shape_of(%1703, dtype="int32");
  %2217 = cast_like(%2216, meta[relay.Constant][524]);
  %2218 = slice_like(%2217, meta[relay.Constant][524], axes=None);
  %2219 = add(meta[relay.Constant][524], %2218);
  %2220 = where(meta[relay.Constant][523], %2219, meta[relay.Constant][524]);
  %2221 = greater_equal(%2220, %2218);
  %2222 = shape_of(%1703, dtype="int64");
  %2223 = where(%2221, %2218, %2220);
  %2224 = scatter(%2222, meta[relay.Constant][525], meta[relay.Constant][526]);
  %2225 = dyn.strided_slice(%1703, %2223, %2224, meta[relay.Constant][527], begin=None, end=None, strides=None, axes=None);
  %2226 = take(%2225, 9, axis=1);
  %2227 = cast(%2226, dtype="float32");
  %2228 = argwhere(%2227);
  %2229 = cast(%2228, dtype="int64");
  %2230 = transpose(%2229, axes=[1, 0]);
  %2231 = transpose(%2230, axes=[1, 0]);
  %2232 = squeeze(%2231, axis=[1]);
  %2233 = cast(%2232, dtype="int64");
  %2234 = cast(%2233, dtype="int64");
  %2235 = dyn.strided_slice(%1687, %2214, %2215, meta[relay.Constant][522], begin=None, end=None, strides=None, axes=None);
  %2236 = shape_of(%2235, dtype="int64");
  %2237 = take(%2236, 0);
  %2238 = less(%2234, 0);
  %2239 = add(%2234, %2237);
  %2240 = where(%2238, %2239, %2234);
  %2241 = take(%2235, %2240, axis=0);
  %2242 = take(%1701, 9, axis=1);
  %2243 = shape_of(%2242, dtype="int64");
  %2244 = take(%2243, 0);
  %2245 = less(%2233, 0);
  %2246 = add(%2233, %2244);
  %2247 = where(%2245, %2246, %2233);
  %2248 = take(%2242, %2247, axis=0);
  %2249 = expand_dims(%2248, axis=0);
  %2250 = expand_dims(%2241, axis=0);
  %2251 = expand_dims(%2249, axis=0);
  %2252 = vision.all_class_non_max_suppression(%2250, %2251, 2000, 0.5f, 0f);
  %2253 = %2252.0;
  %2254 = shape_of(%2253, dtype="int32");
  %2255 = cast_like(%2254, meta[relay.Constant][529]);
  %2256 = slice_like(%2255, meta[relay.Constant][529], axes=None);
  %2257 = add(meta[relay.Constant][529], %2256);
  %2258 = where(meta[relay.Constant][528], %2257, meta[relay.Constant][529]);
  %2259 = greater_equal(%2258, %2256);
  %2260 = where(%2259, %2256, %2258);
  %2261 = %2252.1;
  %2262 = dyn.strided_slice(%2253, %2260, %2261, meta[relay.Constant][530], begin=None, end=None, strides=None, axes=None);
  %2263 = take(%2262, meta[relay.Constant][531], axis=1);
  %2264 = squeeze(%2263, axis=[1]);
  %2265 = cast(%2264, dtype="int64");
  %2266 = shape_of(%2241, dtype="int64");
  %2267 = take(%2266, 0);
  %2268 = less(%2265, 0);
  %2269 = add(%2265, %2267);
  %2270 = where(%2268, %2269, %2265);
  %2271 = shape_of(%1687, dtype="int32");
  %2272 = cast_like(%2271, meta[relay.Constant][533]);
  %2273 = slice_like(%2272, meta[relay.Constant][533], axes=None);
  %2274 = add(meta[relay.Constant][533], %2273);
  %2275 = where(meta[relay.Constant][532], %2274, meta[relay.Constant][533]);
  %2276 = greater_equal(%2275, %2273);
  %2277 = shape_of(%1687, dtype="int64");
  %2278 = where(%2276, %2273, %2275);
  %2279 = scatter(%2277, meta[relay.Constant][534], meta[relay.Constant][535]);
  %2280 = shape_of(%1703, dtype="int32");
  %2281 = cast_like(%2280, meta[relay.Constant][538]);
  %2282 = slice_like(%2281, meta[relay.Constant][538], axes=None);
  %2283 = add(meta[relay.Constant][538], %2282);
  %2284 = where(meta[relay.Constant][537], %2283, meta[relay.Constant][538]);
  %2285 = greater_equal(%2284, %2282);
  %2286 = shape_of(%1703, dtype="int64");
  %2287 = where(%2285, %2282, %2284);
  %2288 = scatter(%2286, meta[relay.Constant][539], meta[relay.Constant][540]);
  %2289 = dyn.strided_slice(%1703, %2287, %2288, meta[relay.Constant][541], begin=None, end=None, strides=None, axes=None);
  %2290 = take(%2289, 10, axis=1);
  %2291 = cast(%2290, dtype="float32");
  %2292 = argwhere(%2291);
  %2293 = cast(%2292, dtype="int64");
  %2294 = transpose(%2293, axes=[1, 0]);
  %2295 = transpose(%2294, axes=[1, 0]);
  %2296 = squeeze(%2295, axis=[1]);
  %2297 = cast(%2296, dtype="int64");
  %2298 = cast(%2297, dtype="int64");
  %2299 = dyn.strided_slice(%1687, %2278, %2279, meta[relay.Constant][536], begin=None, end=None, strides=None, axes=None);
  %2300 = shape_of(%2299, dtype="int64");
  %2301 = take(%2300, 0);
  %2302 = less(%2298, 0);
  %2303 = add(%2298, %2301);
  %2304 = where(%2302, %2303, %2298);
  %2305 = take(%2299, %2304, axis=0);
  %2306 = take(%1701, 10, axis=1);
  %2307 = shape_of(%2306, dtype="int64");
  %2308 = take(%2307, 0);
  %2309 = less(%2297, 0);
  %2310 = add(%2297, %2308);
  %2311 = where(%2309, %2310, %2297);
  %2312 = take(%2306, %2311, axis=0);
  %2313 = expand_dims(%2312, axis=0);
  %2314 = expand_dims(%2305, axis=0);
  %2315 = expand_dims(%2313, axis=0);
  %2316 = vision.all_class_non_max_suppression(%2314, %2315, 2000, 0.5f, 0f);
  %2317 = %2316.0;
  %2318 = shape_of(%2317, dtype="int32");
  %2319 = cast_like(%2318, meta[relay.Constant][543]);
  %2320 = slice_like(%2319, meta[relay.Constant][543], axes=None);
  %2321 = add(meta[relay.Constant][543], %2320);
  %2322 = where(meta[relay.Constant][542], %2321, meta[relay.Constant][543]);
  %2323 = greater_equal(%2322, %2320);
  %2324 = where(%2323, %2320, %2322);
  %2325 = %2316.1;
  %2326 = dyn.strided_slice(%2317, %2324, %2325, meta[relay.Constant][544], begin=None, end=None, strides=None, axes=None);
  %2327 = take(%2326, meta[relay.Constant][545], axis=1);
  %2328 = squeeze(%2327, axis=[1]);
  %2329 = cast(%2328, dtype="int64");
  %2330 = shape_of(%2305, dtype="int64");
  %2331 = take(%2330, 0);
  %2332 = less(%2329, 0);
  %2333 = add(%2329, %2331);
  %2334 = where(%2332, %2333, %2329);
  %2335 = shape_of(%1687, dtype="int32");
  %2336 = cast_like(%2335, meta[relay.Constant][547]);
  %2337 = slice_like(%2336, meta[relay.Constant][547], axes=None);
  %2338 = add(meta[relay.Constant][547], %2337);
  %2339 = where(meta[relay.Constant][546], %2338, meta[relay.Constant][547]);
  %2340 = greater_equal(%2339, %2337);
  %2341 = shape_of(%1687, dtype="int64");
  %2342 = where(%2340, %2337, %2339);
  %2343 = scatter(%2341, meta[relay.Constant][548], meta[relay.Constant][549]);
  %2344 = shape_of(%1703, dtype="int32");
  %2345 = cast_like(%2344, meta[relay.Constant][552]);
  %2346 = slice_like(%2345, meta[relay.Constant][552], axes=None);
  %2347 = add(meta[relay.Constant][552], %2346);
  %2348 = where(meta[relay.Constant][551], %2347, meta[relay.Constant][552]);
  %2349 = greater_equal(%2348, %2346);
  %2350 = shape_of(%1703, dtype="int64");
  %2351 = where(%2349, %2346, %2348);
  %2352 = scatter(%2350, meta[relay.Constant][553], meta[relay.Constant][554]);
  %2353 = dyn.strided_slice(%1703, %2351, %2352, meta[relay.Constant][555], begin=None, end=None, strides=None, axes=None);
  %2354 = take(%2353, 11, axis=1);
  %2355 = cast(%2354, dtype="float32");
  %2356 = argwhere(%2355);
  %2357 = cast(%2356, dtype="int64");
  %2358 = transpose(%2357, axes=[1, 0]);
  %2359 = transpose(%2358, axes=[1, 0]);
  %2360 = squeeze(%2359, axis=[1]);
  %2361 = cast(%2360, dtype="int64");
  %2362 = cast(%2361, dtype="int64");
  %2363 = dyn.strided_slice(%1687, %2342, %2343, meta[relay.Constant][550], begin=None, end=None, strides=None, axes=None);
  %2364 = shape_of(%2363, dtype="int64");
  %2365 = take(%2364, 0);
  %2366 = less(%2362, 0);
  %2367 = add(%2362, %2365);
  %2368 = where(%2366, %2367, %2362);
  %2369 = take(%2363, %2368, axis=0);
  %2370 = take(%1701, 11, axis=1);
  %2371 = shape_of(%2370, dtype="int64");
  %2372 = take(%2371, 0);
  %2373 = less(%2361, 0);
  %2374 = add(%2361, %2372);
  %2375 = where(%2373, %2374, %2361);
  %2376 = take(%2370, %2375, axis=0);
  %2377 = expand_dims(%2376, axis=0);
  %2378 = expand_dims(%2369, axis=0);
  %2379 = expand_dims(%2377, axis=0);
  %2380 = vision.all_class_non_max_suppression(%2378, %2379, 2000, 0.5f, 0f);
  %2381 = %2380.0;
  %2382 = shape_of(%2381, dtype="int32");
  %2383 = cast_like(%2382, meta[relay.Constant][557]);
  %2384 = slice_like(%2383, meta[relay.Constant][557], axes=None);
  %2385 = add(meta[relay.Constant][557], %2384);
  %2386 = where(meta[relay.Constant][556], %2385, meta[relay.Constant][557]);
  %2387 = greater_equal(%2386, %2384);
  %2388 = where(%2387, %2384, %2386);
  %2389 = %2380.1;
  %2390 = dyn.strided_slice(%2381, %2388, %2389, meta[relay.Constant][558], begin=None, end=None, strides=None, axes=None);
  %2391 = take(%2390, meta[relay.Constant][559], axis=1);
  %2392 = squeeze(%2391, axis=[1]);
  %2393 = cast(%2392, dtype="int64");
  %2394 = shape_of(%2369, dtype="int64");
  %2395 = take(%2394, 0);
  %2396 = less(%2393, 0);
  %2397 = add(%2393, %2395);
  %2398 = where(%2396, %2397, %2393);
  %2399 = shape_of(%1687, dtype="int32");
  %2400 = cast_like(%2399, meta[relay.Constant][561]);
  %2401 = slice_like(%2400, meta[relay.Constant][561], axes=None);
  %2402 = add(meta[relay.Constant][561], %2401);
  %2403 = where(meta[relay.Constant][560], %2402, meta[relay.Constant][561]);
  %2404 = greater_equal(%2403, %2401);
  %2405 = shape_of(%1687, dtype="int64");
  %2406 = where(%2404, %2401, %2403);
  %2407 = scatter(%2405, meta[relay.Constant][562], meta[relay.Constant][563]);
  %2408 = shape_of(%1703, dtype="int32");
  %2409 = cast_like(%2408, meta[relay.Constant][566]);
  %2410 = slice_like(%2409, meta[relay.Constant][566], axes=None);
  %2411 = add(meta[relay.Constant][566], %2410);
  %2412 = where(meta[relay.Constant][565], %2411, meta[relay.Constant][566]);
  %2413 = greater_equal(%2412, %2410);
  %2414 = shape_of(%1703, dtype="int64");
  %2415 = where(%2413, %2410, %2412);
  %2416 = scatter(%2414, meta[relay.Constant][567], meta[relay.Constant][568]);
  %2417 = dyn.strided_slice(%1703, %2415, %2416, meta[relay.Constant][569], begin=None, end=None, strides=None, axes=None);
  %2418 = take(%2417, 12, axis=1);
  %2419 = cast(%2418, dtype="float32");
  %2420 = argwhere(%2419);
  %2421 = cast(%2420, dtype="int64");
  %2422 = transpose(%2421, axes=[1, 0]);
  %2423 = transpose(%2422, axes=[1, 0]);
  %2424 = squeeze(%2423, axis=[1]);
  %2425 = cast(%2424, dtype="int64");
  %2426 = cast(%2425, dtype="int64");
  %2427 = dyn.strided_slice(%1687, %2406, %2407, meta[relay.Constant][564], begin=None, end=None, strides=None, axes=None);
  %2428 = shape_of(%2427, dtype="int64");
  %2429 = take(%2428, 0);
  %2430 = less(%2426, 0);
  %2431 = add(%2426, %2429);
  %2432 = where(%2430, %2431, %2426);
  %2433 = take(%2427, %2432, axis=0);
  %2434 = take(%1701, 12, axis=1);
  %2435 = shape_of(%2434, dtype="int64");
  %2436 = take(%2435, 0);
  %2437 = less(%2425, 0);
  %2438 = add(%2425, %2436);
  %2439 = where(%2437, %2438, %2425);
  %2440 = take(%2434, %2439, axis=0);
  %2441 = expand_dims(%2440, axis=0);
  %2442 = expand_dims(%2433, axis=0);
  %2443 = expand_dims(%2441, axis=0);
  %2444 = vision.all_class_non_max_suppression(%2442, %2443, 2000, 0.5f, 0f);
  %2445 = %2444.0;
  %2446 = shape_of(%2445, dtype="int32");
  %2447 = cast_like(%2446, meta[relay.Constant][571]);
  %2448 = slice_like(%2447, meta[relay.Constant][571], axes=None);
  %2449 = add(meta[relay.Constant][571], %2448);
  %2450 = where(meta[relay.Constant][570], %2449, meta[relay.Constant][571]);
  %2451 = greater_equal(%2450, %2448);
  %2452 = where(%2451, %2448, %2450);
  %2453 = %2444.1;
  %2454 = dyn.strided_slice(%2445, %2452, %2453, meta[relay.Constant][572], begin=None, end=None, strides=None, axes=None);
  %2455 = take(%2454, meta[relay.Constant][573], axis=1);
  %2456 = squeeze(%2455, axis=[1]);
  %2457 = cast(%2456, dtype="int64");
  %2458 = shape_of(%2433, dtype="int64");
  %2459 = take(%2458, 0);
  %2460 = less(%2457, 0);
  %2461 = add(%2457, %2459);
  %2462 = where(%2460, %2461, %2457);
  %2463 = shape_of(%1687, dtype="int32");
  %2464 = cast_like(%2463, meta[relay.Constant][575]);
  %2465 = slice_like(%2464, meta[relay.Constant][575], axes=None);
  %2466 = add(meta[relay.Constant][575], %2465);
  %2467 = where(meta[relay.Constant][574], %2466, meta[relay.Constant][575]);
  %2468 = greater_equal(%2467, %2465);
  %2469 = shape_of(%1687, dtype="int64");
  %2470 = where(%2468, %2465, %2467);
  %2471 = scatter(%2469, meta[relay.Constant][576], meta[relay.Constant][577]);
  %2472 = shape_of(%1703, dtype="int32");
  %2473 = cast_like(%2472, meta[relay.Constant][580]);
  %2474 = slice_like(%2473, meta[relay.Constant][580], axes=None);
  %2475 = add(meta[relay.Constant][580], %2474);
  %2476 = where(meta[relay.Constant][579], %2475, meta[relay.Constant][580]);
  %2477 = greater_equal(%2476, %2474);
  %2478 = shape_of(%1703, dtype="int64");
  %2479 = where(%2477, %2474, %2476);
  %2480 = scatter(%2478, meta[relay.Constant][581], meta[relay.Constant][582]);
  %2481 = dyn.strided_slice(%1703, %2479, %2480, meta[relay.Constant][583], begin=None, end=None, strides=None, axes=None);
  %2482 = take(%2481, 13, axis=1);
  %2483 = cast(%2482, dtype="float32");
  %2484 = argwhere(%2483);
  %2485 = cast(%2484, dtype="int64");
  %2486 = transpose(%2485, axes=[1, 0]);
  %2487 = transpose(%2486, axes=[1, 0]);
  %2488 = squeeze(%2487, axis=[1]);
  %2489 = cast(%2488, dtype="int64");
  %2490 = cast(%2489, dtype="int64");
  %2491 = dyn.strided_slice(%1687, %2470, %2471, meta[relay.Constant][578], begin=None, end=None, strides=None, axes=None);
  %2492 = shape_of(%2491, dtype="int64");
  %2493 = take(%2492, 0);
  %2494 = less(%2490, 0);
  %2495 = add(%2490, %2493);
  %2496 = where(%2494, %2495, %2490);
  %2497 = take(%2491, %2496, axis=0);
  %2498 = take(%1701, 13, axis=1);
  %2499 = shape_of(%2498, dtype="int64");
  %2500 = take(%2499, 0);
  %2501 = less(%2489, 0);
  %2502 = add(%2489, %2500);
  %2503 = where(%2501, %2502, %2489);
  %2504 = take(%2498, %2503, axis=0);
  %2505 = expand_dims(%2504, axis=0);
  %2506 = expand_dims(%2497, axis=0);
  %2507 = expand_dims(%2505, axis=0);
  %2508 = vision.all_class_non_max_suppression(%2506, %2507, 2000, 0.5f, 0f);
  %2509 = %2508.0;
  %2510 = shape_of(%2509, dtype="int32");
  %2511 = cast_like(%2510, meta[relay.Constant][585]);
  %2512 = slice_like(%2511, meta[relay.Constant][585], axes=None);
  %2513 = add(meta[relay.Constant][585], %2512);
  %2514 = where(meta[relay.Constant][584], %2513, meta[relay.Constant][585]);
  %2515 = greater_equal(%2514, %2512);
  %2516 = where(%2515, %2512, %2514);
  %2517 = %2508.1;
  %2518 = dyn.strided_slice(%2509, %2516, %2517, meta[relay.Constant][586], begin=None, end=None, strides=None, axes=None);
  %2519 = take(%2518, meta[relay.Constant][587], axis=1);
  %2520 = squeeze(%2519, axis=[1]);
  %2521 = cast(%2520, dtype="int64");
  %2522 = shape_of(%2497, dtype="int64");
  %2523 = take(%2522, 0);
  %2524 = less(%2521, 0);
  %2525 = add(%2521, %2523);
  %2526 = where(%2524, %2525, %2521);
  %2527 = shape_of(%1687, dtype="int32");
  %2528 = cast_like(%2527, meta[relay.Constant][589]);
  %2529 = slice_like(%2528, meta[relay.Constant][589], axes=None);
  %2530 = add(meta[relay.Constant][589], %2529);
  %2531 = where(meta[relay.Constant][588], %2530, meta[relay.Constant][589]);
  %2532 = greater_equal(%2531, %2529);
  %2533 = shape_of(%1687, dtype="int64");
  %2534 = where(%2532, %2529, %2531);
  %2535 = scatter(%2533, meta[relay.Constant][590], meta[relay.Constant][591]);
  %2536 = shape_of(%1703, dtype="int32");
  %2537 = cast_like(%2536, meta[relay.Constant][594]);
  %2538 = slice_like(%2537, meta[relay.Constant][594], axes=None);
  %2539 = add(meta[relay.Constant][594], %2538);
  %2540 = where(meta[relay.Constant][593], %2539, meta[relay.Constant][594]);
  %2541 = greater_equal(%2540, %2538);
  %2542 = shape_of(%1703, dtype="int64");
  %2543 = where(%2541, %2538, %2540);
  %2544 = scatter(%2542, meta[relay.Constant][595], meta[relay.Constant][596]);
  %2545 = dyn.strided_slice(%1703, %2543, %2544, meta[relay.Constant][597], begin=None, end=None, strides=None, axes=None);
  %2546 = take(%2545, 14, axis=1);
  %2547 = cast(%2546, dtype="float32");
  %2548 = argwhere(%2547);
  %2549 = cast(%2548, dtype="int64");
  %2550 = transpose(%2549, axes=[1, 0]);
  %2551 = transpose(%2550, axes=[1, 0]);
  %2552 = squeeze(%2551, axis=[1]);
  %2553 = cast(%2552, dtype="int64");
  %2554 = cast(%2553, dtype="int64");
  %2555 = dyn.strided_slice(%1687, %2534, %2535, meta[relay.Constant][592], begin=None, end=None, strides=None, axes=None);
  %2556 = shape_of(%2555, dtype="int64");
  %2557 = take(%2556, 0);
  %2558 = less(%2554, 0);
  %2559 = add(%2554, %2557);
  %2560 = where(%2558, %2559, %2554);
  %2561 = take(%2555, %2560, axis=0);
  %2562 = take(%1701, 14, axis=1);
  %2563 = shape_of(%2562, dtype="int64");
  %2564 = take(%2563, 0);
  %2565 = less(%2553, 0);
  %2566 = add(%2553, %2564);
  %2567 = where(%2565, %2566, %2553);
  %2568 = take(%2562, %2567, axis=0);
  %2569 = expand_dims(%2568, axis=0);
  %2570 = expand_dims(%2561, axis=0);
  %2571 = expand_dims(%2569, axis=0);
  %2572 = vision.all_class_non_max_suppression(%2570, %2571, 2000, 0.5f, 0f);
  %2573 = %2572.0;
  %2574 = shape_of(%2573, dtype="int32");
  %2575 = cast_like(%2574, meta[relay.Constant][599]);
  %2576 = slice_like(%2575, meta[relay.Constant][599], axes=None);
  %2577 = add(meta[relay.Constant][599], %2576);
  %2578 = where(meta[relay.Constant][598], %2577, meta[relay.Constant][599]);
  %2579 = greater_equal(%2578, %2576);
  %2580 = where(%2579, %2576, %2578);
  %2581 = %2572.1;
  %2582 = dyn.strided_slice(%2573, %2580, %2581, meta[relay.Constant][600], begin=None, end=None, strides=None, axes=None);
  %2583 = take(%2582, meta[relay.Constant][601], axis=1);
  %2584 = squeeze(%2583, axis=[1]);
  %2585 = cast(%2584, dtype="int64");
  %2586 = shape_of(%2561, dtype="int64");
  %2587 = take(%2586, 0);
  %2588 = less(%2585, 0);
  %2589 = add(%2585, %2587);
  %2590 = where(%2588, %2589, %2585);
  %2591 = shape_of(%1687, dtype="int32");
  %2592 = cast_like(%2591, meta[relay.Constant][603]);
  %2593 = slice_like(%2592, meta[relay.Constant][603], axes=None);
  %2594 = add(meta[relay.Constant][603], %2593);
  %2595 = where(meta[relay.Constant][602], %2594, meta[relay.Constant][603]);
  %2596 = greater_equal(%2595, %2593);
  %2597 = shape_of(%1687, dtype="int64");
  %2598 = where(%2596, %2593, %2595);
  %2599 = scatter(%2597, meta[relay.Constant][604], meta[relay.Constant][605]);
  %2600 = shape_of(%1703, dtype="int32");
  %2601 = cast_like(%2600, meta[relay.Constant][608]);
  %2602 = slice_like(%2601, meta[relay.Constant][608], axes=None);
  %2603 = add(meta[relay.Constant][608], %2602);
  %2604 = where(meta[relay.Constant][607], %2603, meta[relay.Constant][608]);
  %2605 = greater_equal(%2604, %2602);
  %2606 = shape_of(%1703, dtype="int64");
  %2607 = where(%2605, %2602, %2604);
  %2608 = scatter(%2606, meta[relay.Constant][609], meta[relay.Constant][610]);
  %2609 = dyn.strided_slice(%1703, %2607, %2608, meta[relay.Constant][611], begin=None, end=None, strides=None, axes=None);
  %2610 = take(%2609, 15, axis=1);
  %2611 = cast(%2610, dtype="float32");
  %2612 = argwhere(%2611);
  %2613 = cast(%2612, dtype="int64");
  %2614 = transpose(%2613, axes=[1, 0]);
  %2615 = transpose(%2614, axes=[1, 0]);
  %2616 = squeeze(%2615, axis=[1]);
  %2617 = cast(%2616, dtype="int64");
  %2618 = cast(%2617, dtype="int64");
  %2619 = dyn.strided_slice(%1687, %2598, %2599, meta[relay.Constant][606], begin=None, end=None, strides=None, axes=None);
  %2620 = shape_of(%2619, dtype="int64");
  %2621 = take(%2620, 0);
  %2622 = less(%2618, 0);
  %2623 = add(%2618, %2621);
  %2624 = where(%2622, %2623, %2618);
  %2625 = take(%2619, %2624, axis=0);
  %2626 = take(%1701, 15, axis=1);
  %2627 = shape_of(%2626, dtype="int64");
  %2628 = take(%2627, 0);
  %2629 = less(%2617, 0);
  %2630 = add(%2617, %2628);
  %2631 = where(%2629, %2630, %2617);
  %2632 = take(%2626, %2631, axis=0);
  %2633 = expand_dims(%2632, axis=0);
  %2634 = expand_dims(%2625, axis=0);
  %2635 = expand_dims(%2633, axis=0);
  %2636 = vision.all_class_non_max_suppression(%2634, %2635, 2000, 0.5f, 0f);
  %2637 = %2636.0;
  %2638 = shape_of(%2637, dtype="int32");
  %2639 = cast_like(%2638, meta[relay.Constant][613]);
  %2640 = slice_like(%2639, meta[relay.Constant][613], axes=None);
  %2641 = add(meta[relay.Constant][613], %2640);
  %2642 = where(meta[relay.Constant][612], %2641, meta[relay.Constant][613]);
  %2643 = greater_equal(%2642, %2640);
  %2644 = where(%2643, %2640, %2642);
  %2645 = %2636.1;
  %2646 = dyn.strided_slice(%2637, %2644, %2645, meta[relay.Constant][614], begin=None, end=None, strides=None, axes=None);
  %2647 = take(%2646, meta[relay.Constant][615], axis=1);
  %2648 = squeeze(%2647, axis=[1]);
  %2649 = cast(%2648, dtype="int64");
  %2650 = shape_of(%2625, dtype="int64");
  %2651 = take(%2650, 0);
  %2652 = less(%2649, 0);
  %2653 = add(%2649, %2651);
  %2654 = where(%2652, %2653, %2649);
  %2655 = shape_of(%1687, dtype="int32");
  %2656 = cast_like(%2655, meta[relay.Constant][617]);
  %2657 = slice_like(%2656, meta[relay.Constant][617], axes=None);
  %2658 = add(meta[relay.Constant][617], %2657);
  %2659 = where(meta[relay.Constant][616], %2658, meta[relay.Constant][617]);
  %2660 = greater_equal(%2659, %2657);
  %2661 = shape_of(%1687, dtype="int64");
  %2662 = where(%2660, %2657, %2659);
  %2663 = scatter(%2661, meta[relay.Constant][618], meta[relay.Constant][619]);
  %2664 = shape_of(%1703, dtype="int32");
  %2665 = cast_like(%2664, meta[relay.Constant][622]);
  %2666 = slice_like(%2665, meta[relay.Constant][622], axes=None);
  %2667 = add(meta[relay.Constant][622], %2666);
  %2668 = where(meta[relay.Constant][621], %2667, meta[relay.Constant][622]);
  %2669 = greater_equal(%2668, %2666);
  %2670 = shape_of(%1703, dtype="int64");
  %2671 = where(%2669, %2666, %2668);
  %2672 = scatter(%2670, meta[relay.Constant][623], meta[relay.Constant][624]);
  %2673 = dyn.strided_slice(%1703, %2671, %2672, meta[relay.Constant][625], begin=None, end=None, strides=None, axes=None);
  %2674 = take(%2673, 16, axis=1);
  %2675 = cast(%2674, dtype="float32");
  %2676 = argwhere(%2675);
  %2677 = cast(%2676, dtype="int64");
  %2678 = transpose(%2677, axes=[1, 0]);
  %2679 = transpose(%2678, axes=[1, 0]);
  %2680 = squeeze(%2679, axis=[1]);
  %2681 = cast(%2680, dtype="int64");
  %2682 = cast(%2681, dtype="int64");
  %2683 = dyn.strided_slice(%1687, %2662, %2663, meta[relay.Constant][620], begin=None, end=None, strides=None, axes=None);
  %2684 = shape_of(%2683, dtype="int64");
  %2685 = take(%2684, 0);
  %2686 = less(%2682, 0);
  %2687 = add(%2682, %2685);
  %2688 = where(%2686, %2687, %2682);
  %2689 = take(%2683, %2688, axis=0);
  %2690 = take(%1701, 16, axis=1);
  %2691 = shape_of(%2690, dtype="int64");
  %2692 = take(%2691, 0);
  %2693 = less(%2681, 0);
  %2694 = add(%2681, %2692);
  %2695 = where(%2693, %2694, %2681);
  %2696 = take(%2690, %2695, axis=0);
  %2697 = expand_dims(%2696, axis=0);
  %2698 = expand_dims(%2689, axis=0);
  %2699 = expand_dims(%2697, axis=0);
  %2700 = vision.all_class_non_max_suppression(%2698, %2699, 2000, 0.5f, 0f);
  %2701 = %2700.0;
  %2702 = shape_of(%2701, dtype="int32");
  %2703 = cast_like(%2702, meta[relay.Constant][627]);
  %2704 = slice_like(%2703, meta[relay.Constant][627], axes=None);
  %2705 = add(meta[relay.Constant][627], %2704);
  %2706 = where(meta[relay.Constant][626], %2705, meta[relay.Constant][627]);
  %2707 = greater_equal(%2706, %2704);
  %2708 = where(%2707, %2704, %2706);
  %2709 = %2700.1;
  %2710 = dyn.strided_slice(%2701, %2708, %2709, meta[relay.Constant][628], begin=None, end=None, strides=None, axes=None);
  %2711 = take(%2710, meta[relay.Constant][629], axis=1);
  %2712 = squeeze(%2711, axis=[1]);
  %2713 = cast(%2712, dtype="int64");
  %2714 = shape_of(%2689, dtype="int64");
  %2715 = take(%2714, 0);
  %2716 = less(%2713, 0);
  %2717 = add(%2713, %2715);
  %2718 = where(%2716, %2717, %2713);
  %2719 = shape_of(%1687, dtype="int32");
  %2720 = cast_like(%2719, meta[relay.Constant][631]);
  %2721 = slice_like(%2720, meta[relay.Constant][631], axes=None);
  %2722 = add(meta[relay.Constant][631], %2721);
  %2723 = where(meta[relay.Constant][630], %2722, meta[relay.Constant][631]);
  %2724 = greater_equal(%2723, %2721);
  %2725 = shape_of(%1687, dtype="int64");
  %2726 = where(%2724, %2721, %2723);
  %2727 = scatter(%2725, meta[relay.Constant][632], meta[relay.Constant][633]);
  %2728 = shape_of(%1703, dtype="int32");
  %2729 = cast_like(%2728, meta[relay.Constant][636]);
  %2730 = slice_like(%2729, meta[relay.Constant][636], axes=None);
  %2731 = add(meta[relay.Constant][636], %2730);
  %2732 = where(meta[relay.Constant][635], %2731, meta[relay.Constant][636]);
  %2733 = greater_equal(%2732, %2730);
  %2734 = shape_of(%1703, dtype="int64");
  %2735 = where(%2733, %2730, %2732);
  %2736 = scatter(%2734, meta[relay.Constant][637], meta[relay.Constant][638]);
  %2737 = dyn.strided_slice(%1703, %2735, %2736, meta[relay.Constant][639], begin=None, end=None, strides=None, axes=None);
  %2738 = take(%2737, 17, axis=1);
  %2739 = cast(%2738, dtype="float32");
  %2740 = argwhere(%2739);
  %2741 = cast(%2740, dtype="int64");
  %2742 = transpose(%2741, axes=[1, 0]);
  %2743 = transpose(%2742, axes=[1, 0]);
  %2744 = squeeze(%2743, axis=[1]);
  %2745 = cast(%2744, dtype="int64");
  %2746 = cast(%2745, dtype="int64");
  %2747 = dyn.strided_slice(%1687, %2726, %2727, meta[relay.Constant][634], begin=None, end=None, strides=None, axes=None);
  %2748 = shape_of(%2747, dtype="int64");
  %2749 = take(%2748, 0);
  %2750 = less(%2746, 0);
  %2751 = add(%2746, %2749);
  %2752 = where(%2750, %2751, %2746);
  %2753 = take(%2747, %2752, axis=0);
  %2754 = take(%1701, 17, axis=1);
  %2755 = shape_of(%2754, dtype="int64");
  %2756 = take(%2755, 0);
  %2757 = less(%2745, 0);
  %2758 = add(%2745, %2756);
  %2759 = where(%2757, %2758, %2745);
  %2760 = take(%2754, %2759, axis=0);
  %2761 = expand_dims(%2760, axis=0);
  %2762 = expand_dims(%2753, axis=0);
  %2763 = expand_dims(%2761, axis=0);
  %2764 = vision.all_class_non_max_suppression(%2762, %2763, 2000, 0.5f, 0f);
  %2765 = %2764.0;
  %2766 = shape_of(%2765, dtype="int32");
  %2767 = cast_like(%2766, meta[relay.Constant][641]);
  %2768 = slice_like(%2767, meta[relay.Constant][641], axes=None);
  %2769 = add(meta[relay.Constant][641], %2768);
  %2770 = where(meta[relay.Constant][640], %2769, meta[relay.Constant][641]);
  %2771 = greater_equal(%2770, %2768);
  %2772 = where(%2771, %2768, %2770);
  %2773 = %2764.1;
  %2774 = dyn.strided_slice(%2765, %2772, %2773, meta[relay.Constant][642], begin=None, end=None, strides=None, axes=None);
  %2775 = take(%2774, meta[relay.Constant][643], axis=1);
  %2776 = squeeze(%2775, axis=[1]);
  %2777 = cast(%2776, dtype="int64");
  %2778 = shape_of(%2753, dtype="int64");
  %2779 = take(%2778, 0);
  %2780 = less(%2777, 0);
  %2781 = add(%2777, %2779);
  %2782 = where(%2780, %2781, %2777);
  %2783 = shape_of(%1687, dtype="int32");
  %2784 = cast_like(%2783, meta[relay.Constant][645]);
  %2785 = slice_like(%2784, meta[relay.Constant][645], axes=None);
  %2786 = add(meta[relay.Constant][645], %2785);
  %2787 = where(meta[relay.Constant][644], %2786, meta[relay.Constant][645]);
  %2788 = greater_equal(%2787, %2785);
  %2789 = shape_of(%1687, dtype="int64");
  %2790 = where(%2788, %2785, %2787);
  %2791 = scatter(%2789, meta[relay.Constant][646], meta[relay.Constant][647]);
  %2792 = shape_of(%1703, dtype="int32");
  %2793 = cast_like(%2792, meta[relay.Constant][650]);
  %2794 = slice_like(%2793, meta[relay.Constant][650], axes=None);
  %2795 = add(meta[relay.Constant][650], %2794);
  %2796 = where(meta[relay.Constant][649], %2795, meta[relay.Constant][650]);
  %2797 = greater_equal(%2796, %2794);
  %2798 = shape_of(%1703, dtype="int64");
  %2799 = where(%2797, %2794, %2796);
  %2800 = scatter(%2798, meta[relay.Constant][651], meta[relay.Constant][652]);
  %2801 = dyn.strided_slice(%1703, %2799, %2800, meta[relay.Constant][653], begin=None, end=None, strides=None, axes=None);
  %2802 = take(%2801, 18, axis=1);
  %2803 = cast(%2802, dtype="float32");
  %2804 = argwhere(%2803);
  %2805 = cast(%2804, dtype="int64");
  %2806 = transpose(%2805, axes=[1, 0]);
  %2807 = transpose(%2806, axes=[1, 0]);
  %2808 = squeeze(%2807, axis=[1]);
  %2809 = cast(%2808, dtype="int64");
  %2810 = cast(%2809, dtype="int64");
  %2811 = dyn.strided_slice(%1687, %2790, %2791, meta[relay.Constant][648], begin=None, end=None, strides=None, axes=None);
  %2812 = shape_of(%2811, dtype="int64");
  %2813 = take(%2812, 0);
  %2814 = less(%2810, 0);
  %2815 = add(%2810, %2813);
  %2816 = where(%2814, %2815, %2810);
  %2817 = take(%2811, %2816, axis=0);
  %2818 = take(%1701, 18, axis=1);
  %2819 = shape_of(%2818, dtype="int64");
  %2820 = take(%2819, 0);
  %2821 = less(%2809, 0);
  %2822 = add(%2809, %2820);
  %2823 = where(%2821, %2822, %2809);
  %2824 = take(%2818, %2823, axis=0);
  %2825 = expand_dims(%2824, axis=0);
  %2826 = expand_dims(%2817, axis=0);
  %2827 = expand_dims(%2825, axis=0);
  %2828 = vision.all_class_non_max_suppression(%2826, %2827, 2000, 0.5f, 0f);
  %2829 = %2828.0;
  %2830 = shape_of(%2829, dtype="int32");
  %2831 = cast_like(%2830, meta[relay.Constant][655]);
  %2832 = slice_like(%2831, meta[relay.Constant][655], axes=None);
  %2833 = add(meta[relay.Constant][655], %2832);
  %2834 = where(meta[relay.Constant][654], %2833, meta[relay.Constant][655]);
  %2835 = greater_equal(%2834, %2832);
  %2836 = where(%2835, %2832, %2834);
  %2837 = %2828.1;
  %2838 = dyn.strided_slice(%2829, %2836, %2837, meta[relay.Constant][656], begin=None, end=None, strides=None, axes=None);
  %2839 = take(%2838, meta[relay.Constant][657], axis=1);
  %2840 = squeeze(%2839, axis=[1]);
  %2841 = cast(%2840, dtype="int64");
  %2842 = shape_of(%2817, dtype="int64");
  %2843 = take(%2842, 0);
  %2844 = less(%2841, 0);
  %2845 = add(%2841, %2843);
  %2846 = where(%2844, %2845, %2841);
  %2847 = shape_of(%1687, dtype="int32");
  %2848 = cast_like(%2847, meta[relay.Constant][659]);
  %2849 = slice_like(%2848, meta[relay.Constant][659], axes=None);
  %2850 = add(meta[relay.Constant][659], %2849);
  %2851 = where(meta[relay.Constant][658], %2850, meta[relay.Constant][659]);
  %2852 = greater_equal(%2851, %2849);
  %2853 = shape_of(%1687, dtype="int64");
  %2854 = where(%2852, %2849, %2851);
  %2855 = scatter(%2853, meta[relay.Constant][660], meta[relay.Constant][661]);
  %2856 = shape_of(%1703, dtype="int32");
  %2857 = cast_like(%2856, meta[relay.Constant][664]);
  %2858 = slice_like(%2857, meta[relay.Constant][664], axes=None);
  %2859 = add(meta[relay.Constant][664], %2858);
  %2860 = where(meta[relay.Constant][663], %2859, meta[relay.Constant][664]);
  %2861 = greater_equal(%2860, %2858);
  %2862 = shape_of(%1703, dtype="int64");
  %2863 = where(%2861, %2858, %2860);
  %2864 = scatter(%2862, meta[relay.Constant][665], meta[relay.Constant][666]);
  %2865 = dyn.strided_slice(%1703, %2863, %2864, meta[relay.Constant][667], begin=None, end=None, strides=None, axes=None);
  %2866 = take(%2865, 19, axis=1);
  %2867 = cast(%2866, dtype="float32");
  %2868 = argwhere(%2867);
  %2869 = cast(%2868, dtype="int64");
  %2870 = transpose(%2869, axes=[1, 0]);
  %2871 = transpose(%2870, axes=[1, 0]);
  %2872 = squeeze(%2871, axis=[1]);
  %2873 = cast(%2872, dtype="int64");
  %2874 = cast(%2873, dtype="int64");
  %2875 = dyn.strided_slice(%1687, %2854, %2855, meta[relay.Constant][662], begin=None, end=None, strides=None, axes=None);
  %2876 = shape_of(%2875, dtype="int64");
  %2877 = take(%2876, 0);
  %2878 = less(%2874, 0);
  %2879 = add(%2874, %2877);
  %2880 = where(%2878, %2879, %2874);
  %2881 = take(%2875, %2880, axis=0);
  %2882 = take(%1701, 19, axis=1);
  %2883 = shape_of(%2882, dtype="int64");
  %2884 = take(%2883, 0);
  %2885 = less(%2873, 0);
  %2886 = add(%2873, %2884);
  %2887 = where(%2885, %2886, %2873);
  %2888 = take(%2882, %2887, axis=0);
  %2889 = expand_dims(%2888, axis=0);
  %2890 = expand_dims(%2881, axis=0);
  %2891 = expand_dims(%2889, axis=0);
  %2892 = vision.all_class_non_max_suppression(%2890, %2891, 2000, 0.5f, 0f);
  %2893 = %2892.0;
  %2894 = shape_of(%2893, dtype="int32");
  %2895 = cast_like(%2894, meta[relay.Constant][669]);
  %2896 = slice_like(%2895, meta[relay.Constant][669], axes=None);
  %2897 = add(meta[relay.Constant][669], %2896);
  %2898 = where(meta[relay.Constant][668], %2897, meta[relay.Constant][669]);
  %2899 = greater_equal(%2898, %2896);
  %2900 = where(%2899, %2896, %2898);
  %2901 = %2892.1;
  %2902 = dyn.strided_slice(%2893, %2900, %2901, meta[relay.Constant][670], begin=None, end=None, strides=None, axes=None);
  %2903 = take(%2902, meta[relay.Constant][671], axis=1);
  %2904 = squeeze(%2903, axis=[1]);
  %2905 = cast(%2904, dtype="int64");
  %2906 = shape_of(%2881, dtype="int64");
  %2907 = take(%2906, 0);
  %2908 = less(%2905, 0);
  %2909 = add(%2905, %2907);
  %2910 = where(%2908, %2909, %2905);
  %2911 = shape_of(%1687, dtype="int32");
  %2912 = cast_like(%2911, meta[relay.Constant][673]);
  %2913 = slice_like(%2912, meta[relay.Constant][673], axes=None);
  %2914 = add(meta[relay.Constant][673], %2913);
  %2915 = where(meta[relay.Constant][672], %2914, meta[relay.Constant][673]);
  %2916 = greater_equal(%2915, %2913);
  %2917 = shape_of(%1687, dtype="int64");
  %2918 = where(%2916, %2913, %2915);
  %2919 = scatter(%2917, meta[relay.Constant][674], meta[relay.Constant][675]);
  %2920 = shape_of(%1703, dtype="int32");
  %2921 = cast_like(%2920, meta[relay.Constant][678]);
  %2922 = slice_like(%2921, meta[relay.Constant][678], axes=None);
  %2923 = add(meta[relay.Constant][678], %2922);
  %2924 = where(meta[relay.Constant][677], %2923, meta[relay.Constant][678]);
  %2925 = greater_equal(%2924, %2922);
  %2926 = shape_of(%1703, dtype="int64");
  %2927 = where(%2925, %2922, %2924);
  %2928 = scatter(%2926, meta[relay.Constant][679], meta[relay.Constant][680]);
  %2929 = dyn.strided_slice(%1703, %2927, %2928, meta[relay.Constant][681], begin=None, end=None, strides=None, axes=None);
  %2930 = take(%2929, 20, axis=1);
  %2931 = cast(%2930, dtype="float32");
  %2932 = argwhere(%2931);
  %2933 = cast(%2932, dtype="int64");
  %2934 = transpose(%2933, axes=[1, 0]);
  %2935 = transpose(%2934, axes=[1, 0]);
  %2936 = squeeze(%2935, axis=[1]);
  %2937 = cast(%2936, dtype="int64");
  %2938 = cast(%2937, dtype="int64");
  %2939 = dyn.strided_slice(%1687, %2918, %2919, meta[relay.Constant][676], begin=None, end=None, strides=None, axes=None);
  %2940 = shape_of(%2939, dtype="int64");
  %2941 = take(%2940, 0);
  %2942 = less(%2938, 0);
  %2943 = add(%2938, %2941);
  %2944 = where(%2942, %2943, %2938);
  %2945 = take(%2939, %2944, axis=0);
  %2946 = take(%1701, 20, axis=1);
  %2947 = shape_of(%2946, dtype="int64");
  %2948 = take(%2947, 0);
  %2949 = less(%2937, 0);
  %2950 = add(%2937, %2948);
  %2951 = where(%2949, %2950, %2937);
  %2952 = take(%2946, %2951, axis=0);
  %2953 = expand_dims(%2952, axis=0);
  %2954 = expand_dims(%2945, axis=0);
  %2955 = expand_dims(%2953, axis=0);
  %2956 = vision.all_class_non_max_suppression(%2954, %2955, 2000, 0.5f, 0f);
  %2957 = %2956.0;
  %2958 = shape_of(%2957, dtype="int32");
  %2959 = cast_like(%2958, meta[relay.Constant][683]);
  %2960 = slice_like(%2959, meta[relay.Constant][683], axes=None);
  %2961 = add(meta[relay.Constant][683], %2960);
  %2962 = where(meta[relay.Constant][682], %2961, meta[relay.Constant][683]);
  %2963 = greater_equal(%2962, %2960);
  %2964 = where(%2963, %2960, %2962);
  %2965 = %2956.1;
  %2966 = dyn.strided_slice(%2957, %2964, %2965, meta[relay.Constant][684], begin=None, end=None, strides=None, axes=None);
  %2967 = take(%2966, meta[relay.Constant][685], axis=1);
  %2968 = squeeze(%2967, axis=[1]);
  %2969 = cast(%2968, dtype="int64");
  %2970 = shape_of(%2945, dtype="int64");
  %2971 = take(%2970, 0);
  %2972 = less(%2969, 0);
  %2973 = add(%2969, %2971);
  %2974 = where(%2972, %2973, %2969);
  %2975 = shape_of(%1687, dtype="int32");
  %2976 = cast_like(%2975, meta[relay.Constant][687]);
  %2977 = slice_like(%2976, meta[relay.Constant][687], axes=None);
  %2978 = add(meta[relay.Constant][687], %2977);
  %2979 = where(meta[relay.Constant][686], %2978, meta[relay.Constant][687]);
  %2980 = greater_equal(%2979, %2977);
  %2981 = shape_of(%1687, dtype="int64");
  %2982 = where(%2980, %2977, %2979);
  %2983 = scatter(%2981, meta[relay.Constant][688], meta[relay.Constant][689]);
  %2984 = shape_of(%1703, dtype="int32");
  %2985 = cast_like(%2984, meta[relay.Constant][692]);
  %2986 = slice_like(%2985, meta[relay.Constant][692], axes=None);
  %2987 = add(meta[relay.Constant][692], %2986);
  %2988 = where(meta[relay.Constant][691], %2987, meta[relay.Constant][692]);
  %2989 = greater_equal(%2988, %2986);
  %2990 = shape_of(%1703, dtype="int64");
  %2991 = where(%2989, %2986, %2988);
  %2992 = scatter(%2990, meta[relay.Constant][693], meta[relay.Constant][694]);
  %2993 = dyn.strided_slice(%1703, %2991, %2992, meta[relay.Constant][695], begin=None, end=None, strides=None, axes=None);
  %2994 = take(%2993, 21, axis=1);
  %2995 = cast(%2994, dtype="float32");
  %2996 = argwhere(%2995);
  %2997 = cast(%2996, dtype="int64");
  %2998 = transpose(%2997, axes=[1, 0]);
  %2999 = transpose(%2998, axes=[1, 0]);
  %3000 = squeeze(%2999, axis=[1]);
  %3001 = cast(%3000, dtype="int64");
  %3002 = cast(%3001, dtype="int64");
  %3003 = dyn.strided_slice(%1687, %2982, %2983, meta[relay.Constant][690], begin=None, end=None, strides=None, axes=None);
  %3004 = shape_of(%3003, dtype="int64");
  %3005 = take(%3004, 0);
  %3006 = less(%3002, 0);
  %3007 = add(%3002, %3005);
  %3008 = where(%3006, %3007, %3002);
  %3009 = take(%3003, %3008, axis=0);
  %3010 = take(%1701, 21, axis=1);
  %3011 = shape_of(%3010, dtype="int64");
  %3012 = take(%3011, 0);
  %3013 = less(%3001, 0);
  %3014 = add(%3001, %3012);
  %3015 = where(%3013, %3014, %3001);
  %3016 = take(%3010, %3015, axis=0);
  %3017 = expand_dims(%3016, axis=0);
  %3018 = expand_dims(%3009, axis=0);
  %3019 = expand_dims(%3017, axis=0);
  %3020 = vision.all_class_non_max_suppression(%3018, %3019, 2000, 0.5f, 0f);
  %3021 = %3020.0;
  %3022 = shape_of(%3021, dtype="int32");
  %3023 = cast_like(%3022, meta[relay.Constant][697]);
  %3024 = slice_like(%3023, meta[relay.Constant][697], axes=None);
  %3025 = add(meta[relay.Constant][697], %3024);
  %3026 = where(meta[relay.Constant][696], %3025, meta[relay.Constant][697]);
  %3027 = greater_equal(%3026, %3024);
  %3028 = where(%3027, %3024, %3026);
  %3029 = %3020.1;
  %3030 = dyn.strided_slice(%3021, %3028, %3029, meta[relay.Constant][698], begin=None, end=None, strides=None, axes=None);
  %3031 = take(%3030, meta[relay.Constant][699], axis=1);
  %3032 = squeeze(%3031, axis=[1]);
  %3033 = cast(%3032, dtype="int64");
  %3034 = shape_of(%3009, dtype="int64");
  %3035 = take(%3034, 0);
  %3036 = less(%3033, 0);
  %3037 = add(%3033, %3035);
  %3038 = where(%3036, %3037, %3033);
  %3039 = shape_of(%1687, dtype="int32");
  %3040 = cast_like(%3039, meta[relay.Constant][701]);
  %3041 = slice_like(%3040, meta[relay.Constant][701], axes=None);
  %3042 = add(meta[relay.Constant][701], %3041);
  %3043 = where(meta[relay.Constant][700], %3042, meta[relay.Constant][701]);
  %3044 = greater_equal(%3043, %3041);
  %3045 = shape_of(%1687, dtype="int64");
  %3046 = where(%3044, %3041, %3043);
  %3047 = scatter(%3045, meta[relay.Constant][702], meta[relay.Constant][703]);
  %3048 = shape_of(%1703, dtype="int32");
  %3049 = cast_like(%3048, meta[relay.Constant][706]);
  %3050 = slice_like(%3049, meta[relay.Constant][706], axes=None);
  %3051 = add(meta[relay.Constant][706], %3050);
  %3052 = where(meta[relay.Constant][705], %3051, meta[relay.Constant][706]);
  %3053 = greater_equal(%3052, %3050);
  %3054 = shape_of(%1703, dtype="int64");
  %3055 = where(%3053, %3050, %3052);
  %3056 = scatter(%3054, meta[relay.Constant][707], meta[relay.Constant][708]);
  %3057 = dyn.strided_slice(%1703, %3055, %3056, meta[relay.Constant][709], begin=None, end=None, strides=None, axes=None);
  %3058 = take(%3057, 22, axis=1);
  %3059 = cast(%3058, dtype="float32");
  %3060 = argwhere(%3059);
  %3061 = cast(%3060, dtype="int64");
  %3062 = transpose(%3061, axes=[1, 0]);
  %3063 = transpose(%3062, axes=[1, 0]);
  %3064 = squeeze(%3063, axis=[1]);
  %3065 = cast(%3064, dtype="int64");
  %3066 = cast(%3065, dtype="int64");
  %3067 = dyn.strided_slice(%1687, %3046, %3047, meta[relay.Constant][704], begin=None, end=None, strides=None, axes=None);
  %3068 = shape_of(%3067, dtype="int64");
  %3069 = take(%3068, 0);
  %3070 = less(%3066, 0);
  %3071 = add(%3066, %3069);
  %3072 = where(%3070, %3071, %3066);
  %3073 = take(%3067, %3072, axis=0);
  %3074 = take(%1701, 22, axis=1);
  %3075 = shape_of(%3074, dtype="int64");
  %3076 = take(%3075, 0);
  %3077 = less(%3065, 0);
  %3078 = add(%3065, %3076);
  %3079 = where(%3077, %3078, %3065);
  %3080 = take(%3074, %3079, axis=0);
  %3081 = expand_dims(%3080, axis=0);
  %3082 = expand_dims(%3073, axis=0);
  %3083 = expand_dims(%3081, axis=0);
  %3084 = vision.all_class_non_max_suppression(%3082, %3083, 2000, 0.5f, 0f);
  %3085 = %3084.0;
  %3086 = shape_of(%3085, dtype="int32");
  %3087 = cast_like(%3086, meta[relay.Constant][711]);
  %3088 = slice_like(%3087, meta[relay.Constant][711], axes=None);
  %3089 = add(meta[relay.Constant][711], %3088);
  %3090 = where(meta[relay.Constant][710], %3089, meta[relay.Constant][711]);
  %3091 = greater_equal(%3090, %3088);
  %3092 = where(%3091, %3088, %3090);
  %3093 = %3084.1;
  %3094 = dyn.strided_slice(%3085, %3092, %3093, meta[relay.Constant][712], begin=None, end=None, strides=None, axes=None);
  %3095 = take(%3094, meta[relay.Constant][713], axis=1);
  %3096 = squeeze(%3095, axis=[1]);
  %3097 = cast(%3096, dtype="int64");
  %3098 = shape_of(%3073, dtype="int64");
  %3099 = take(%3098, 0);
  %3100 = less(%3097, 0);
  %3101 = add(%3097, %3099);
  %3102 = where(%3100, %3101, %3097);
  %3103 = shape_of(%1687, dtype="int32");
  %3104 = cast_like(%3103, meta[relay.Constant][715]);
  %3105 = slice_like(%3104, meta[relay.Constant][715], axes=None);
  %3106 = add(meta[relay.Constant][715], %3105);
  %3107 = where(meta[relay.Constant][714], %3106, meta[relay.Constant][715]);
  %3108 = greater_equal(%3107, %3105);
  %3109 = shape_of(%1687, dtype="int64");
  %3110 = where(%3108, %3105, %3107);
  %3111 = scatter(%3109, meta[relay.Constant][716], meta[relay.Constant][717]);
  %3112 = shape_of(%1703, dtype="int32");
  %3113 = cast_like(%3112, meta[relay.Constant][720]);
  %3114 = slice_like(%3113, meta[relay.Constant][720], axes=None);
  %3115 = add(meta[relay.Constant][720], %3114);
  %3116 = where(meta[relay.Constant][719], %3115, meta[relay.Constant][720]);
  %3117 = greater_equal(%3116, %3114);
  %3118 = shape_of(%1703, dtype="int64");
  %3119 = where(%3117, %3114, %3116);
  %3120 = scatter(%3118, meta[relay.Constant][721], meta[relay.Constant][722]);
  %3121 = dyn.strided_slice(%1703, %3119, %3120, meta[relay.Constant][723], begin=None, end=None, strides=None, axes=None);
  %3122 = take(%3121, 23, axis=1);
  %3123 = cast(%3122, dtype="float32");
  %3124 = argwhere(%3123);
  %3125 = cast(%3124, dtype="int64");
  %3126 = transpose(%3125, axes=[1, 0]);
  %3127 = transpose(%3126, axes=[1, 0]);
  %3128 = squeeze(%3127, axis=[1]);
  %3129 = cast(%3128, dtype="int64");
  %3130 = cast(%3129, dtype="int64");
  %3131 = dyn.strided_slice(%1687, %3110, %3111, meta[relay.Constant][718], begin=None, end=None, strides=None, axes=None);
  %3132 = shape_of(%3131, dtype="int64");
  %3133 = take(%3132, 0);
  %3134 = less(%3130, 0);
  %3135 = add(%3130, %3133);
  %3136 = where(%3134, %3135, %3130);
  %3137 = take(%3131, %3136, axis=0);
  %3138 = take(%1701, 23, axis=1);
  %3139 = shape_of(%3138, dtype="int64");
  %3140 = take(%3139, 0);
  %3141 = less(%3129, 0);
  %3142 = add(%3129, %3140);
  %3143 = where(%3141, %3142, %3129);
  %3144 = take(%3138, %3143, axis=0);
  %3145 = expand_dims(%3144, axis=0);
  %3146 = expand_dims(%3137, axis=0);
  %3147 = expand_dims(%3145, axis=0);
  %3148 = vision.all_class_non_max_suppression(%3146, %3147, 2000, 0.5f, 0f);
  %3149 = %3148.0;
  %3150 = shape_of(%3149, dtype="int32");
  %3151 = cast_like(%3150, meta[relay.Constant][725]);
  %3152 = slice_like(%3151, meta[relay.Constant][725], axes=None);
  %3153 = add(meta[relay.Constant][725], %3152);
  %3154 = where(meta[relay.Constant][724], %3153, meta[relay.Constant][725]);
  %3155 = greater_equal(%3154, %3152);
  %3156 = where(%3155, %3152, %3154);
  %3157 = %3148.1;
  %3158 = dyn.strided_slice(%3149, %3156, %3157, meta[relay.Constant][726], begin=None, end=None, strides=None, axes=None);
  %3159 = take(%3158, meta[relay.Constant][727], axis=1);
  %3160 = squeeze(%3159, axis=[1]);
  %3161 = cast(%3160, dtype="int64");
  %3162 = shape_of(%3137, dtype="int64");
  %3163 = take(%3162, 0);
  %3164 = less(%3161, 0);
  %3165 = add(%3161, %3163);
  %3166 = where(%3164, %3165, %3161);
  %3167 = shape_of(%1687, dtype="int32");
  %3168 = cast_like(%3167, meta[relay.Constant][729]);
  %3169 = slice_like(%3168, meta[relay.Constant][729], axes=None);
  %3170 = add(meta[relay.Constant][729], %3169);
  %3171 = where(meta[relay.Constant][728], %3170, meta[relay.Constant][729]);
  %3172 = greater_equal(%3171, %3169);
  %3173 = shape_of(%1687, dtype="int64");
  %3174 = where(%3172, %3169, %3171);
  %3175 = scatter(%3173, meta[relay.Constant][730], meta[relay.Constant][731]);
  %3176 = shape_of(%1703, dtype="int32");
  %3177 = cast_like(%3176, meta[relay.Constant][734]);
  %3178 = slice_like(%3177, meta[relay.Constant][734], axes=None);
  %3179 = add(meta[relay.Constant][734], %3178);
  %3180 = where(meta[relay.Constant][733], %3179, meta[relay.Constant][734]);
  %3181 = greater_equal(%3180, %3178);
  %3182 = shape_of(%1703, dtype="int64");
  %3183 = where(%3181, %3178, %3180);
  %3184 = scatter(%3182, meta[relay.Constant][735], meta[relay.Constant][736]);
  %3185 = dyn.strided_slice(%1703, %3183, %3184, meta[relay.Constant][737], begin=None, end=None, strides=None, axes=None);
  %3186 = take(%3185, 24, axis=1);
  %3187 = cast(%3186, dtype="float32");
  %3188 = argwhere(%3187);
  %3189 = cast(%3188, dtype="int64");
  %3190 = transpose(%3189, axes=[1, 0]);
  %3191 = transpose(%3190, axes=[1, 0]);
  %3192 = squeeze(%3191, axis=[1]);
  %3193 = cast(%3192, dtype="int64");
  %3194 = cast(%3193, dtype="int64");
  %3195 = dyn.strided_slice(%1687, %3174, %3175, meta[relay.Constant][732], begin=None, end=None, strides=None, axes=None);
  %3196 = shape_of(%3195, dtype="int64");
  %3197 = take(%3196, 0);
  %3198 = less(%3194, 0);
  %3199 = add(%3194, %3197);
  %3200 = where(%3198, %3199, %3194);
  %3201 = take(%3195, %3200, axis=0);
  %3202 = take(%1701, 24, axis=1);
  %3203 = shape_of(%3202, dtype="int64");
  %3204 = take(%3203, 0);
  %3205 = less(%3193, 0);
  %3206 = add(%3193, %3204);
  %3207 = where(%3205, %3206, %3193);
  %3208 = take(%3202, %3207, axis=0);
  %3209 = expand_dims(%3208, axis=0);
  %3210 = expand_dims(%3201, axis=0);
  %3211 = expand_dims(%3209, axis=0);
  %3212 = vision.all_class_non_max_suppression(%3210, %3211, 2000, 0.5f, 0f);
  %3213 = %3212.0;
  %3214 = shape_of(%3213, dtype="int32");
  %3215 = cast_like(%3214, meta[relay.Constant][739]);
  %3216 = slice_like(%3215, meta[relay.Constant][739], axes=None);
  %3217 = add(meta[relay.Constant][739], %3216);
  %3218 = where(meta[relay.Constant][738], %3217, meta[relay.Constant][739]);
  %3219 = greater_equal(%3218, %3216);
  %3220 = where(%3219, %3216, %3218);
  %3221 = %3212.1;
  %3222 = dyn.strided_slice(%3213, %3220, %3221, meta[relay.Constant][740], begin=None, end=None, strides=None, axes=None);
  %3223 = take(%3222, meta[relay.Constant][741], axis=1);
  %3224 = squeeze(%3223, axis=[1]);
  %3225 = cast(%3224, dtype="int64");
  %3226 = shape_of(%3201, dtype="int64");
  %3227 = take(%3226, 0);
  %3228 = less(%3225, 0);
  %3229 = add(%3225, %3227);
  %3230 = where(%3228, %3229, %3225);
  %3231 = shape_of(%1687, dtype="int32");
  %3232 = cast_like(%3231, meta[relay.Constant][743]);
  %3233 = slice_like(%3232, meta[relay.Constant][743], axes=None);
  %3234 = add(meta[relay.Constant][743], %3233);
  %3235 = where(meta[relay.Constant][742], %3234, meta[relay.Constant][743]);
  %3236 = greater_equal(%3235, %3233);
  %3237 = shape_of(%1687, dtype="int64");
  %3238 = where(%3236, %3233, %3235);
  %3239 = scatter(%3237, meta[relay.Constant][744], meta[relay.Constant][745]);
  %3240 = shape_of(%1703, dtype="int32");
  %3241 = cast_like(%3240, meta[relay.Constant][748]);
  %3242 = slice_like(%3241, meta[relay.Constant][748], axes=None);
  %3243 = add(meta[relay.Constant][748], %3242);
  %3244 = where(meta[relay.Constant][747], %3243, meta[relay.Constant][748]);
  %3245 = greater_equal(%3244, %3242);
  %3246 = shape_of(%1703, dtype="int64");
  %3247 = where(%3245, %3242, %3244);
  %3248 = scatter(%3246, meta[relay.Constant][749], meta[relay.Constant][750]);
  %3249 = dyn.strided_slice(%1703, %3247, %3248, meta[relay.Constant][751], begin=None, end=None, strides=None, axes=None);
  %3250 = take(%3249, 25, axis=1);
  %3251 = cast(%3250, dtype="float32");
  %3252 = argwhere(%3251);
  %3253 = cast(%3252, dtype="int64");
  %3254 = transpose(%3253, axes=[1, 0]);
  %3255 = transpose(%3254, axes=[1, 0]);
  %3256 = squeeze(%3255, axis=[1]);
  %3257 = cast(%3256, dtype="int64");
  %3258 = cast(%3257, dtype="int64");
  %3259 = dyn.strided_slice(%1687, %3238, %3239, meta[relay.Constant][746], begin=None, end=None, strides=None, axes=None);
  %3260 = shape_of(%3259, dtype="int64");
  %3261 = take(%3260, 0);
  %3262 = less(%3258, 0);
  %3263 = add(%3258, %3261);
  %3264 = where(%3262, %3263, %3258);
  %3265 = take(%3259, %3264, axis=0);
  %3266 = take(%1701, 25, axis=1);
  %3267 = shape_of(%3266, dtype="int64");
  %3268 = take(%3267, 0);
  %3269 = less(%3257, 0);
  %3270 = add(%3257, %3268);
  %3271 = where(%3269, %3270, %3257);
  %3272 = take(%3266, %3271, axis=0);
  %3273 = expand_dims(%3272, axis=0);
  %3274 = expand_dims(%3265, axis=0);
  %3275 = expand_dims(%3273, axis=0);
  %3276 = vision.all_class_non_max_suppression(%3274, %3275, 2000, 0.5f, 0f);
  %3277 = %3276.0;
  %3278 = shape_of(%3277, dtype="int32");
  %3279 = cast_like(%3278, meta[relay.Constant][753]);
  %3280 = slice_like(%3279, meta[relay.Constant][753], axes=None);
  %3281 = add(meta[relay.Constant][753], %3280);
  %3282 = where(meta[relay.Constant][752], %3281, meta[relay.Constant][753]);
  %3283 = greater_equal(%3282, %3280);
  %3284 = where(%3283, %3280, %3282);
  %3285 = %3276.1;
  %3286 = dyn.strided_slice(%3277, %3284, %3285, meta[relay.Constant][754], begin=None, end=None, strides=None, axes=None);
  %3287 = take(%3286, meta[relay.Constant][755], axis=1);
  %3288 = squeeze(%3287, axis=[1]);
  %3289 = cast(%3288, dtype="int64");
  %3290 = shape_of(%3265, dtype="int64");
  %3291 = take(%3290, 0);
  %3292 = less(%3289, 0);
  %3293 = add(%3289, %3291);
  %3294 = where(%3292, %3293, %3289);
  %3295 = shape_of(%1687, dtype="int32");
  %3296 = cast_like(%3295, meta[relay.Constant][757]);
  %3297 = slice_like(%3296, meta[relay.Constant][757], axes=None);
  %3298 = add(meta[relay.Constant][757], %3297);
  %3299 = where(meta[relay.Constant][756], %3298, meta[relay.Constant][757]);
  %3300 = greater_equal(%3299, %3297);
  %3301 = shape_of(%1687, dtype="int64");
  %3302 = where(%3300, %3297, %3299);
  %3303 = scatter(%3301, meta[relay.Constant][758], meta[relay.Constant][759]);
  %3304 = shape_of(%1703, dtype="int32");
  %3305 = cast_like(%3304, meta[relay.Constant][762]);
  %3306 = slice_like(%3305, meta[relay.Constant][762], axes=None);
  %3307 = add(meta[relay.Constant][762], %3306);
  %3308 = where(meta[relay.Constant][761], %3307, meta[relay.Constant][762]);
  %3309 = greater_equal(%3308, %3306);
  %3310 = shape_of(%1703, dtype="int64");
  %3311 = where(%3309, %3306, %3308);
  %3312 = scatter(%3310, meta[relay.Constant][763], meta[relay.Constant][764]);
  %3313 = dyn.strided_slice(%1703, %3311, %3312, meta[relay.Constant][765], begin=None, end=None, strides=None, axes=None);
  %3314 = take(%3313, 26, axis=1);
  %3315 = cast(%3314, dtype="float32");
  %3316 = argwhere(%3315);
  %3317 = cast(%3316, dtype="int64");
  %3318 = transpose(%3317, axes=[1, 0]);
  %3319 = transpose(%3318, axes=[1, 0]);
  %3320 = squeeze(%3319, axis=[1]);
  %3321 = cast(%3320, dtype="int64");
  %3322 = cast(%3321, dtype="int64");
  %3323 = dyn.strided_slice(%1687, %3302, %3303, meta[relay.Constant][760], begin=None, end=None, strides=None, axes=None);
  %3324 = shape_of(%3323, dtype="int64");
  %3325 = take(%3324, 0);
  %3326 = less(%3322, 0);
  %3327 = add(%3322, %3325);
  %3328 = where(%3326, %3327, %3322);
  %3329 = take(%3323, %3328, axis=0);
  %3330 = take(%1701, 26, axis=1);
  %3331 = shape_of(%3330, dtype="int64");
  %3332 = take(%3331, 0);
  %3333 = less(%3321, 0);
  %3334 = add(%3321, %3332);
  %3335 = where(%3333, %3334, %3321);
  %3336 = take(%3330, %3335, axis=0);
  %3337 = expand_dims(%3336, axis=0);
  %3338 = expand_dims(%3329, axis=0);
  %3339 = expand_dims(%3337, axis=0);
  %3340 = vision.all_class_non_max_suppression(%3338, %3339, 2000, 0.5f, 0f);
  %3341 = %3340.0;
  %3342 = shape_of(%3341, dtype="int32");
  %3343 = cast_like(%3342, meta[relay.Constant][767]);
  %3344 = slice_like(%3343, meta[relay.Constant][767], axes=None);
  %3345 = add(meta[relay.Constant][767], %3344);
  %3346 = where(meta[relay.Constant][766], %3345, meta[relay.Constant][767]);
  %3347 = greater_equal(%3346, %3344);
  %3348 = where(%3347, %3344, %3346);
  %3349 = %3340.1;
  %3350 = dyn.strided_slice(%3341, %3348, %3349, meta[relay.Constant][768], begin=None, end=None, strides=None, axes=None);
  %3351 = take(%3350, meta[relay.Constant][769], axis=1);
  %3352 = squeeze(%3351, axis=[1]);
  %3353 = cast(%3352, dtype="int64");
  %3354 = shape_of(%3329, dtype="int64");
  %3355 = take(%3354, 0);
  %3356 = less(%3353, 0);
  %3357 = add(%3353, %3355);
  %3358 = where(%3356, %3357, %3353);
  %3359 = shape_of(%1687, dtype="int32");
  %3360 = cast_like(%3359, meta[relay.Constant][771]);
  %3361 = slice_like(%3360, meta[relay.Constant][771], axes=None);
  %3362 = add(meta[relay.Constant][771], %3361);
  %3363 = where(meta[relay.Constant][770], %3362, meta[relay.Constant][771]);
  %3364 = greater_equal(%3363, %3361);
  %3365 = shape_of(%1687, dtype="int64");
  %3366 = where(%3364, %3361, %3363);
  %3367 = scatter(%3365, meta[relay.Constant][772], meta[relay.Constant][773]);
  %3368 = shape_of(%1703, dtype="int32");
  %3369 = cast_like(%3368, meta[relay.Constant][776]);
  %3370 = slice_like(%3369, meta[relay.Constant][776], axes=None);
  %3371 = add(meta[relay.Constant][776], %3370);
  %3372 = where(meta[relay.Constant][775], %3371, meta[relay.Constant][776]);
  %3373 = greater_equal(%3372, %3370);
  %3374 = shape_of(%1703, dtype="int64");
  %3375 = where(%3373, %3370, %3372);
  %3376 = scatter(%3374, meta[relay.Constant][777], meta[relay.Constant][778]);
  %3377 = dyn.strided_slice(%1703, %3375, %3376, meta[relay.Constant][779], begin=None, end=None, strides=None, axes=None);
  %3378 = take(%3377, 27, axis=1);
  %3379 = cast(%3378, dtype="float32");
  %3380 = argwhere(%3379);
  %3381 = cast(%3380, dtype="int64");
  %3382 = transpose(%3381, axes=[1, 0]);
  %3383 = transpose(%3382, axes=[1, 0]);
  %3384 = squeeze(%3383, axis=[1]);
  %3385 = cast(%3384, dtype="int64");
  %3386 = cast(%3385, dtype="int64");
  %3387 = dyn.strided_slice(%1687, %3366, %3367, meta[relay.Constant][774], begin=None, end=None, strides=None, axes=None);
  %3388 = shape_of(%3387, dtype="int64");
  %3389 = take(%3388, 0);
  %3390 = less(%3386, 0);
  %3391 = add(%3386, %3389);
  %3392 = where(%3390, %3391, %3386);
  %3393 = take(%3387, %3392, axis=0);
  %3394 = take(%1701, 27, axis=1);
  %3395 = shape_of(%3394, dtype="int64");
  %3396 = take(%3395, 0);
  %3397 = less(%3385, 0);
  %3398 = add(%3385, %3396);
  %3399 = where(%3397, %3398, %3385);
  %3400 = take(%3394, %3399, axis=0);
  %3401 = expand_dims(%3400, axis=0);
  %3402 = expand_dims(%3393, axis=0);
  %3403 = expand_dims(%3401, axis=0);
  %3404 = vision.all_class_non_max_suppression(%3402, %3403, 2000, 0.5f, 0f);
  %3405 = %3404.0;
  %3406 = shape_of(%3405, dtype="int32");
  %3407 = cast_like(%3406, meta[relay.Constant][781]);
  %3408 = slice_like(%3407, meta[relay.Constant][781], axes=None);
  %3409 = add(meta[relay.Constant][781], %3408);
  %3410 = where(meta[relay.Constant][780], %3409, meta[relay.Constant][781]);
  %3411 = greater_equal(%3410, %3408);
  %3412 = where(%3411, %3408, %3410);
  %3413 = %3404.1;
  %3414 = dyn.strided_slice(%3405, %3412, %3413, meta[relay.Constant][782], begin=None, end=None, strides=None, axes=None);
  %3415 = take(%3414, meta[relay.Constant][783], axis=1);
  %3416 = squeeze(%3415, axis=[1]);
  %3417 = cast(%3416, dtype="int64");
  %3418 = shape_of(%3393, dtype="int64");
  %3419 = take(%3418, 0);
  %3420 = less(%3417, 0);
  %3421 = add(%3417, %3419);
  %3422 = where(%3420, %3421, %3417);
  %3423 = shape_of(%1687, dtype="int32");
  %3424 = cast_like(%3423, meta[relay.Constant][785]);
  %3425 = slice_like(%3424, meta[relay.Constant][785], axes=None);
  %3426 = add(meta[relay.Constant][785], %3425);
  %3427 = where(meta[relay.Constant][784], %3426, meta[relay.Constant][785]);
  %3428 = greater_equal(%3427, %3425);
  %3429 = shape_of(%1687, dtype="int64");
  %3430 = where(%3428, %3425, %3427);
  %3431 = scatter(%3429, meta[relay.Constant][786], meta[relay.Constant][787]);
  %3432 = shape_of(%1703, dtype="int32");
  %3433 = cast_like(%3432, meta[relay.Constant][790]);
  %3434 = slice_like(%3433, meta[relay.Constant][790], axes=None);
  %3435 = add(meta[relay.Constant][790], %3434);
  %3436 = where(meta[relay.Constant][789], %3435, meta[relay.Constant][790]);
  %3437 = greater_equal(%3436, %3434);
  %3438 = shape_of(%1703, dtype="int64");
  %3439 = where(%3437, %3434, %3436);
  %3440 = scatter(%3438, meta[relay.Constant][791], meta[relay.Constant][792]);
  %3441 = dyn.strided_slice(%1703, %3439, %3440, meta[relay.Constant][793], begin=None, end=None, strides=None, axes=None);
  %3442 = take(%3441, 28, axis=1);
  %3443 = cast(%3442, dtype="float32");
  %3444 = argwhere(%3443);
  %3445 = cast(%3444, dtype="int64");
  %3446 = transpose(%3445, axes=[1, 0]);
  %3447 = transpose(%3446, axes=[1, 0]);
  %3448 = squeeze(%3447, axis=[1]);
  %3449 = cast(%3448, dtype="int64");
  %3450 = cast(%3449, dtype="int64");
  %3451 = dyn.strided_slice(%1687, %3430, %3431, meta[relay.Constant][788], begin=None, end=None, strides=None, axes=None);
  %3452 = shape_of(%3451, dtype="int64");
  %3453 = take(%3452, 0);
  %3454 = less(%3450, 0);
  %3455 = add(%3450, %3453);
  %3456 = where(%3454, %3455, %3450);
  %3457 = take(%3451, %3456, axis=0);
  %3458 = take(%1701, 28, axis=1);
  %3459 = shape_of(%3458, dtype="int64");
  %3460 = take(%3459, 0);
  %3461 = less(%3449, 0);
  %3462 = add(%3449, %3460);
  %3463 = where(%3461, %3462, %3449);
  %3464 = take(%3458, %3463, axis=0);
  %3465 = expand_dims(%3464, axis=0);
  %3466 = expand_dims(%3457, axis=0);
  %3467 = expand_dims(%3465, axis=0);
  %3468 = vision.all_class_non_max_suppression(%3466, %3467, 2000, 0.5f, 0f);
  %3469 = %3468.0;
  %3470 = shape_of(%3469, dtype="int32");
  %3471 = cast_like(%3470, meta[relay.Constant][795]);
  %3472 = slice_like(%3471, meta[relay.Constant][795], axes=None);
  %3473 = add(meta[relay.Constant][795], %3472);
  %3474 = where(meta[relay.Constant][794], %3473, meta[relay.Constant][795]);
  %3475 = greater_equal(%3474, %3472);
  %3476 = where(%3475, %3472, %3474);
  %3477 = %3468.1;
  %3478 = dyn.strided_slice(%3469, %3476, %3477, meta[relay.Constant][796], begin=None, end=None, strides=None, axes=None);
  %3479 = take(%3478, meta[relay.Constant][797], axis=1);
  %3480 = squeeze(%3479, axis=[1]);
  %3481 = cast(%3480, dtype="int64");
  %3482 = shape_of(%3457, dtype="int64");
  %3483 = take(%3482, 0);
  %3484 = less(%3481, 0);
  %3485 = add(%3481, %3483);
  %3486 = where(%3484, %3485, %3481);
  %3487 = shape_of(%1687, dtype="int32");
  %3488 = cast_like(%3487, meta[relay.Constant][799]);
  %3489 = slice_like(%3488, meta[relay.Constant][799], axes=None);
  %3490 = add(meta[relay.Constant][799], %3489);
  %3491 = where(meta[relay.Constant][798], %3490, meta[relay.Constant][799]);
  %3492 = greater_equal(%3491, %3489);
  %3493 = shape_of(%1687, dtype="int64");
  %3494 = where(%3492, %3489, %3491);
  %3495 = scatter(%3493, meta[relay.Constant][800], meta[relay.Constant][801]);
  %3496 = shape_of(%1703, dtype="int32");
  %3497 = cast_like(%3496, meta[relay.Constant][804]);
  %3498 = slice_like(%3497, meta[relay.Constant][804], axes=None);
  %3499 = add(meta[relay.Constant][804], %3498);
  %3500 = where(meta[relay.Constant][803], %3499, meta[relay.Constant][804]);
  %3501 = greater_equal(%3500, %3498);
  %3502 = shape_of(%1703, dtype="int64");
  %3503 = where(%3501, %3498, %3500);
  %3504 = scatter(%3502, meta[relay.Constant][805], meta[relay.Constant][806]);
  %3505 = dyn.strided_slice(%1703, %3503, %3504, meta[relay.Constant][807], begin=None, end=None, strides=None, axes=None);
  %3506 = take(%3505, 29, axis=1);
  %3507 = cast(%3506, dtype="float32");
  %3508 = argwhere(%3507);
  %3509 = cast(%3508, dtype="int64");
  %3510 = transpose(%3509, axes=[1, 0]);
  %3511 = transpose(%3510, axes=[1, 0]);
  %3512 = squeeze(%3511, axis=[1]);
  %3513 = cast(%3512, dtype="int64");
  %3514 = cast(%3513, dtype="int64");
  %3515 = dyn.strided_slice(%1687, %3494, %3495, meta[relay.Constant][802], begin=None, end=None, strides=None, axes=None);
  %3516 = shape_of(%3515, dtype="int64");
  %3517 = take(%3516, 0);
  %3518 = less(%3514, 0);
  %3519 = add(%3514, %3517);
  %3520 = where(%3518, %3519, %3514);
  %3521 = take(%3515, %3520, axis=0);
  %3522 = take(%1701, 29, axis=1);
  %3523 = shape_of(%3522, dtype="int64");
  %3524 = take(%3523, 0);
  %3525 = less(%3513, 0);
  %3526 = add(%3513, %3524);
  %3527 = where(%3525, %3526, %3513);
  %3528 = take(%3522, %3527, axis=0);
  %3529 = expand_dims(%3528, axis=0);
  %3530 = expand_dims(%3521, axis=0);
  %3531 = expand_dims(%3529, axis=0);
  %3532 = vision.all_class_non_max_suppression(%3530, %3531, 2000, 0.5f, 0f);
  %3533 = %3532.0;
  %3534 = shape_of(%3533, dtype="int32");
  %3535 = cast_like(%3534, meta[relay.Constant][809]);
  %3536 = slice_like(%3535, meta[relay.Constant][809], axes=None);
  %3537 = add(meta[relay.Constant][809], %3536);
  %3538 = where(meta[relay.Constant][808], %3537, meta[relay.Constant][809]);
  %3539 = greater_equal(%3538, %3536);
  %3540 = where(%3539, %3536, %3538);
  %3541 = %3532.1;
  %3542 = dyn.strided_slice(%3533, %3540, %3541, meta[relay.Constant][810], begin=None, end=None, strides=None, axes=None);
  %3543 = take(%3542, meta[relay.Constant][811], axis=1);
  %3544 = squeeze(%3543, axis=[1]);
  %3545 = cast(%3544, dtype="int64");
  %3546 = shape_of(%3521, dtype="int64");
  %3547 = take(%3546, 0);
  %3548 = less(%3545, 0);
  %3549 = add(%3545, %3547);
  %3550 = where(%3548, %3549, %3545);
  %3551 = shape_of(%1687, dtype="int32");
  %3552 = cast_like(%3551, meta[relay.Constant][813]);
  %3553 = slice_like(%3552, meta[relay.Constant][813], axes=None);
  %3554 = add(meta[relay.Constant][813], %3553);
  %3555 = where(meta[relay.Constant][812], %3554, meta[relay.Constant][813]);
  %3556 = greater_equal(%3555, %3553);
  %3557 = shape_of(%1687, dtype="int64");
  %3558 = where(%3556, %3553, %3555);
  %3559 = scatter(%3557, meta[relay.Constant][814], meta[relay.Constant][815]);
  %3560 = shape_of(%1703, dtype="int32");
  %3561 = cast_like(%3560, meta[relay.Constant][818]);
  %3562 = slice_like(%3561, meta[relay.Constant][818], axes=None);
  %3563 = add(meta[relay.Constant][818], %3562);
  %3564 = where(meta[relay.Constant][817], %3563, meta[relay.Constant][818]);
  %3565 = greater_equal(%3564, %3562);
  %3566 = shape_of(%1703, dtype="int64");
  %3567 = where(%3565, %3562, %3564);
  %3568 = scatter(%3566, meta[relay.Constant][819], meta[relay.Constant][820]);
  %3569 = dyn.strided_slice(%1703, %3567, %3568, meta[relay.Constant][821], begin=None, end=None, strides=None, axes=None);
  %3570 = take(%3569, 30, axis=1);
  %3571 = cast(%3570, dtype="float32");
  %3572 = argwhere(%3571);
  %3573 = cast(%3572, dtype="int64");
  %3574 = transpose(%3573, axes=[1, 0]);
  %3575 = transpose(%3574, axes=[1, 0]);
  %3576 = squeeze(%3575, axis=[1]);
  %3577 = cast(%3576, dtype="int64");
  %3578 = cast(%3577, dtype="int64");
  %3579 = dyn.strided_slice(%1687, %3558, %3559, meta[relay.Constant][816], begin=None, end=None, strides=None, axes=None);
  %3580 = shape_of(%3579, dtype="int64");
  %3581 = take(%3580, 0);
  %3582 = less(%3578, 0);
  %3583 = add(%3578, %3581);
  %3584 = where(%3582, %3583, %3578);
  %3585 = take(%3579, %3584, axis=0);
  %3586 = take(%1701, 30, axis=1);
  %3587 = shape_of(%3586, dtype="int64");
  %3588 = take(%3587, 0);
  %3589 = less(%3577, 0);
  %3590 = add(%3577, %3588);
  %3591 = where(%3589, %3590, %3577);
  %3592 = take(%3586, %3591, axis=0);
  %3593 = expand_dims(%3592, axis=0);
  %3594 = expand_dims(%3585, axis=0);
  %3595 = expand_dims(%3593, axis=0);
  %3596 = vision.all_class_non_max_suppression(%3594, %3595, 2000, 0.5f, 0f);
  %3597 = %3596.0;
  %3598 = shape_of(%3597, dtype="int32");
  %3599 = cast_like(%3598, meta[relay.Constant][823]);
  %3600 = slice_like(%3599, meta[relay.Constant][823], axes=None);
  %3601 = add(meta[relay.Constant][823], %3600);
  %3602 = where(meta[relay.Constant][822], %3601, meta[relay.Constant][823]);
  %3603 = greater_equal(%3602, %3600);
  %3604 = where(%3603, %3600, %3602);
  %3605 = %3596.1;
  %3606 = dyn.strided_slice(%3597, %3604, %3605, meta[relay.Constant][824], begin=None, end=None, strides=None, axes=None);
  %3607 = take(%3606, meta[relay.Constant][825], axis=1);
  %3608 = squeeze(%3607, axis=[1]);
  %3609 = cast(%3608, dtype="int64");
  %3610 = shape_of(%3585, dtype="int64");
  %3611 = take(%3610, 0);
  %3612 = less(%3609, 0);
  %3613 = add(%3609, %3611);
  %3614 = where(%3612, %3613, %3609);
  %3615 = shape_of(%1687, dtype="int32");
  %3616 = cast_like(%3615, meta[relay.Constant][827]);
  %3617 = slice_like(%3616, meta[relay.Constant][827], axes=None);
  %3618 = add(meta[relay.Constant][827], %3617);
  %3619 = where(meta[relay.Constant][826], %3618, meta[relay.Constant][827]);
  %3620 = greater_equal(%3619, %3617);
  %3621 = shape_of(%1687, dtype="int64");
  %3622 = where(%3620, %3617, %3619);
  %3623 = scatter(%3621, meta[relay.Constant][828], meta[relay.Constant][829]);
  %3624 = shape_of(%1703, dtype="int32");
  %3625 = cast_like(%3624, meta[relay.Constant][832]);
  %3626 = slice_like(%3625, meta[relay.Constant][832], axes=None);
  %3627 = add(meta[relay.Constant][832], %3626);
  %3628 = where(meta[relay.Constant][831], %3627, meta[relay.Constant][832]);
  %3629 = greater_equal(%3628, %3626);
  %3630 = shape_of(%1703, dtype="int64");
  %3631 = where(%3629, %3626, %3628);
  %3632 = scatter(%3630, meta[relay.Constant][833], meta[relay.Constant][834]);
  %3633 = dyn.strided_slice(%1703, %3631, %3632, meta[relay.Constant][835], begin=None, end=None, strides=None, axes=None);
  %3634 = take(%3633, 31, axis=1);
  %3635 = cast(%3634, dtype="float32");
  %3636 = argwhere(%3635);
  %3637 = cast(%3636, dtype="int64");
  %3638 = transpose(%3637, axes=[1, 0]);
  %3639 = transpose(%3638, axes=[1, 0]);
  %3640 = squeeze(%3639, axis=[1]);
  %3641 = cast(%3640, dtype="int64");
  %3642 = cast(%3641, dtype="int64");
  %3643 = dyn.strided_slice(%1687, %3622, %3623, meta[relay.Constant][830], begin=None, end=None, strides=None, axes=None);
  %3644 = shape_of(%3643, dtype="int64");
  %3645 = take(%3644, 0);
  %3646 = less(%3642, 0);
  %3647 = add(%3642, %3645);
  %3648 = where(%3646, %3647, %3642);
  %3649 = take(%3643, %3648, axis=0);
  %3650 = take(%1701, 31, axis=1);
  %3651 = shape_of(%3650, dtype="int64");
  %3652 = take(%3651, 0);
  %3653 = less(%3641, 0);
  %3654 = add(%3641, %3652);
  %3655 = where(%3653, %3654, %3641);
  %3656 = take(%3650, %3655, axis=0);
  %3657 = expand_dims(%3656, axis=0);
  %3658 = expand_dims(%3649, axis=0);
  %3659 = expand_dims(%3657, axis=0);
  %3660 = vision.all_class_non_max_suppression(%3658, %3659, 2000, 0.5f, 0f);
  %3661 = %3660.0;
  %3662 = shape_of(%3661, dtype="int32");
  %3663 = cast_like(%3662, meta[relay.Constant][837]);
  %3664 = slice_like(%3663, meta[relay.Constant][837], axes=None);
  %3665 = add(meta[relay.Constant][837], %3664);
  %3666 = where(meta[relay.Constant][836], %3665, meta[relay.Constant][837]);
  %3667 = greater_equal(%3666, %3664);
  %3668 = where(%3667, %3664, %3666);
  %3669 = %3660.1;
  %3670 = dyn.strided_slice(%3661, %3668, %3669, meta[relay.Constant][838], begin=None, end=None, strides=None, axes=None);
  %3671 = take(%3670, meta[relay.Constant][839], axis=1);
  %3672 = squeeze(%3671, axis=[1]);
  %3673 = cast(%3672, dtype="int64");
  %3674 = shape_of(%3649, dtype="int64");
  %3675 = take(%3674, 0);
  %3676 = less(%3673, 0);
  %3677 = add(%3673, %3675);
  %3678 = where(%3676, %3677, %3673);
  %3679 = shape_of(%1687, dtype="int32");
  %3680 = cast_like(%3679, meta[relay.Constant][841]);
  %3681 = slice_like(%3680, meta[relay.Constant][841], axes=None);
  %3682 = add(meta[relay.Constant][841], %3681);
  %3683 = where(meta[relay.Constant][840], %3682, meta[relay.Constant][841]);
  %3684 = greater_equal(%3683, %3681);
  %3685 = shape_of(%1687, dtype="int64");
  %3686 = where(%3684, %3681, %3683);
  %3687 = scatter(%3685, meta[relay.Constant][842], meta[relay.Constant][843]);
  %3688 = shape_of(%1703, dtype="int32");
  %3689 = cast_like(%3688, meta[relay.Constant][846]);
  %3690 = slice_like(%3689, meta[relay.Constant][846], axes=None);
  %3691 = add(meta[relay.Constant][846], %3690);
  %3692 = where(meta[relay.Constant][845], %3691, meta[relay.Constant][846]);
  %3693 = greater_equal(%3692, %3690);
  %3694 = shape_of(%1703, dtype="int64");
  %3695 = where(%3693, %3690, %3692);
  %3696 = scatter(%3694, meta[relay.Constant][847], meta[relay.Constant][848]);
  %3697 = dyn.strided_slice(%1703, %3695, %3696, meta[relay.Constant][849], begin=None, end=None, strides=None, axes=None);
  %3698 = take(%3697, 32, axis=1);
  %3699 = cast(%3698, dtype="float32");
  %3700 = argwhere(%3699);
  %3701 = cast(%3700, dtype="int64");
  %3702 = transpose(%3701, axes=[1, 0]);
  %3703 = transpose(%3702, axes=[1, 0]);
  %3704 = squeeze(%3703, axis=[1]);
  %3705 = cast(%3704, dtype="int64");
  %3706 = cast(%3705, dtype="int64");
  %3707 = dyn.strided_slice(%1687, %3686, %3687, meta[relay.Constant][844], begin=None, end=None, strides=None, axes=None);
  %3708 = shape_of(%3707, dtype="int64");
  %3709 = take(%3708, 0);
  %3710 = less(%3706, 0);
  %3711 = add(%3706, %3709);
  %3712 = where(%3710, %3711, %3706);
  %3713 = take(%3707, %3712, axis=0);
  %3714 = take(%1701, 32, axis=1);
  %3715 = shape_of(%3714, dtype="int64");
  %3716 = take(%3715, 0);
  %3717 = less(%3705, 0);
  %3718 = add(%3705, %3716);
  %3719 = where(%3717, %3718, %3705);
  %3720 = take(%3714, %3719, axis=0);
  %3721 = expand_dims(%3720, axis=0);
  %3722 = expand_dims(%3713, axis=0);
  %3723 = expand_dims(%3721, axis=0);
  %3724 = vision.all_class_non_max_suppression(%3722, %3723, 2000, 0.5f, 0f);
  %3725 = %3724.0;
  %3726 = shape_of(%3725, dtype="int32");
  %3727 = cast_like(%3726, meta[relay.Constant][851]);
  %3728 = slice_like(%3727, meta[relay.Constant][851], axes=None);
  %3729 = add(meta[relay.Constant][851], %3728);
  %3730 = where(meta[relay.Constant][850], %3729, meta[relay.Constant][851]);
  %3731 = greater_equal(%3730, %3728);
  %3732 = where(%3731, %3728, %3730);
  %3733 = %3724.1;
  %3734 = dyn.strided_slice(%3725, %3732, %3733, meta[relay.Constant][852], begin=None, end=None, strides=None, axes=None);
  %3735 = take(%3734, meta[relay.Constant][853], axis=1);
  %3736 = squeeze(%3735, axis=[1]);
  %3737 = cast(%3736, dtype="int64");
  %3738 = shape_of(%3713, dtype="int64");
  %3739 = take(%3738, 0);
  %3740 = less(%3737, 0);
  %3741 = add(%3737, %3739);
  %3742 = where(%3740, %3741, %3737);
  %3743 = shape_of(%1687, dtype="int32");
  %3744 = cast_like(%3743, meta[relay.Constant][855]);
  %3745 = slice_like(%3744, meta[relay.Constant][855], axes=None);
  %3746 = add(meta[relay.Constant][855], %3745);
  %3747 = where(meta[relay.Constant][854], %3746, meta[relay.Constant][855]);
  %3748 = greater_equal(%3747, %3745);
  %3749 = shape_of(%1687, dtype="int64");
  %3750 = where(%3748, %3745, %3747);
  %3751 = scatter(%3749, meta[relay.Constant][856], meta[relay.Constant][857]);
  %3752 = shape_of(%1703, dtype="int32");
  %3753 = cast_like(%3752, meta[relay.Constant][860]);
  %3754 = slice_like(%3753, meta[relay.Constant][860], axes=None);
  %3755 = add(meta[relay.Constant][860], %3754);
  %3756 = where(meta[relay.Constant][859], %3755, meta[relay.Constant][860]);
  %3757 = greater_equal(%3756, %3754);
  %3758 = shape_of(%1703, dtype="int64");
  %3759 = where(%3757, %3754, %3756);
  %3760 = scatter(%3758, meta[relay.Constant][861], meta[relay.Constant][862]);
  %3761 = dyn.strided_slice(%1703, %3759, %3760, meta[relay.Constant][863], begin=None, end=None, strides=None, axes=None);
  %3762 = take(%3761, 33, axis=1);
  %3763 = cast(%3762, dtype="float32");
  %3764 = argwhere(%3763);
  %3765 = cast(%3764, dtype="int64");
  %3766 = transpose(%3765, axes=[1, 0]);
  %3767 = transpose(%3766, axes=[1, 0]);
  %3768 = squeeze(%3767, axis=[1]);
  %3769 = cast(%3768, dtype="int64");
  %3770 = cast(%3769, dtype="int64");
  %3771 = dyn.strided_slice(%1687, %3750, %3751, meta[relay.Constant][858], begin=None, end=None, strides=None, axes=None);
  %3772 = shape_of(%3771, dtype="int64");
  %3773 = take(%3772, 0);
  %3774 = less(%3770, 0);
  %3775 = add(%3770, %3773);
  %3776 = where(%3774, %3775, %3770);
  %3777 = take(%3771, %3776, axis=0);
  %3778 = take(%1701, 33, axis=1);
  %3779 = shape_of(%3778, dtype="int64");
  %3780 = take(%3779, 0);
  %3781 = less(%3769, 0);
  %3782 = add(%3769, %3780);
  %3783 = where(%3781, %3782, %3769);
  %3784 = take(%3778, %3783, axis=0);
  %3785 = expand_dims(%3784, axis=0);
  %3786 = expand_dims(%3777, axis=0);
  %3787 = expand_dims(%3785, axis=0);
  %3788 = vision.all_class_non_max_suppression(%3786, %3787, 2000, 0.5f, 0f);
  %3789 = %3788.0;
  %3790 = shape_of(%3789, dtype="int32");
  %3791 = cast_like(%3790, meta[relay.Constant][865]);
  %3792 = slice_like(%3791, meta[relay.Constant][865], axes=None);
  %3793 = add(meta[relay.Constant][865], %3792);
  %3794 = where(meta[relay.Constant][864], %3793, meta[relay.Constant][865]);
  %3795 = greater_equal(%3794, %3792);
  %3796 = where(%3795, %3792, %3794);
  %3797 = %3788.1;
  %3798 = dyn.strided_slice(%3789, %3796, %3797, meta[relay.Constant][866], begin=None, end=None, strides=None, axes=None);
  %3799 = take(%3798, meta[relay.Constant][867], axis=1);
  %3800 = squeeze(%3799, axis=[1]);
  %3801 = cast(%3800, dtype="int64");
  %3802 = shape_of(%3777, dtype="int64");
  %3803 = take(%3802, 0);
  %3804 = less(%3801, 0);
  %3805 = add(%3801, %3803);
  %3806 = where(%3804, %3805, %3801);
  %3807 = shape_of(%1687, dtype="int32");
  %3808 = cast_like(%3807, meta[relay.Constant][869]);
  %3809 = slice_like(%3808, meta[relay.Constant][869], axes=None);
  %3810 = add(meta[relay.Constant][869], %3809);
  %3811 = where(meta[relay.Constant][868], %3810, meta[relay.Constant][869]);
  %3812 = greater_equal(%3811, %3809);
  %3813 = shape_of(%1687, dtype="int64");
  %3814 = where(%3812, %3809, %3811);
  %3815 = scatter(%3813, meta[relay.Constant][870], meta[relay.Constant][871]);
  %3816 = shape_of(%1703, dtype="int32");
  %3817 = cast_like(%3816, meta[relay.Constant][874]);
  %3818 = slice_like(%3817, meta[relay.Constant][874], axes=None);
  %3819 = add(meta[relay.Constant][874], %3818);
  %3820 = where(meta[relay.Constant][873], %3819, meta[relay.Constant][874]);
  %3821 = greater_equal(%3820, %3818);
  %3822 = shape_of(%1703, dtype="int64");
  %3823 = where(%3821, %3818, %3820);
  %3824 = scatter(%3822, meta[relay.Constant][875], meta[relay.Constant][876]);
  %3825 = dyn.strided_slice(%1703, %3823, %3824, meta[relay.Constant][877], begin=None, end=None, strides=None, axes=None);
  %3826 = take(%3825, 34, axis=1);
  %3827 = cast(%3826, dtype="float32");
  %3828 = argwhere(%3827);
  %3829 = cast(%3828, dtype="int64");
  %3830 = transpose(%3829, axes=[1, 0]);
  %3831 = transpose(%3830, axes=[1, 0]);
  %3832 = squeeze(%3831, axis=[1]);
  %3833 = cast(%3832, dtype="int64");
  %3834 = cast(%3833, dtype="int64");
  %3835 = dyn.strided_slice(%1687, %3814, %3815, meta[relay.Constant][872], begin=None, end=None, strides=None, axes=None);
  %3836 = shape_of(%3835, dtype="int64");
  %3837 = take(%3836, 0);
  %3838 = less(%3834, 0);
  %3839 = add(%3834, %3837);
  %3840 = where(%3838, %3839, %3834);
  %3841 = take(%3835, %3840, axis=0);
  %3842 = take(%1701, 34, axis=1);
  %3843 = shape_of(%3842, dtype="int64");
  %3844 = take(%3843, 0);
  %3845 = less(%3833, 0);
  %3846 = add(%3833, %3844);
  %3847 = where(%3845, %3846, %3833);
  %3848 = take(%3842, %3847, axis=0);
  %3849 = expand_dims(%3848, axis=0);
  %3850 = expand_dims(%3841, axis=0);
  %3851 = expand_dims(%3849, axis=0);
  %3852 = vision.all_class_non_max_suppression(%3850, %3851, 2000, 0.5f, 0f);
  %3853 = %3852.0;
  %3854 = shape_of(%3853, dtype="int32");
  %3855 = cast_like(%3854, meta[relay.Constant][879]);
  %3856 = slice_like(%3855, meta[relay.Constant][879], axes=None);
  %3857 = add(meta[relay.Constant][879], %3856);
  %3858 = where(meta[relay.Constant][878], %3857, meta[relay.Constant][879]);
  %3859 = greater_equal(%3858, %3856);
  %3860 = where(%3859, %3856, %3858);
  %3861 = %3852.1;
  %3862 = dyn.strided_slice(%3853, %3860, %3861, meta[relay.Constant][880], begin=None, end=None, strides=None, axes=None);
  %3863 = take(%3862, meta[relay.Constant][881], axis=1);
  %3864 = squeeze(%3863, axis=[1]);
  %3865 = cast(%3864, dtype="int64");
  %3866 = shape_of(%3841, dtype="int64");
  %3867 = take(%3866, 0);
  %3868 = less(%3865, 0);
  %3869 = add(%3865, %3867);
  %3870 = where(%3868, %3869, %3865);
  %3871 = shape_of(%1687, dtype="int32");
  %3872 = cast_like(%3871, meta[relay.Constant][883]);
  %3873 = slice_like(%3872, meta[relay.Constant][883], axes=None);
  %3874 = add(meta[relay.Constant][883], %3873);
  %3875 = where(meta[relay.Constant][882], %3874, meta[relay.Constant][883]);
  %3876 = greater_equal(%3875, %3873);
  %3877 = shape_of(%1687, dtype="int64");
  %3878 = where(%3876, %3873, %3875);
  %3879 = scatter(%3877, meta[relay.Constant][884], meta[relay.Constant][885]);
  %3880 = shape_of(%1703, dtype="int32");
  %3881 = cast_like(%3880, meta[relay.Constant][888]);
  %3882 = slice_like(%3881, meta[relay.Constant][888], axes=None);
  %3883 = add(meta[relay.Constant][888], %3882);
  %3884 = where(meta[relay.Constant][887], %3883, meta[relay.Constant][888]);
  %3885 = greater_equal(%3884, %3882);
  %3886 = shape_of(%1703, dtype="int64");
  %3887 = where(%3885, %3882, %3884);
  %3888 = scatter(%3886, meta[relay.Constant][889], meta[relay.Constant][890]);
  %3889 = dyn.strided_slice(%1703, %3887, %3888, meta[relay.Constant][891], begin=None, end=None, strides=None, axes=None);
  %3890 = take(%3889, 35, axis=1);
  %3891 = cast(%3890, dtype="float32");
  %3892 = argwhere(%3891);
  %3893 = cast(%3892, dtype="int64");
  %3894 = transpose(%3893, axes=[1, 0]);
  %3895 = transpose(%3894, axes=[1, 0]);
  %3896 = squeeze(%3895, axis=[1]);
  %3897 = cast(%3896, dtype="int64");
  %3898 = cast(%3897, dtype="int64");
  %3899 = dyn.strided_slice(%1687, %3878, %3879, meta[relay.Constant][886], begin=None, end=None, strides=None, axes=None);
  %3900 = shape_of(%3899, dtype="int64");
  %3901 = take(%3900, 0);
  %3902 = less(%3898, 0);
  %3903 = add(%3898, %3901);
  %3904 = where(%3902, %3903, %3898);
  %3905 = take(%3899, %3904, axis=0);
  %3906 = take(%1701, 35, axis=1);
  %3907 = shape_of(%3906, dtype="int64");
  %3908 = take(%3907, 0);
  %3909 = less(%3897, 0);
  %3910 = add(%3897, %3908);
  %3911 = where(%3909, %3910, %3897);
  %3912 = take(%3906, %3911, axis=0);
  %3913 = expand_dims(%3912, axis=0);
  %3914 = expand_dims(%3905, axis=0);
  %3915 = expand_dims(%3913, axis=0);
  %3916 = vision.all_class_non_max_suppression(%3914, %3915, 2000, 0.5f, 0f);
  %3917 = %3916.0;
  %3918 = shape_of(%3917, dtype="int32");
  %3919 = cast_like(%3918, meta[relay.Constant][893]);
  %3920 = slice_like(%3919, meta[relay.Constant][893], axes=None);
  %3921 = add(meta[relay.Constant][893], %3920);
  %3922 = where(meta[relay.Constant][892], %3921, meta[relay.Constant][893]);
  %3923 = greater_equal(%3922, %3920);
  %3924 = where(%3923, %3920, %3922);
  %3925 = %3916.1;
  %3926 = dyn.strided_slice(%3917, %3924, %3925, meta[relay.Constant][894], begin=None, end=None, strides=None, axes=None);
  %3927 = take(%3926, meta[relay.Constant][895], axis=1);
  %3928 = squeeze(%3927, axis=[1]);
  %3929 = cast(%3928, dtype="int64");
  %3930 = shape_of(%3905, dtype="int64");
  %3931 = take(%3930, 0);
  %3932 = less(%3929, 0);
  %3933 = add(%3929, %3931);
  %3934 = where(%3932, %3933, %3929);
  %3935 = shape_of(%1687, dtype="int32");
  %3936 = cast_like(%3935, meta[relay.Constant][897]);
  %3937 = slice_like(%3936, meta[relay.Constant][897], axes=None);
  %3938 = add(meta[relay.Constant][897], %3937);
  %3939 = where(meta[relay.Constant][896], %3938, meta[relay.Constant][897]);
  %3940 = greater_equal(%3939, %3937);
  %3941 = shape_of(%1687, dtype="int64");
  %3942 = where(%3940, %3937, %3939);
  %3943 = scatter(%3941, meta[relay.Constant][898], meta[relay.Constant][899]);
  %3944 = shape_of(%1703, dtype="int32");
  %3945 = cast_like(%3944, meta[relay.Constant][902]);
  %3946 = slice_like(%3945, meta[relay.Constant][902], axes=None);
  %3947 = add(meta[relay.Constant][902], %3946);
  %3948 = where(meta[relay.Constant][901], %3947, meta[relay.Constant][902]);
  %3949 = greater_equal(%3948, %3946);
  %3950 = shape_of(%1703, dtype="int64");
  %3951 = where(%3949, %3946, %3948);
  %3952 = scatter(%3950, meta[relay.Constant][903], meta[relay.Constant][904]);
  %3953 = dyn.strided_slice(%1703, %3951, %3952, meta[relay.Constant][905], begin=None, end=None, strides=None, axes=None);
  %3954 = take(%3953, 36, axis=1);
  %3955 = cast(%3954, dtype="float32");
  %3956 = argwhere(%3955);
  %3957 = cast(%3956, dtype="int64");
  %3958 = transpose(%3957, axes=[1, 0]);
  %3959 = transpose(%3958, axes=[1, 0]);
  %3960 = squeeze(%3959, axis=[1]);
  %3961 = cast(%3960, dtype="int64");
  %3962 = cast(%3961, dtype="int64");
  %3963 = dyn.strided_slice(%1687, %3942, %3943, meta[relay.Constant][900], begin=None, end=None, strides=None, axes=None);
  %3964 = shape_of(%3963, dtype="int64");
  %3965 = take(%3964, 0);
  %3966 = less(%3962, 0);
  %3967 = add(%3962, %3965);
  %3968 = where(%3966, %3967, %3962);
  %3969 = take(%3963, %3968, axis=0);
  %3970 = take(%1701, 36, axis=1);
  %3971 = shape_of(%3970, dtype="int64");
  %3972 = take(%3971, 0);
  %3973 = less(%3961, 0);
  %3974 = add(%3961, %3972);
  %3975 = where(%3973, %3974, %3961);
  %3976 = take(%3970, %3975, axis=0);
  %3977 = expand_dims(%3976, axis=0);
  %3978 = expand_dims(%3969, axis=0);
  %3979 = expand_dims(%3977, axis=0);
  %3980 = vision.all_class_non_max_suppression(%3978, %3979, 2000, 0.5f, 0f);
  %3981 = %3980.0;
  %3982 = shape_of(%3981, dtype="int32");
  %3983 = cast_like(%3982, meta[relay.Constant][907]);
  %3984 = slice_like(%3983, meta[relay.Constant][907], axes=None);
  %3985 = add(meta[relay.Constant][907], %3984);
  %3986 = where(meta[relay.Constant][906], %3985, meta[relay.Constant][907]);
  %3987 = greater_equal(%3986, %3984);
  %3988 = where(%3987, %3984, %3986);
  %3989 = %3980.1;
  %3990 = dyn.strided_slice(%3981, %3988, %3989, meta[relay.Constant][908], begin=None, end=None, strides=None, axes=None);
  %3991 = take(%3990, meta[relay.Constant][909], axis=1);
  %3992 = squeeze(%3991, axis=[1]);
  %3993 = cast(%3992, dtype="int64");
  %3994 = shape_of(%3969, dtype="int64");
  %3995 = take(%3994, 0);
  %3996 = less(%3993, 0);
  %3997 = add(%3993, %3995);
  %3998 = where(%3996, %3997, %3993);
  %3999 = shape_of(%1687, dtype="int32");
  %4000 = cast_like(%3999, meta[relay.Constant][911]);
  %4001 = slice_like(%4000, meta[relay.Constant][911], axes=None);
  %4002 = add(meta[relay.Constant][911], %4001);
  %4003 = where(meta[relay.Constant][910], %4002, meta[relay.Constant][911]);
  %4004 = greater_equal(%4003, %4001);
  %4005 = shape_of(%1687, dtype="int64");
  %4006 = where(%4004, %4001, %4003);
  %4007 = scatter(%4005, meta[relay.Constant][912], meta[relay.Constant][913]);
  %4008 = shape_of(%1703, dtype="int32");
  %4009 = cast_like(%4008, meta[relay.Constant][916]);
  %4010 = slice_like(%4009, meta[relay.Constant][916], axes=None);
  %4011 = add(meta[relay.Constant][916], %4010);
  %4012 = where(meta[relay.Constant][915], %4011, meta[relay.Constant][916]);
  %4013 = greater_equal(%4012, %4010);
  %4014 = shape_of(%1703, dtype="int64");
  %4015 = where(%4013, %4010, %4012);
  %4016 = scatter(%4014, meta[relay.Constant][917], meta[relay.Constant][918]);
  %4017 = dyn.strided_slice(%1703, %4015, %4016, meta[relay.Constant][919], begin=None, end=None, strides=None, axes=None);
  %4018 = take(%4017, 37, axis=1);
  %4019 = cast(%4018, dtype="float32");
  %4020 = argwhere(%4019);
  %4021 = cast(%4020, dtype="int64");
  %4022 = transpose(%4021, axes=[1, 0]);
  %4023 = transpose(%4022, axes=[1, 0]);
  %4024 = squeeze(%4023, axis=[1]);
  %4025 = cast(%4024, dtype="int64");
  %4026 = cast(%4025, dtype="int64");
  %4027 = dyn.strided_slice(%1687, %4006, %4007, meta[relay.Constant][914], begin=None, end=None, strides=None, axes=None);
  %4028 = shape_of(%4027, dtype="int64");
  %4029 = take(%4028, 0);
  %4030 = less(%4026, 0);
  %4031 = add(%4026, %4029);
  %4032 = where(%4030, %4031, %4026);
  %4033 = take(%4027, %4032, axis=0);
  %4034 = take(%1701, 37, axis=1);
  %4035 = shape_of(%4034, dtype="int64");
  %4036 = take(%4035, 0);
  %4037 = less(%4025, 0);
  %4038 = add(%4025, %4036);
  %4039 = where(%4037, %4038, %4025);
  %4040 = take(%4034, %4039, axis=0);
  %4041 = expand_dims(%4040, axis=0);
  %4042 = expand_dims(%4033, axis=0);
  %4043 = expand_dims(%4041, axis=0);
  %4044 = vision.all_class_non_max_suppression(%4042, %4043, 2000, 0.5f, 0f);
  %4045 = %4044.0;
  %4046 = shape_of(%4045, dtype="int32");
  %4047 = cast_like(%4046, meta[relay.Constant][921]);
  %4048 = slice_like(%4047, meta[relay.Constant][921], axes=None);
  %4049 = add(meta[relay.Constant][921], %4048);
  %4050 = where(meta[relay.Constant][920], %4049, meta[relay.Constant][921]);
  %4051 = greater_equal(%4050, %4048);
  %4052 = where(%4051, %4048, %4050);
  %4053 = %4044.1;
  %4054 = dyn.strided_slice(%4045, %4052, %4053, meta[relay.Constant][922], begin=None, end=None, strides=None, axes=None);
  %4055 = take(%4054, meta[relay.Constant][923], axis=1);
  %4056 = squeeze(%4055, axis=[1]);
  %4057 = cast(%4056, dtype="int64");
  %4058 = shape_of(%4033, dtype="int64");
  %4059 = take(%4058, 0);
  %4060 = less(%4057, 0);
  %4061 = add(%4057, %4059);
  %4062 = where(%4060, %4061, %4057);
  %4063 = shape_of(%1687, dtype="int32");
  %4064 = cast_like(%4063, meta[relay.Constant][925]);
  %4065 = slice_like(%4064, meta[relay.Constant][925], axes=None);
  %4066 = add(meta[relay.Constant][925], %4065);
  %4067 = where(meta[relay.Constant][924], %4066, meta[relay.Constant][925]);
  %4068 = greater_equal(%4067, %4065);
  %4069 = shape_of(%1687, dtype="int64");
  %4070 = where(%4068, %4065, %4067);
  %4071 = scatter(%4069, meta[relay.Constant][926], meta[relay.Constant][927]);
  %4072 = shape_of(%1703, dtype="int32");
  %4073 = cast_like(%4072, meta[relay.Constant][930]);
  %4074 = slice_like(%4073, meta[relay.Constant][930], axes=None);
  %4075 = add(meta[relay.Constant][930], %4074);
  %4076 = where(meta[relay.Constant][929], %4075, meta[relay.Constant][930]);
  %4077 = greater_equal(%4076, %4074);
  %4078 = shape_of(%1703, dtype="int64");
  %4079 = where(%4077, %4074, %4076);
  %4080 = scatter(%4078, meta[relay.Constant][931], meta[relay.Constant][932]);
  %4081 = dyn.strided_slice(%1703, %4079, %4080, meta[relay.Constant][933], begin=None, end=None, strides=None, axes=None);
  %4082 = take(%4081, 38, axis=1);
  %4083 = cast(%4082, dtype="float32");
  %4084 = argwhere(%4083);
  %4085 = cast(%4084, dtype="int64");
  %4086 = transpose(%4085, axes=[1, 0]);
  %4087 = transpose(%4086, axes=[1, 0]);
  %4088 = squeeze(%4087, axis=[1]);
  %4089 = cast(%4088, dtype="int64");
  %4090 = cast(%4089, dtype="int64");
  %4091 = dyn.strided_slice(%1687, %4070, %4071, meta[relay.Constant][928], begin=None, end=None, strides=None, axes=None);
  %4092 = shape_of(%4091, dtype="int64");
  %4093 = take(%4092, 0);
  %4094 = less(%4090, 0);
  %4095 = add(%4090, %4093);
  %4096 = where(%4094, %4095, %4090);
  %4097 = take(%4091, %4096, axis=0);
  %4098 = take(%1701, 38, axis=1);
  %4099 = shape_of(%4098, dtype="int64");
  %4100 = take(%4099, 0);
  %4101 = less(%4089, 0);
  %4102 = add(%4089, %4100);
  %4103 = where(%4101, %4102, %4089);
  %4104 = take(%4098, %4103, axis=0);
  %4105 = expand_dims(%4104, axis=0);
  %4106 = expand_dims(%4097, axis=0);
  %4107 = expand_dims(%4105, axis=0);
  %4108 = vision.all_class_non_max_suppression(%4106, %4107, 2000, 0.5f, 0f);
  %4109 = %4108.0;
  %4110 = shape_of(%4109, dtype="int32");
  %4111 = cast_like(%4110, meta[relay.Constant][935]);
  %4112 = slice_like(%4111, meta[relay.Constant][935], axes=None);
  %4113 = add(meta[relay.Constant][935], %4112);
  %4114 = where(meta[relay.Constant][934], %4113, meta[relay.Constant][935]);
  %4115 = greater_equal(%4114, %4112);
  %4116 = where(%4115, %4112, %4114);
  %4117 = %4108.1;
  %4118 = dyn.strided_slice(%4109, %4116, %4117, meta[relay.Constant][936], begin=None, end=None, strides=None, axes=None);
  %4119 = take(%4118, meta[relay.Constant][937], axis=1);
  %4120 = squeeze(%4119, axis=[1]);
  %4121 = cast(%4120, dtype="int64");
  %4122 = shape_of(%4097, dtype="int64");
  %4123 = take(%4122, 0);
  %4124 = less(%4121, 0);
  %4125 = add(%4121, %4123);
  %4126 = where(%4124, %4125, %4121);
  %4127 = shape_of(%1687, dtype="int32");
  %4128 = cast_like(%4127, meta[relay.Constant][939]);
  %4129 = slice_like(%4128, meta[relay.Constant][939], axes=None);
  %4130 = add(meta[relay.Constant][939], %4129);
  %4131 = where(meta[relay.Constant][938], %4130, meta[relay.Constant][939]);
  %4132 = greater_equal(%4131, %4129);
  %4133 = shape_of(%1687, dtype="int64");
  %4134 = where(%4132, %4129, %4131);
  %4135 = scatter(%4133, meta[relay.Constant][940], meta[relay.Constant][941]);
  %4136 = shape_of(%1703, dtype="int32");
  %4137 = cast_like(%4136, meta[relay.Constant][944]);
  %4138 = slice_like(%4137, meta[relay.Constant][944], axes=None);
  %4139 = add(meta[relay.Constant][944], %4138);
  %4140 = where(meta[relay.Constant][943], %4139, meta[relay.Constant][944]);
  %4141 = greater_equal(%4140, %4138);
  %4142 = shape_of(%1703, dtype="int64");
  %4143 = where(%4141, %4138, %4140);
  %4144 = scatter(%4142, meta[relay.Constant][945], meta[relay.Constant][946]);
  %4145 = dyn.strided_slice(%1703, %4143, %4144, meta[relay.Constant][947], begin=None, end=None, strides=None, axes=None);
  %4146 = take(%4145, 39, axis=1);
  %4147 = cast(%4146, dtype="float32");
  %4148 = argwhere(%4147);
  %4149 = cast(%4148, dtype="int64");
  %4150 = transpose(%4149, axes=[1, 0]);
  %4151 = transpose(%4150, axes=[1, 0]);
  %4152 = squeeze(%4151, axis=[1]);
  %4153 = cast(%4152, dtype="int64");
  %4154 = cast(%4153, dtype="int64");
  %4155 = dyn.strided_slice(%1687, %4134, %4135, meta[relay.Constant][942], begin=None, end=None, strides=None, axes=None);
  %4156 = shape_of(%4155, dtype="int64");
  %4157 = take(%4156, 0);
  %4158 = less(%4154, 0);
  %4159 = add(%4154, %4157);
  %4160 = where(%4158, %4159, %4154);
  %4161 = take(%4155, %4160, axis=0);
  %4162 = take(%1701, 39, axis=1);
  %4163 = shape_of(%4162, dtype="int64");
  %4164 = take(%4163, 0);
  %4165 = less(%4153, 0);
  %4166 = add(%4153, %4164);
  %4167 = where(%4165, %4166, %4153);
  %4168 = take(%4162, %4167, axis=0);
  %4169 = expand_dims(%4168, axis=0);
  %4170 = expand_dims(%4161, axis=0);
  %4171 = expand_dims(%4169, axis=0);
  %4172 = vision.all_class_non_max_suppression(%4170, %4171, 2000, 0.5f, 0f);
  %4173 = %4172.0;
  %4174 = shape_of(%4173, dtype="int32");
  %4175 = cast_like(%4174, meta[relay.Constant][949]);
  %4176 = slice_like(%4175, meta[relay.Constant][949], axes=None);
  %4177 = add(meta[relay.Constant][949], %4176);
  %4178 = where(meta[relay.Constant][948], %4177, meta[relay.Constant][949]);
  %4179 = greater_equal(%4178, %4176);
  %4180 = where(%4179, %4176, %4178);
  %4181 = %4172.1;
  %4182 = dyn.strided_slice(%4173, %4180, %4181, meta[relay.Constant][950], begin=None, end=None, strides=None, axes=None);
  %4183 = take(%4182, meta[relay.Constant][951], axis=1);
  %4184 = squeeze(%4183, axis=[1]);
  %4185 = cast(%4184, dtype="int64");
  %4186 = shape_of(%4161, dtype="int64");
  %4187 = take(%4186, 0);
  %4188 = less(%4185, 0);
  %4189 = add(%4185, %4187);
  %4190 = where(%4188, %4189, %4185);
  %4191 = shape_of(%1687, dtype="int32");
  %4192 = cast_like(%4191, meta[relay.Constant][953]);
  %4193 = slice_like(%4192, meta[relay.Constant][953], axes=None);
  %4194 = add(meta[relay.Constant][953], %4193);
  %4195 = where(meta[relay.Constant][952], %4194, meta[relay.Constant][953]);
  %4196 = greater_equal(%4195, %4193);
  %4197 = shape_of(%1687, dtype="int64");
  %4198 = where(%4196, %4193, %4195);
  %4199 = scatter(%4197, meta[relay.Constant][954], meta[relay.Constant][955]);
  %4200 = shape_of(%1703, dtype="int32");
  %4201 = cast_like(%4200, meta[relay.Constant][958]);
  %4202 = slice_like(%4201, meta[relay.Constant][958], axes=None);
  %4203 = add(meta[relay.Constant][958], %4202);
  %4204 = where(meta[relay.Constant][957], %4203, meta[relay.Constant][958]);
  %4205 = greater_equal(%4204, %4202);
  %4206 = shape_of(%1703, dtype="int64");
  %4207 = where(%4205, %4202, %4204);
  %4208 = scatter(%4206, meta[relay.Constant][959], meta[relay.Constant][960]);
  %4209 = dyn.strided_slice(%1703, %4207, %4208, meta[relay.Constant][961], begin=None, end=None, strides=None, axes=None);
  %4210 = take(%4209, 40, axis=1);
  %4211 = cast(%4210, dtype="float32");
  %4212 = argwhere(%4211);
  %4213 = cast(%4212, dtype="int64");
  %4214 = transpose(%4213, axes=[1, 0]);
  %4215 = transpose(%4214, axes=[1, 0]);
  %4216 = squeeze(%4215, axis=[1]);
  %4217 = cast(%4216, dtype="int64");
  %4218 = cast(%4217, dtype="int64");
  %4219 = dyn.strided_slice(%1687, %4198, %4199, meta[relay.Constant][956], begin=None, end=None, strides=None, axes=None);
  %4220 = shape_of(%4219, dtype="int64");
  %4221 = take(%4220, 0);
  %4222 = less(%4218, 0);
  %4223 = add(%4218, %4221);
  %4224 = where(%4222, %4223, %4218);
  %4225 = take(%4219, %4224, axis=0);
  %4226 = take(%1701, 40, axis=1);
  %4227 = shape_of(%4226, dtype="int64");
  %4228 = take(%4227, 0);
  %4229 = less(%4217, 0);
  %4230 = add(%4217, %4228);
  %4231 = where(%4229, %4230, %4217);
  %4232 = take(%4226, %4231, axis=0);
  %4233 = expand_dims(%4232, axis=0);
  %4234 = expand_dims(%4225, axis=0);
  %4235 = expand_dims(%4233, axis=0);
  %4236 = vision.all_class_non_max_suppression(%4234, %4235, 2000, 0.5f, 0f);
  %4237 = %4236.0;
  %4238 = shape_of(%4237, dtype="int32");
  %4239 = cast_like(%4238, meta[relay.Constant][963]);
  %4240 = slice_like(%4239, meta[relay.Constant][963], axes=None);
  %4241 = add(meta[relay.Constant][963], %4240);
  %4242 = where(meta[relay.Constant][962], %4241, meta[relay.Constant][963]);
  %4243 = greater_equal(%4242, %4240);
  %4244 = where(%4243, %4240, %4242);
  %4245 = %4236.1;
  %4246 = dyn.strided_slice(%4237, %4244, %4245, meta[relay.Constant][964], begin=None, end=None, strides=None, axes=None);
  %4247 = take(%4246, meta[relay.Constant][965], axis=1);
  %4248 = squeeze(%4247, axis=[1]);
  %4249 = cast(%4248, dtype="int64");
  %4250 = shape_of(%4225, dtype="int64");
  %4251 = take(%4250, 0);
  %4252 = less(%4249, 0);
  %4253 = add(%4249, %4251);
  %4254 = where(%4252, %4253, %4249);
  %4255 = shape_of(%1687, dtype="int32");
  %4256 = cast_like(%4255, meta[relay.Constant][967]);
  %4257 = slice_like(%4256, meta[relay.Constant][967], axes=None);
  %4258 = add(meta[relay.Constant][967], %4257);
  %4259 = where(meta[relay.Constant][966], %4258, meta[relay.Constant][967]);
  %4260 = greater_equal(%4259, %4257);
  %4261 = shape_of(%1687, dtype="int64");
  %4262 = where(%4260, %4257, %4259);
  %4263 = scatter(%4261, meta[relay.Constant][968], meta[relay.Constant][969]);
  %4264 = shape_of(%1703, dtype="int32");
  %4265 = cast_like(%4264, meta[relay.Constant][972]);
  %4266 = slice_like(%4265, meta[relay.Constant][972], axes=None);
  %4267 = add(meta[relay.Constant][972], %4266);
  %4268 = where(meta[relay.Constant][971], %4267, meta[relay.Constant][972]);
  %4269 = greater_equal(%4268, %4266);
  %4270 = shape_of(%1703, dtype="int64");
  %4271 = where(%4269, %4266, %4268);
  %4272 = scatter(%4270, meta[relay.Constant][973], meta[relay.Constant][974]);
  %4273 = dyn.strided_slice(%1703, %4271, %4272, meta[relay.Constant][975], begin=None, end=None, strides=None, axes=None);
  %4274 = take(%4273, 41, axis=1);
  %4275 = cast(%4274, dtype="float32");
  %4276 = argwhere(%4275);
  %4277 = cast(%4276, dtype="int64");
  %4278 = transpose(%4277, axes=[1, 0]);
  %4279 = transpose(%4278, axes=[1, 0]);
  %4280 = squeeze(%4279, axis=[1]);
  %4281 = cast(%4280, dtype="int64");
  %4282 = cast(%4281, dtype="int64");
  %4283 = dyn.strided_slice(%1687, %4262, %4263, meta[relay.Constant][970], begin=None, end=None, strides=None, axes=None);
  %4284 = shape_of(%4283, dtype="int64");
  %4285 = take(%4284, 0);
  %4286 = less(%4282, 0);
  %4287 = add(%4282, %4285);
  %4288 = where(%4286, %4287, %4282);
  %4289 = take(%4283, %4288, axis=0);
  %4290 = take(%1701, 41, axis=1);
  %4291 = shape_of(%4290, dtype="int64");
  %4292 = take(%4291, 0);
  %4293 = less(%4281, 0);
  %4294 = add(%4281, %4292);
  %4295 = where(%4293, %4294, %4281);
  %4296 = take(%4290, %4295, axis=0);
  %4297 = expand_dims(%4296, axis=0);
  %4298 = expand_dims(%4289, axis=0);
  %4299 = expand_dims(%4297, axis=0);
  %4300 = vision.all_class_non_max_suppression(%4298, %4299, 2000, 0.5f, 0f);
  %4301 = %4300.0;
  %4302 = shape_of(%4301, dtype="int32");
  %4303 = cast_like(%4302, meta[relay.Constant][977]);
  %4304 = slice_like(%4303, meta[relay.Constant][977], axes=None);
  %4305 = add(meta[relay.Constant][977], %4304);
  %4306 = where(meta[relay.Constant][976], %4305, meta[relay.Constant][977]);
  %4307 = greater_equal(%4306, %4304);
  %4308 = where(%4307, %4304, %4306);
  %4309 = %4300.1;
  %4310 = dyn.strided_slice(%4301, %4308, %4309, meta[relay.Constant][978], begin=None, end=None, strides=None, axes=None);
  %4311 = take(%4310, meta[relay.Constant][979], axis=1);
  %4312 = squeeze(%4311, axis=[1]);
  %4313 = cast(%4312, dtype="int64");
  %4314 = shape_of(%4289, dtype="int64");
  %4315 = take(%4314, 0);
  %4316 = less(%4313, 0);
  %4317 = add(%4313, %4315);
  %4318 = where(%4316, %4317, %4313);
  %4319 = shape_of(%1687, dtype="int32");
  %4320 = cast_like(%4319, meta[relay.Constant][981]);
  %4321 = slice_like(%4320, meta[relay.Constant][981], axes=None);
  %4322 = add(meta[relay.Constant][981], %4321);
  %4323 = where(meta[relay.Constant][980], %4322, meta[relay.Constant][981]);
  %4324 = greater_equal(%4323, %4321);
  %4325 = shape_of(%1687, dtype="int64");
  %4326 = where(%4324, %4321, %4323);
  %4327 = scatter(%4325, meta[relay.Constant][982], meta[relay.Constant][983]);
  %4328 = shape_of(%1703, dtype="int32");
  %4329 = cast_like(%4328, meta[relay.Constant][986]);
  %4330 = slice_like(%4329, meta[relay.Constant][986], axes=None);
  %4331 = add(meta[relay.Constant][986], %4330);
  %4332 = where(meta[relay.Constant][985], %4331, meta[relay.Constant][986]);
  %4333 = greater_equal(%4332, %4330);
  %4334 = shape_of(%1703, dtype="int64");
  %4335 = where(%4333, %4330, %4332);
  %4336 = scatter(%4334, meta[relay.Constant][987], meta[relay.Constant][988]);
  %4337 = dyn.strided_slice(%1703, %4335, %4336, meta[relay.Constant][989], begin=None, end=None, strides=None, axes=None);
  %4338 = take(%4337, 42, axis=1);
  %4339 = cast(%4338, dtype="float32");
  %4340 = argwhere(%4339);
  %4341 = cast(%4340, dtype="int64");
  %4342 = transpose(%4341, axes=[1, 0]);
  %4343 = transpose(%4342, axes=[1, 0]);
  %4344 = squeeze(%4343, axis=[1]);
  %4345 = cast(%4344, dtype="int64");
  %4346 = cast(%4345, dtype="int64");
  %4347 = dyn.strided_slice(%1687, %4326, %4327, meta[relay.Constant][984], begin=None, end=None, strides=None, axes=None);
  %4348 = shape_of(%4347, dtype="int64");
  %4349 = take(%4348, 0);
  %4350 = less(%4346, 0);
  %4351 = add(%4346, %4349);
  %4352 = where(%4350, %4351, %4346);
  %4353 = take(%4347, %4352, axis=0);
  %4354 = take(%1701, 42, axis=1);
  %4355 = shape_of(%4354, dtype="int64");
  %4356 = take(%4355, 0);
  %4357 = less(%4345, 0);
  %4358 = add(%4345, %4356);
  %4359 = where(%4357, %4358, %4345);
  %4360 = take(%4354, %4359, axis=0);
  %4361 = expand_dims(%4360, axis=0);
  %4362 = expand_dims(%4353, axis=0);
  %4363 = expand_dims(%4361, axis=0);
  %4364 = vision.all_class_non_max_suppression(%4362, %4363, 2000, 0.5f, 0f);
  %4365 = %4364.0;
  %4366 = shape_of(%4365, dtype="int32");
  %4367 = cast_like(%4366, meta[relay.Constant][991]);
  %4368 = slice_like(%4367, meta[relay.Constant][991], axes=None);
  %4369 = add(meta[relay.Constant][991], %4368);
  %4370 = where(meta[relay.Constant][990], %4369, meta[relay.Constant][991]);
  %4371 = greater_equal(%4370, %4368);
  %4372 = where(%4371, %4368, %4370);
  %4373 = %4364.1;
  %4374 = dyn.strided_slice(%4365, %4372, %4373, meta[relay.Constant][992], begin=None, end=None, strides=None, axes=None);
  %4375 = take(%4374, meta[relay.Constant][993], axis=1);
  %4376 = squeeze(%4375, axis=[1]);
  %4377 = cast(%4376, dtype="int64");
  %4378 = shape_of(%4353, dtype="int64");
  %4379 = take(%4378, 0);
  %4380 = less(%4377, 0);
  %4381 = add(%4377, %4379);
  %4382 = where(%4380, %4381, %4377);
  %4383 = shape_of(%1687, dtype="int32");
  %4384 = cast_like(%4383, meta[relay.Constant][995]);
  %4385 = slice_like(%4384, meta[relay.Constant][995], axes=None);
  %4386 = add(meta[relay.Constant][995], %4385);
  %4387 = where(meta[relay.Constant][994], %4386, meta[relay.Constant][995]);
  %4388 = greater_equal(%4387, %4385);
  %4389 = shape_of(%1687, dtype="int64");
  %4390 = where(%4388, %4385, %4387);
  %4391 = scatter(%4389, meta[relay.Constant][996], meta[relay.Constant][997]);
  %4392 = shape_of(%1703, dtype="int32");
  %4393 = cast_like(%4392, meta[relay.Constant][1000]);
  %4394 = slice_like(%4393, meta[relay.Constant][1000], axes=None);
  %4395 = add(meta[relay.Constant][1000], %4394);
  %4396 = where(meta[relay.Constant][999], %4395, meta[relay.Constant][1000]);
  %4397 = greater_equal(%4396, %4394);
  %4398 = shape_of(%1703, dtype="int64");
  %4399 = where(%4397, %4394, %4396);
  %4400 = scatter(%4398, meta[relay.Constant][1001], meta[relay.Constant][1002]);
  %4401 = dyn.strided_slice(%1703, %4399, %4400, meta[relay.Constant][1003], begin=None, end=None, strides=None, axes=None);
  %4402 = take(%4401, 43, axis=1);
  %4403 = cast(%4402, dtype="float32");
  %4404 = argwhere(%4403);
  %4405 = cast(%4404, dtype="int64");
  %4406 = transpose(%4405, axes=[1, 0]);
  %4407 = transpose(%4406, axes=[1, 0]);
  %4408 = squeeze(%4407, axis=[1]);
  %4409 = cast(%4408, dtype="int64");
  %4410 = cast(%4409, dtype="int64");
  %4411 = dyn.strided_slice(%1687, %4390, %4391, meta[relay.Constant][998], begin=None, end=None, strides=None, axes=None);
  %4412 = shape_of(%4411, dtype="int64");
  %4413 = take(%4412, 0);
  %4414 = less(%4410, 0);
  %4415 = add(%4410, %4413);
  %4416 = where(%4414, %4415, %4410);
  %4417 = take(%4411, %4416, axis=0);
  %4418 = take(%1701, 43, axis=1);
  %4419 = shape_of(%4418, dtype="int64");
  %4420 = take(%4419, 0);
  %4421 = less(%4409, 0);
  %4422 = add(%4409, %4420);
  %4423 = where(%4421, %4422, %4409);
  %4424 = take(%4418, %4423, axis=0);
  %4425 = expand_dims(%4424, axis=0);
  %4426 = expand_dims(%4417, axis=0);
  %4427 = expand_dims(%4425, axis=0);
  %4428 = vision.all_class_non_max_suppression(%4426, %4427, 2000, 0.5f, 0f);
  %4429 = %4428.0;
  %4430 = shape_of(%4429, dtype="int32");
  %4431 = cast_like(%4430, meta[relay.Constant][1005]);
  %4432 = slice_like(%4431, meta[relay.Constant][1005], axes=None);
  %4433 = add(meta[relay.Constant][1005], %4432);
  %4434 = where(meta[relay.Constant][1004], %4433, meta[relay.Constant][1005]);
  %4435 = greater_equal(%4434, %4432);
  %4436 = where(%4435, %4432, %4434);
  %4437 = %4428.1;
  %4438 = dyn.strided_slice(%4429, %4436, %4437, meta[relay.Constant][1006], begin=None, end=None, strides=None, axes=None);
  %4439 = take(%4438, meta[relay.Constant][1007], axis=1);
  %4440 = squeeze(%4439, axis=[1]);
  %4441 = cast(%4440, dtype="int64");
  %4442 = shape_of(%4417, dtype="int64");
  %4443 = take(%4442, 0);
  %4444 = less(%4441, 0);
  %4445 = add(%4441, %4443);
  %4446 = where(%4444, %4445, %4441);
  %4447 = shape_of(%1687, dtype="int32");
  %4448 = cast_like(%4447, meta[relay.Constant][1009]);
  %4449 = slice_like(%4448, meta[relay.Constant][1009], axes=None);
  %4450 = add(meta[relay.Constant][1009], %4449);
  %4451 = where(meta[relay.Constant][1008], %4450, meta[relay.Constant][1009]);
  %4452 = greater_equal(%4451, %4449);
  %4453 = shape_of(%1687, dtype="int64");
  %4454 = where(%4452, %4449, %4451);
  %4455 = scatter(%4453, meta[relay.Constant][1010], meta[relay.Constant][1011]);
  %4456 = shape_of(%1703, dtype="int32");
  %4457 = cast_like(%4456, meta[relay.Constant][1014]);
  %4458 = slice_like(%4457, meta[relay.Constant][1014], axes=None);
  %4459 = add(meta[relay.Constant][1014], %4458);
  %4460 = where(meta[relay.Constant][1013], %4459, meta[relay.Constant][1014]);
  %4461 = greater_equal(%4460, %4458);
  %4462 = shape_of(%1703, dtype="int64");
  %4463 = where(%4461, %4458, %4460);
  %4464 = scatter(%4462, meta[relay.Constant][1015], meta[relay.Constant][1016]);
  %4465 = dyn.strided_slice(%1703, %4463, %4464, meta[relay.Constant][1017], begin=None, end=None, strides=None, axes=None);
  %4466 = take(%4465, 44, axis=1);
  %4467 = cast(%4466, dtype="float32");
  %4468 = argwhere(%4467);
  %4469 = cast(%4468, dtype="int64");
  %4470 = transpose(%4469, axes=[1, 0]);
  %4471 = transpose(%4470, axes=[1, 0]);
  %4472 = squeeze(%4471, axis=[1]);
  %4473 = cast(%4472, dtype="int64");
  %4474 = cast(%4473, dtype="int64");
  %4475 = dyn.strided_slice(%1687, %4454, %4455, meta[relay.Constant][1012], begin=None, end=None, strides=None, axes=None);
  %4476 = shape_of(%4475, dtype="int64");
  %4477 = take(%4476, 0);
  %4478 = less(%4474, 0);
  %4479 = add(%4474, %4477);
  %4480 = where(%4478, %4479, %4474);
  %4481 = take(%4475, %4480, axis=0);
  %4482 = take(%1701, 44, axis=1);
  %4483 = shape_of(%4482, dtype="int64");
  %4484 = take(%4483, 0);
  %4485 = less(%4473, 0);
  %4486 = add(%4473, %4484);
  %4487 = where(%4485, %4486, %4473);
  %4488 = take(%4482, %4487, axis=0);
  %4489 = expand_dims(%4488, axis=0);
  %4490 = expand_dims(%4481, axis=0);
  %4491 = expand_dims(%4489, axis=0);
  %4492 = vision.all_class_non_max_suppression(%4490, %4491, 2000, 0.5f, 0f);
  %4493 = %4492.0;
  %4494 = shape_of(%4493, dtype="int32");
  %4495 = cast_like(%4494, meta[relay.Constant][1019]);
  %4496 = slice_like(%4495, meta[relay.Constant][1019], axes=None);
  %4497 = add(meta[relay.Constant][1019], %4496);
  %4498 = where(meta[relay.Constant][1018], %4497, meta[relay.Constant][1019]);
  %4499 = greater_equal(%4498, %4496);
  %4500 = where(%4499, %4496, %4498);
  %4501 = %4492.1;
  %4502 = dyn.strided_slice(%4493, %4500, %4501, meta[relay.Constant][1020], begin=None, end=None, strides=None, axes=None);
  %4503 = take(%4502, meta[relay.Constant][1021], axis=1);
  %4504 = squeeze(%4503, axis=[1]);
  %4505 = cast(%4504, dtype="int64");
  %4506 = shape_of(%4481, dtype="int64");
  %4507 = take(%4506, 0);
  %4508 = less(%4505, 0);
  %4509 = add(%4505, %4507);
  %4510 = where(%4508, %4509, %4505);
  %4511 = shape_of(%1687, dtype="int32");
  %4512 = cast_like(%4511, meta[relay.Constant][1023]);
  %4513 = slice_like(%4512, meta[relay.Constant][1023], axes=None);
  %4514 = add(meta[relay.Constant][1023], %4513);
  %4515 = where(meta[relay.Constant][1022], %4514, meta[relay.Constant][1023]);
  %4516 = greater_equal(%4515, %4513);
  %4517 = shape_of(%1687, dtype="int64");
  %4518 = where(%4516, %4513, %4515);
  %4519 = scatter(%4517, meta[relay.Constant][1024], meta[relay.Constant][1025]);
  %4520 = shape_of(%1703, dtype="int32");
  %4521 = cast_like(%4520, meta[relay.Constant][1028]);
  %4522 = slice_like(%4521, meta[relay.Constant][1028], axes=None);
  %4523 = add(meta[relay.Constant][1028], %4522);
  %4524 = where(meta[relay.Constant][1027], %4523, meta[relay.Constant][1028]);
  %4525 = greater_equal(%4524, %4522);
  %4526 = shape_of(%1703, dtype="int64");
  %4527 = where(%4525, %4522, %4524);
  %4528 = scatter(%4526, meta[relay.Constant][1029], meta[relay.Constant][1030]);
  %4529 = dyn.strided_slice(%1703, %4527, %4528, meta[relay.Constant][1031], begin=None, end=None, strides=None, axes=None);
  %4530 = take(%4529, 45, axis=1);
  %4531 = cast(%4530, dtype="float32");
  %4532 = argwhere(%4531);
  %4533 = cast(%4532, dtype="int64");
  %4534 = transpose(%4533, axes=[1, 0]);
  %4535 = transpose(%4534, axes=[1, 0]);
  %4536 = squeeze(%4535, axis=[1]);
  %4537 = cast(%4536, dtype="int64");
  %4538 = cast(%4537, dtype="int64");
  %4539 = dyn.strided_slice(%1687, %4518, %4519, meta[relay.Constant][1026], begin=None, end=None, strides=None, axes=None);
  %4540 = shape_of(%4539, dtype="int64");
  %4541 = take(%4540, 0);
  %4542 = less(%4538, 0);
  %4543 = add(%4538, %4541);
  %4544 = where(%4542, %4543, %4538);
  %4545 = take(%4539, %4544, axis=0);
  %4546 = take(%1701, 45, axis=1);
  %4547 = shape_of(%4546, dtype="int64");
  %4548 = take(%4547, 0);
  %4549 = less(%4537, 0);
  %4550 = add(%4537, %4548);
  %4551 = where(%4549, %4550, %4537);
  %4552 = take(%4546, %4551, axis=0);
  %4553 = expand_dims(%4552, axis=0);
  %4554 = expand_dims(%4545, axis=0);
  %4555 = expand_dims(%4553, axis=0);
  %4556 = vision.all_class_non_max_suppression(%4554, %4555, 2000, 0.5f, 0f);
  %4557 = %4556.0;
  %4558 = shape_of(%4557, dtype="int32");
  %4559 = cast_like(%4558, meta[relay.Constant][1033]);
  %4560 = slice_like(%4559, meta[relay.Constant][1033], axes=None);
  %4561 = add(meta[relay.Constant][1033], %4560);
  %4562 = where(meta[relay.Constant][1032], %4561, meta[relay.Constant][1033]);
  %4563 = greater_equal(%4562, %4560);
  %4564 = where(%4563, %4560, %4562);
  %4565 = %4556.1;
  %4566 = dyn.strided_slice(%4557, %4564, %4565, meta[relay.Constant][1034], begin=None, end=None, strides=None, axes=None);
  %4567 = take(%4566, meta[relay.Constant][1035], axis=1);
  %4568 = squeeze(%4567, axis=[1]);
  %4569 = cast(%4568, dtype="int64");
  %4570 = shape_of(%4545, dtype="int64");
  %4571 = take(%4570, 0);
  %4572 = less(%4569, 0);
  %4573 = add(%4569, %4571);
  %4574 = where(%4572, %4573, %4569);
  %4575 = shape_of(%1687, dtype="int32");
  %4576 = cast_like(%4575, meta[relay.Constant][1037]);
  %4577 = slice_like(%4576, meta[relay.Constant][1037], axes=None);
  %4578 = add(meta[relay.Constant][1037], %4577);
  %4579 = where(meta[relay.Constant][1036], %4578, meta[relay.Constant][1037]);
  %4580 = greater_equal(%4579, %4577);
  %4581 = shape_of(%1687, dtype="int64");
  %4582 = where(%4580, %4577, %4579);
  %4583 = scatter(%4581, meta[relay.Constant][1038], meta[relay.Constant][1039]);
  %4584 = shape_of(%1703, dtype="int32");
  %4585 = cast_like(%4584, meta[relay.Constant][1042]);
  %4586 = slice_like(%4585, meta[relay.Constant][1042], axes=None);
  %4587 = add(meta[relay.Constant][1042], %4586);
  %4588 = where(meta[relay.Constant][1041], %4587, meta[relay.Constant][1042]);
  %4589 = greater_equal(%4588, %4586);
  %4590 = shape_of(%1703, dtype="int64");
  %4591 = where(%4589, %4586, %4588);
  %4592 = scatter(%4590, meta[relay.Constant][1043], meta[relay.Constant][1044]);
  %4593 = dyn.strided_slice(%1703, %4591, %4592, meta[relay.Constant][1045], begin=None, end=None, strides=None, axes=None);
  %4594 = take(%4593, 46, axis=1);
  %4595 = cast(%4594, dtype="float32");
  %4596 = argwhere(%4595);
  %4597 = cast(%4596, dtype="int64");
  %4598 = transpose(%4597, axes=[1, 0]);
  %4599 = transpose(%4598, axes=[1, 0]);
  %4600 = squeeze(%4599, axis=[1]);
  %4601 = cast(%4600, dtype="int64");
  %4602 = cast(%4601, dtype="int64");
  %4603 = dyn.strided_slice(%1687, %4582, %4583, meta[relay.Constant][1040], begin=None, end=None, strides=None, axes=None);
  %4604 = shape_of(%4603, dtype="int64");
  %4605 = take(%4604, 0);
  %4606 = less(%4602, 0);
  %4607 = add(%4602, %4605);
  %4608 = where(%4606, %4607, %4602);
  %4609 = take(%4603, %4608, axis=0);
  %4610 = take(%1701, 46, axis=1);
  %4611 = shape_of(%4610, dtype="int64");
  %4612 = take(%4611, 0);
  %4613 = less(%4601, 0);
  %4614 = add(%4601, %4612);
  %4615 = where(%4613, %4614, %4601);
  %4616 = take(%4610, %4615, axis=0);
  %4617 = expand_dims(%4616, axis=0);
  %4618 = expand_dims(%4609, axis=0);
  %4619 = expand_dims(%4617, axis=0);
  %4620 = vision.all_class_non_max_suppression(%4618, %4619, 2000, 0.5f, 0f);
  %4621 = %4620.0;
  %4622 = shape_of(%4621, dtype="int32");
  %4623 = cast_like(%4622, meta[relay.Constant][1047]);
  %4624 = slice_like(%4623, meta[relay.Constant][1047], axes=None);
  %4625 = add(meta[relay.Constant][1047], %4624);
  %4626 = where(meta[relay.Constant][1046], %4625, meta[relay.Constant][1047]);
  %4627 = greater_equal(%4626, %4624);
  %4628 = where(%4627, %4624, %4626);
  %4629 = %4620.1;
  %4630 = dyn.strided_slice(%4621, %4628, %4629, meta[relay.Constant][1048], begin=None, end=None, strides=None, axes=None);
  %4631 = take(%4630, meta[relay.Constant][1049], axis=1);
  %4632 = squeeze(%4631, axis=[1]);
  %4633 = cast(%4632, dtype="int64");
  %4634 = shape_of(%4609, dtype="int64");
  %4635 = take(%4634, 0);
  %4636 = less(%4633, 0);
  %4637 = add(%4633, %4635);
  %4638 = where(%4636, %4637, %4633);
  %4639 = shape_of(%1687, dtype="int32");
  %4640 = cast_like(%4639, meta[relay.Constant][1051]);
  %4641 = slice_like(%4640, meta[relay.Constant][1051], axes=None);
  %4642 = add(meta[relay.Constant][1051], %4641);
  %4643 = where(meta[relay.Constant][1050], %4642, meta[relay.Constant][1051]);
  %4644 = greater_equal(%4643, %4641);
  %4645 = shape_of(%1687, dtype="int64");
  %4646 = where(%4644, %4641, %4643);
  %4647 = scatter(%4645, meta[relay.Constant][1052], meta[relay.Constant][1053]);
  %4648 = shape_of(%1703, dtype="int32");
  %4649 = cast_like(%4648, meta[relay.Constant][1056]);
  %4650 = slice_like(%4649, meta[relay.Constant][1056], axes=None);
  %4651 = add(meta[relay.Constant][1056], %4650);
  %4652 = where(meta[relay.Constant][1055], %4651, meta[relay.Constant][1056]);
  %4653 = greater_equal(%4652, %4650);
  %4654 = shape_of(%1703, dtype="int64");
  %4655 = where(%4653, %4650, %4652);
  %4656 = scatter(%4654, meta[relay.Constant][1057], meta[relay.Constant][1058]);
  %4657 = dyn.strided_slice(%1703, %4655, %4656, meta[relay.Constant][1059], begin=None, end=None, strides=None, axes=None);
  %4658 = take(%4657, 47, axis=1);
  %4659 = cast(%4658, dtype="float32");
  %4660 = argwhere(%4659);
  %4661 = cast(%4660, dtype="int64");
  %4662 = transpose(%4661, axes=[1, 0]);
  %4663 = transpose(%4662, axes=[1, 0]);
  %4664 = squeeze(%4663, axis=[1]);
  %4665 = cast(%4664, dtype="int64");
  %4666 = cast(%4665, dtype="int64");
  %4667 = dyn.strided_slice(%1687, %4646, %4647, meta[relay.Constant][1054], begin=None, end=None, strides=None, axes=None);
  %4668 = shape_of(%4667, dtype="int64");
  %4669 = take(%4668, 0);
  %4670 = less(%4666, 0);
  %4671 = add(%4666, %4669);
  %4672 = where(%4670, %4671, %4666);
  %4673 = take(%4667, %4672, axis=0);
  %4674 = take(%1701, 47, axis=1);
  %4675 = shape_of(%4674, dtype="int64");
  %4676 = take(%4675, 0);
  %4677 = less(%4665, 0);
  %4678 = add(%4665, %4676);
  %4679 = where(%4677, %4678, %4665);
  %4680 = take(%4674, %4679, axis=0);
  %4681 = expand_dims(%4680, axis=0);
  %4682 = expand_dims(%4673, axis=0);
  %4683 = expand_dims(%4681, axis=0);
  %4684 = vision.all_class_non_max_suppression(%4682, %4683, 2000, 0.5f, 0f);
  %4685 = %4684.0;
  %4686 = shape_of(%4685, dtype="int32");
  %4687 = cast_like(%4686, meta[relay.Constant][1061]);
  %4688 = slice_like(%4687, meta[relay.Constant][1061], axes=None);
  %4689 = add(meta[relay.Constant][1061], %4688);
  %4690 = where(meta[relay.Constant][1060], %4689, meta[relay.Constant][1061]);
  %4691 = greater_equal(%4690, %4688);
  %4692 = where(%4691, %4688, %4690);
  %4693 = %4684.1;
  %4694 = dyn.strided_slice(%4685, %4692, %4693, meta[relay.Constant][1062], begin=None, end=None, strides=None, axes=None);
  %4695 = take(%4694, meta[relay.Constant][1063], axis=1);
  %4696 = squeeze(%4695, axis=[1]);
  %4697 = cast(%4696, dtype="int64");
  %4698 = shape_of(%4673, dtype="int64");
  %4699 = take(%4698, 0);
  %4700 = less(%4697, 0);
  %4701 = add(%4697, %4699);
  %4702 = where(%4700, %4701, %4697);
  %4703 = shape_of(%1687, dtype="int32");
  %4704 = cast_like(%4703, meta[relay.Constant][1065]);
  %4705 = slice_like(%4704, meta[relay.Constant][1065], axes=None);
  %4706 = add(meta[relay.Constant][1065], %4705);
  %4707 = where(meta[relay.Constant][1064], %4706, meta[relay.Constant][1065]);
  %4708 = greater_equal(%4707, %4705);
  %4709 = shape_of(%1687, dtype="int64");
  %4710 = where(%4708, %4705, %4707);
  %4711 = scatter(%4709, meta[relay.Constant][1066], meta[relay.Constant][1067]);
  %4712 = shape_of(%1703, dtype="int32");
  %4713 = cast_like(%4712, meta[relay.Constant][1070]);
  %4714 = slice_like(%4713, meta[relay.Constant][1070], axes=None);
  %4715 = add(meta[relay.Constant][1070], %4714);
  %4716 = where(meta[relay.Constant][1069], %4715, meta[relay.Constant][1070]);
  %4717 = greater_equal(%4716, %4714);
  %4718 = shape_of(%1703, dtype="int64");
  %4719 = where(%4717, %4714, %4716);
  %4720 = scatter(%4718, meta[relay.Constant][1071], meta[relay.Constant][1072]);
  %4721 = dyn.strided_slice(%1703, %4719, %4720, meta[relay.Constant][1073], begin=None, end=None, strides=None, axes=None);
  %4722 = take(%4721, 48, axis=1);
  %4723 = cast(%4722, dtype="float32");
  %4724 = argwhere(%4723);
  %4725 = cast(%4724, dtype="int64");
  %4726 = transpose(%4725, axes=[1, 0]);
  %4727 = transpose(%4726, axes=[1, 0]);
  %4728 = squeeze(%4727, axis=[1]);
  %4729 = cast(%4728, dtype="int64");
  %4730 = cast(%4729, dtype="int64");
  %4731 = dyn.strided_slice(%1687, %4710, %4711, meta[relay.Constant][1068], begin=None, end=None, strides=None, axes=None);
  %4732 = shape_of(%4731, dtype="int64");
  %4733 = take(%4732, 0);
  %4734 = less(%4730, 0);
  %4735 = add(%4730, %4733);
  %4736 = where(%4734, %4735, %4730);
  %4737 = take(%4731, %4736, axis=0);
  %4738 = take(%1701, 48, axis=1);
  %4739 = shape_of(%4738, dtype="int64");
  %4740 = take(%4739, 0);
  %4741 = less(%4729, 0);
  %4742 = add(%4729, %4740);
  %4743 = where(%4741, %4742, %4729);
  %4744 = take(%4738, %4743, axis=0);
  %4745 = expand_dims(%4744, axis=0);
  %4746 = expand_dims(%4737, axis=0);
  %4747 = expand_dims(%4745, axis=0);
  %4748 = vision.all_class_non_max_suppression(%4746, %4747, 2000, 0.5f, 0f);
  %4749 = %4748.0;
  %4750 = shape_of(%4749, dtype="int32");
  %4751 = cast_like(%4750, meta[relay.Constant][1075]);
  %4752 = slice_like(%4751, meta[relay.Constant][1075], axes=None);
  %4753 = add(meta[relay.Constant][1075], %4752);
  %4754 = where(meta[relay.Constant][1074], %4753, meta[relay.Constant][1075]);
  %4755 = greater_equal(%4754, %4752);
  %4756 = where(%4755, %4752, %4754);
  %4757 = %4748.1;
  %4758 = dyn.strided_slice(%4749, %4756, %4757, meta[relay.Constant][1076], begin=None, end=None, strides=None, axes=None);
  %4759 = take(%4758, meta[relay.Constant][1077], axis=1);
  %4760 = squeeze(%4759, axis=[1]);
  %4761 = cast(%4760, dtype="int64");
  %4762 = shape_of(%4737, dtype="int64");
  %4763 = take(%4762, 0);
  %4764 = less(%4761, 0);
  %4765 = add(%4761, %4763);
  %4766 = where(%4764, %4765, %4761);
  %4767 = shape_of(%1687, dtype="int32");
  %4768 = cast_like(%4767, meta[relay.Constant][1079]);
  %4769 = slice_like(%4768, meta[relay.Constant][1079], axes=None);
  %4770 = add(meta[relay.Constant][1079], %4769);
  %4771 = where(meta[relay.Constant][1078], %4770, meta[relay.Constant][1079]);
  %4772 = greater_equal(%4771, %4769);
  %4773 = shape_of(%1687, dtype="int64");
  %4774 = where(%4772, %4769, %4771);
  %4775 = scatter(%4773, meta[relay.Constant][1080], meta[relay.Constant][1081]);
  %4776 = shape_of(%1703, dtype="int32");
  %4777 = cast_like(%4776, meta[relay.Constant][1084]);
  %4778 = slice_like(%4777, meta[relay.Constant][1084], axes=None);
  %4779 = add(meta[relay.Constant][1084], %4778);
  %4780 = where(meta[relay.Constant][1083], %4779, meta[relay.Constant][1084]);
  %4781 = greater_equal(%4780, %4778);
  %4782 = shape_of(%1703, dtype="int64");
  %4783 = where(%4781, %4778, %4780);
  %4784 = scatter(%4782, meta[relay.Constant][1085], meta[relay.Constant][1086]);
  %4785 = dyn.strided_slice(%1703, %4783, %4784, meta[relay.Constant][1087], begin=None, end=None, strides=None, axes=None);
  %4786 = take(%4785, 49, axis=1);
  %4787 = cast(%4786, dtype="float32");
  %4788 = argwhere(%4787);
  %4789 = cast(%4788, dtype="int64");
  %4790 = transpose(%4789, axes=[1, 0]);
  %4791 = transpose(%4790, axes=[1, 0]);
  %4792 = squeeze(%4791, axis=[1]);
  %4793 = cast(%4792, dtype="int64");
  %4794 = cast(%4793, dtype="int64");
  %4795 = dyn.strided_slice(%1687, %4774, %4775, meta[relay.Constant][1082], begin=None, end=None, strides=None, axes=None);
  %4796 = shape_of(%4795, dtype="int64");
  %4797 = take(%4796, 0);
  %4798 = less(%4794, 0);
  %4799 = add(%4794, %4797);
  %4800 = where(%4798, %4799, %4794);
  %4801 = take(%4795, %4800, axis=0);
  %4802 = take(%1701, 49, axis=1);
  %4803 = shape_of(%4802, dtype="int64");
  %4804 = take(%4803, 0);
  %4805 = less(%4793, 0);
  %4806 = add(%4793, %4804);
  %4807 = where(%4805, %4806, %4793);
  %4808 = take(%4802, %4807, axis=0);
  %4809 = expand_dims(%4808, axis=0);
  %4810 = expand_dims(%4801, axis=0);
  %4811 = expand_dims(%4809, axis=0);
  %4812 = vision.all_class_non_max_suppression(%4810, %4811, 2000, 0.5f, 0f);
  %4813 = %4812.0;
  %4814 = shape_of(%4813, dtype="int32");
  %4815 = cast_like(%4814, meta[relay.Constant][1089]);
  %4816 = slice_like(%4815, meta[relay.Constant][1089], axes=None);
  %4817 = add(meta[relay.Constant][1089], %4816);
  %4818 = where(meta[relay.Constant][1088], %4817, meta[relay.Constant][1089]);
  %4819 = greater_equal(%4818, %4816);
  %4820 = where(%4819, %4816, %4818);
  %4821 = %4812.1;
  %4822 = dyn.strided_slice(%4813, %4820, %4821, meta[relay.Constant][1090], begin=None, end=None, strides=None, axes=None);
  %4823 = take(%4822, meta[relay.Constant][1091], axis=1);
  %4824 = squeeze(%4823, axis=[1]);
  %4825 = cast(%4824, dtype="int64");
  %4826 = shape_of(%4801, dtype="int64");
  %4827 = take(%4826, 0);
  %4828 = less(%4825, 0);
  %4829 = add(%4825, %4827);
  %4830 = where(%4828, %4829, %4825);
  %4831 = shape_of(%1687, dtype="int32");
  %4832 = cast_like(%4831, meta[relay.Constant][1093]);
  %4833 = slice_like(%4832, meta[relay.Constant][1093], axes=None);
  %4834 = add(meta[relay.Constant][1093], %4833);
  %4835 = where(meta[relay.Constant][1092], %4834, meta[relay.Constant][1093]);
  %4836 = greater_equal(%4835, %4833);
  %4837 = shape_of(%1687, dtype="int64");
  %4838 = where(%4836, %4833, %4835);
  %4839 = scatter(%4837, meta[relay.Constant][1094], meta[relay.Constant][1095]);
  %4840 = shape_of(%1703, dtype="int32");
  %4841 = cast_like(%4840, meta[relay.Constant][1098]);
  %4842 = slice_like(%4841, meta[relay.Constant][1098], axes=None);
  %4843 = add(meta[relay.Constant][1098], %4842);
  %4844 = where(meta[relay.Constant][1097], %4843, meta[relay.Constant][1098]);
  %4845 = greater_equal(%4844, %4842);
  %4846 = shape_of(%1703, dtype="int64");
  %4847 = where(%4845, %4842, %4844);
  %4848 = scatter(%4846, meta[relay.Constant][1099], meta[relay.Constant][1100]);
  %4849 = dyn.strided_slice(%1703, %4847, %4848, meta[relay.Constant][1101], begin=None, end=None, strides=None, axes=None);
  %4850 = take(%4849, 50, axis=1);
  %4851 = cast(%4850, dtype="float32");
  %4852 = argwhere(%4851);
  %4853 = cast(%4852, dtype="int64");
  %4854 = transpose(%4853, axes=[1, 0]);
  %4855 = transpose(%4854, axes=[1, 0]);
  %4856 = squeeze(%4855, axis=[1]);
  %4857 = cast(%4856, dtype="int64");
  %4858 = cast(%4857, dtype="int64");
  %4859 = dyn.strided_slice(%1687, %4838, %4839, meta[relay.Constant][1096], begin=None, end=None, strides=None, axes=None);
  %4860 = shape_of(%4859, dtype="int64");
  %4861 = take(%4860, 0);
  %4862 = less(%4858, 0);
  %4863 = add(%4858, %4861);
  %4864 = where(%4862, %4863, %4858);
  %4865 = take(%4859, %4864, axis=0);
  %4866 = take(%1701, 50, axis=1);
  %4867 = shape_of(%4866, dtype="int64");
  %4868 = take(%4867, 0);
  %4869 = less(%4857, 0);
  %4870 = add(%4857, %4868);
  %4871 = where(%4869, %4870, %4857);
  %4872 = take(%4866, %4871, axis=0);
  %4873 = expand_dims(%4872, axis=0);
  %4874 = expand_dims(%4865, axis=0);
  %4875 = expand_dims(%4873, axis=0);
  %4876 = vision.all_class_non_max_suppression(%4874, %4875, 2000, 0.5f, 0f);
  %4877 = %4876.0;
  %4878 = shape_of(%4877, dtype="int32");
  %4879 = cast_like(%4878, meta[relay.Constant][1103]);
  %4880 = slice_like(%4879, meta[relay.Constant][1103], axes=None);
  %4881 = add(meta[relay.Constant][1103], %4880);
  %4882 = where(meta[relay.Constant][1102], %4881, meta[relay.Constant][1103]);
  %4883 = greater_equal(%4882, %4880);
  %4884 = where(%4883, %4880, %4882);
  %4885 = %4876.1;
  %4886 = dyn.strided_slice(%4877, %4884, %4885, meta[relay.Constant][1104], begin=None, end=None, strides=None, axes=None);
  %4887 = take(%4886, meta[relay.Constant][1105], axis=1);
  %4888 = squeeze(%4887, axis=[1]);
  %4889 = cast(%4888, dtype="int64");
  %4890 = shape_of(%4865, dtype="int64");
  %4891 = take(%4890, 0);
  %4892 = less(%4889, 0);
  %4893 = add(%4889, %4891);
  %4894 = where(%4892, %4893, %4889);
  %4895 = shape_of(%1687, dtype="int32");
  %4896 = cast_like(%4895, meta[relay.Constant][1107]);
  %4897 = slice_like(%4896, meta[relay.Constant][1107], axes=None);
  %4898 = add(meta[relay.Constant][1107], %4897);
  %4899 = where(meta[relay.Constant][1106], %4898, meta[relay.Constant][1107]);
  %4900 = greater_equal(%4899, %4897);
  %4901 = shape_of(%1687, dtype="int64");
  %4902 = where(%4900, %4897, %4899);
  %4903 = scatter(%4901, meta[relay.Constant][1108], meta[relay.Constant][1109]);
  %4904 = shape_of(%1703, dtype="int32");
  %4905 = cast_like(%4904, meta[relay.Constant][1112]);
  %4906 = slice_like(%4905, meta[relay.Constant][1112], axes=None);
  %4907 = add(meta[relay.Constant][1112], %4906);
  %4908 = where(meta[relay.Constant][1111], %4907, meta[relay.Constant][1112]);
  %4909 = greater_equal(%4908, %4906);
  %4910 = shape_of(%1703, dtype="int64");
  %4911 = where(%4909, %4906, %4908);
  %4912 = scatter(%4910, meta[relay.Constant][1113], meta[relay.Constant][1114]);
  %4913 = dyn.strided_slice(%1703, %4911, %4912, meta[relay.Constant][1115], begin=None, end=None, strides=None, axes=None);
  %4914 = take(%4913, 51, axis=1);
  %4915 = cast(%4914, dtype="float32");
  %4916 = argwhere(%4915);
  %4917 = cast(%4916, dtype="int64");
  %4918 = transpose(%4917, axes=[1, 0]);
  %4919 = transpose(%4918, axes=[1, 0]);
  %4920 = squeeze(%4919, axis=[1]);
  %4921 = cast(%4920, dtype="int64");
  %4922 = cast(%4921, dtype="int64");
  %4923 = dyn.strided_slice(%1687, %4902, %4903, meta[relay.Constant][1110], begin=None, end=None, strides=None, axes=None);
  %4924 = shape_of(%4923, dtype="int64");
  %4925 = take(%4924, 0);
  %4926 = less(%4922, 0);
  %4927 = add(%4922, %4925);
  %4928 = where(%4926, %4927, %4922);
  %4929 = take(%4923, %4928, axis=0);
  %4930 = take(%1701, 51, axis=1);
  %4931 = shape_of(%4930, dtype="int64");
  %4932 = take(%4931, 0);
  %4933 = less(%4921, 0);
  %4934 = add(%4921, %4932);
  %4935 = where(%4933, %4934, %4921);
  %4936 = take(%4930, %4935, axis=0);
  %4937 = expand_dims(%4936, axis=0);
  %4938 = expand_dims(%4929, axis=0);
  %4939 = expand_dims(%4937, axis=0);
  %4940 = vision.all_class_non_max_suppression(%4938, %4939, 2000, 0.5f, 0f);
  %4941 = %4940.0;
  %4942 = shape_of(%4941, dtype="int32");
  %4943 = cast_like(%4942, meta[relay.Constant][1117]);
  %4944 = slice_like(%4943, meta[relay.Constant][1117], axes=None);
  %4945 = add(meta[relay.Constant][1117], %4944);
  %4946 = where(meta[relay.Constant][1116], %4945, meta[relay.Constant][1117]);
  %4947 = greater_equal(%4946, %4944);
  %4948 = where(%4947, %4944, %4946);
  %4949 = %4940.1;
  %4950 = dyn.strided_slice(%4941, %4948, %4949, meta[relay.Constant][1118], begin=None, end=None, strides=None, axes=None);
  %4951 = take(%4950, meta[relay.Constant][1119], axis=1);
  %4952 = squeeze(%4951, axis=[1]);
  %4953 = cast(%4952, dtype="int64");
  %4954 = shape_of(%4929, dtype="int64");
  %4955 = take(%4954, 0);
  %4956 = less(%4953, 0);
  %4957 = add(%4953, %4955);
  %4958 = where(%4956, %4957, %4953);
  %4959 = shape_of(%1687, dtype="int32");
  %4960 = cast_like(%4959, meta[relay.Constant][1121]);
  %4961 = slice_like(%4960, meta[relay.Constant][1121], axes=None);
  %4962 = add(meta[relay.Constant][1121], %4961);
  %4963 = where(meta[relay.Constant][1120], %4962, meta[relay.Constant][1121]);
  %4964 = greater_equal(%4963, %4961);
  %4965 = shape_of(%1687, dtype="int64");
  %4966 = where(%4964, %4961, %4963);
  %4967 = scatter(%4965, meta[relay.Constant][1122], meta[relay.Constant][1123]);
  %4968 = shape_of(%1703, dtype="int32");
  %4969 = cast_like(%4968, meta[relay.Constant][1126]);
  %4970 = slice_like(%4969, meta[relay.Constant][1126], axes=None);
  %4971 = add(meta[relay.Constant][1126], %4970);
  %4972 = where(meta[relay.Constant][1125], %4971, meta[relay.Constant][1126]);
  %4973 = greater_equal(%4972, %4970);
  %4974 = shape_of(%1703, dtype="int64");
  %4975 = where(%4973, %4970, %4972);
  %4976 = scatter(%4974, meta[relay.Constant][1127], meta[relay.Constant][1128]);
  %4977 = dyn.strided_slice(%1703, %4975, %4976, meta[relay.Constant][1129], begin=None, end=None, strides=None, axes=None);
  %4978 = take(%4977, 52, axis=1);
  %4979 = cast(%4978, dtype="float32");
  %4980 = argwhere(%4979);
  %4981 = cast(%4980, dtype="int64");
  %4982 = transpose(%4981, axes=[1, 0]);
  %4983 = transpose(%4982, axes=[1, 0]);
  %4984 = squeeze(%4983, axis=[1]);
  %4985 = cast(%4984, dtype="int64");
  %4986 = cast(%4985, dtype="int64");
  %4987 = dyn.strided_slice(%1687, %4966, %4967, meta[relay.Constant][1124], begin=None, end=None, strides=None, axes=None);
  %4988 = shape_of(%4987, dtype="int64");
  %4989 = take(%4988, 0);
  %4990 = less(%4986, 0);
  %4991 = add(%4986, %4989);
  %4992 = where(%4990, %4991, %4986);
  %4993 = take(%4987, %4992, axis=0);
  %4994 = take(%1701, 52, axis=1);
  %4995 = shape_of(%4994, dtype="int64");
  %4996 = take(%4995, 0);
  %4997 = less(%4985, 0);
  %4998 = add(%4985, %4996);
  %4999 = where(%4997, %4998, %4985);
  %5000 = take(%4994, %4999, axis=0);
  %5001 = expand_dims(%5000, axis=0);
  %5002 = expand_dims(%4993, axis=0);
  %5003 = expand_dims(%5001, axis=0);
  %5004 = vision.all_class_non_max_suppression(%5002, %5003, 2000, 0.5f, 0f);
  %5005 = %5004.0;
  %5006 = shape_of(%5005, dtype="int32");
  %5007 = cast_like(%5006, meta[relay.Constant][1131]);
  %5008 = slice_like(%5007, meta[relay.Constant][1131], axes=None);
  %5009 = add(meta[relay.Constant][1131], %5008);
  %5010 = where(meta[relay.Constant][1130], %5009, meta[relay.Constant][1131]);
  %5011 = greater_equal(%5010, %5008);
  %5012 = where(%5011, %5008, %5010);
  %5013 = %5004.1;
  %5014 = dyn.strided_slice(%5005, %5012, %5013, meta[relay.Constant][1132], begin=None, end=None, strides=None, axes=None);
  %5015 = take(%5014, meta[relay.Constant][1133], axis=1);
  %5016 = squeeze(%5015, axis=[1]);
  %5017 = cast(%5016, dtype="int64");
  %5018 = shape_of(%4993, dtype="int64");
  %5019 = take(%5018, 0);
  %5020 = less(%5017, 0);
  %5021 = add(%5017, %5019);
  %5022 = where(%5020, %5021, %5017);
  %5023 = shape_of(%1687, dtype="int32");
  %5024 = cast_like(%5023, meta[relay.Constant][1135]);
  %5025 = slice_like(%5024, meta[relay.Constant][1135], axes=None);
  %5026 = add(meta[relay.Constant][1135], %5025);
  %5027 = where(meta[relay.Constant][1134], %5026, meta[relay.Constant][1135]);
  %5028 = greater_equal(%5027, %5025);
  %5029 = shape_of(%1687, dtype="int64");
  %5030 = where(%5028, %5025, %5027);
  %5031 = scatter(%5029, meta[relay.Constant][1136], meta[relay.Constant][1137]);
  %5032 = shape_of(%1703, dtype="int32");
  %5033 = cast_like(%5032, meta[relay.Constant][1140]);
  %5034 = slice_like(%5033, meta[relay.Constant][1140], axes=None);
  %5035 = add(meta[relay.Constant][1140], %5034);
  %5036 = where(meta[relay.Constant][1139], %5035, meta[relay.Constant][1140]);
  %5037 = greater_equal(%5036, %5034);
  %5038 = shape_of(%1703, dtype="int64");
  %5039 = where(%5037, %5034, %5036);
  %5040 = scatter(%5038, meta[relay.Constant][1141], meta[relay.Constant][1142]);
  %5041 = dyn.strided_slice(%1703, %5039, %5040, meta[relay.Constant][1143], begin=None, end=None, strides=None, axes=None);
  %5042 = take(%5041, 53, axis=1);
  %5043 = cast(%5042, dtype="float32");
  %5044 = argwhere(%5043);
  %5045 = cast(%5044, dtype="int64");
  %5046 = transpose(%5045, axes=[1, 0]);
  %5047 = transpose(%5046, axes=[1, 0]);
  %5048 = squeeze(%5047, axis=[1]);
  %5049 = cast(%5048, dtype="int64");
  %5050 = cast(%5049, dtype="int64");
  %5051 = dyn.strided_slice(%1687, %5030, %5031, meta[relay.Constant][1138], begin=None, end=None, strides=None, axes=None);
  %5052 = shape_of(%5051, dtype="int64");
  %5053 = take(%5052, 0);
  %5054 = less(%5050, 0);
  %5055 = add(%5050, %5053);
  %5056 = where(%5054, %5055, %5050);
  %5057 = take(%5051, %5056, axis=0);
  %5058 = take(%1701, 53, axis=1);
  %5059 = shape_of(%5058, dtype="int64");
  %5060 = take(%5059, 0);
  %5061 = less(%5049, 0);
  %5062 = add(%5049, %5060);
  %5063 = where(%5061, %5062, %5049);
  %5064 = take(%5058, %5063, axis=0);
  %5065 = expand_dims(%5064, axis=0);
  %5066 = expand_dims(%5057, axis=0);
  %5067 = expand_dims(%5065, axis=0);
  %5068 = vision.all_class_non_max_suppression(%5066, %5067, 2000, 0.5f, 0f);
  %5069 = %5068.0;
  %5070 = shape_of(%5069, dtype="int32");
  %5071 = cast_like(%5070, meta[relay.Constant][1145]);
  %5072 = slice_like(%5071, meta[relay.Constant][1145], axes=None);
  %5073 = add(meta[relay.Constant][1145], %5072);
  %5074 = where(meta[relay.Constant][1144], %5073, meta[relay.Constant][1145]);
  %5075 = greater_equal(%5074, %5072);
  %5076 = where(%5075, %5072, %5074);
  %5077 = %5068.1;
  %5078 = dyn.strided_slice(%5069, %5076, %5077, meta[relay.Constant][1146], begin=None, end=None, strides=None, axes=None);
  %5079 = take(%5078, meta[relay.Constant][1147], axis=1);
  %5080 = squeeze(%5079, axis=[1]);
  %5081 = cast(%5080, dtype="int64");
  %5082 = shape_of(%5057, dtype="int64");
  %5083 = take(%5082, 0);
  %5084 = less(%5081, 0);
  %5085 = add(%5081, %5083);
  %5086 = where(%5084, %5085, %5081);
  %5087 = shape_of(%1687, dtype="int32");
  %5088 = cast_like(%5087, meta[relay.Constant][1149]);
  %5089 = slice_like(%5088, meta[relay.Constant][1149], axes=None);
  %5090 = add(meta[relay.Constant][1149], %5089);
  %5091 = where(meta[relay.Constant][1148], %5090, meta[relay.Constant][1149]);
  %5092 = greater_equal(%5091, %5089);
  %5093 = shape_of(%1687, dtype="int64");
  %5094 = where(%5092, %5089, %5091);
  %5095 = scatter(%5093, meta[relay.Constant][1150], meta[relay.Constant][1151]);
  %5096 = shape_of(%1703, dtype="int32");
  %5097 = cast_like(%5096, meta[relay.Constant][1154]);
  %5098 = slice_like(%5097, meta[relay.Constant][1154], axes=None);
  %5099 = add(meta[relay.Constant][1154], %5098);
  %5100 = where(meta[relay.Constant][1153], %5099, meta[relay.Constant][1154]);
  %5101 = greater_equal(%5100, %5098);
  %5102 = shape_of(%1703, dtype="int64");
  %5103 = where(%5101, %5098, %5100);
  %5104 = scatter(%5102, meta[relay.Constant][1155], meta[relay.Constant][1156]);
  %5105 = dyn.strided_slice(%1703, %5103, %5104, meta[relay.Constant][1157], begin=None, end=None, strides=None, axes=None);
  %5106 = take(%5105, 54, axis=1);
  %5107 = cast(%5106, dtype="float32");
  %5108 = argwhere(%5107);
  %5109 = cast(%5108, dtype="int64");
  %5110 = transpose(%5109, axes=[1, 0]);
  %5111 = transpose(%5110, axes=[1, 0]);
  %5112 = squeeze(%5111, axis=[1]);
  %5113 = cast(%5112, dtype="int64");
  %5114 = cast(%5113, dtype="int64");
  %5115 = dyn.strided_slice(%1687, %5094, %5095, meta[relay.Constant][1152], begin=None, end=None, strides=None, axes=None);
  %5116 = shape_of(%5115, dtype="int64");
  %5117 = take(%5116, 0);
  %5118 = less(%5114, 0);
  %5119 = add(%5114, %5117);
  %5120 = where(%5118, %5119, %5114);
  %5121 = take(%5115, %5120, axis=0);
  %5122 = take(%1701, 54, axis=1);
  %5123 = shape_of(%5122, dtype="int64");
  %5124 = take(%5123, 0);
  %5125 = less(%5113, 0);
  %5126 = add(%5113, %5124);
  %5127 = where(%5125, %5126, %5113);
  %5128 = take(%5122, %5127, axis=0);
  %5129 = expand_dims(%5128, axis=0);
  %5130 = expand_dims(%5121, axis=0);
  %5131 = expand_dims(%5129, axis=0);
  %5132 = vision.all_class_non_max_suppression(%5130, %5131, 2000, 0.5f, 0f);
  %5133 = %5132.0;
  %5134 = shape_of(%5133, dtype="int32");
  %5135 = cast_like(%5134, meta[relay.Constant][1159]);
  %5136 = slice_like(%5135, meta[relay.Constant][1159], axes=None);
  %5137 = add(meta[relay.Constant][1159], %5136);
  %5138 = where(meta[relay.Constant][1158], %5137, meta[relay.Constant][1159]);
  %5139 = greater_equal(%5138, %5136);
  %5140 = where(%5139, %5136, %5138);
  %5141 = %5132.1;
  %5142 = dyn.strided_slice(%5133, %5140, %5141, meta[relay.Constant][1160], begin=None, end=None, strides=None, axes=None);
  %5143 = take(%5142, meta[relay.Constant][1161], axis=1);
  %5144 = squeeze(%5143, axis=[1]);
  %5145 = cast(%5144, dtype="int64");
  %5146 = shape_of(%5121, dtype="int64");
  %5147 = take(%5146, 0);
  %5148 = less(%5145, 0);
  %5149 = add(%5145, %5147);
  %5150 = where(%5148, %5149, %5145);
  %5151 = shape_of(%1687, dtype="int32");
  %5152 = cast_like(%5151, meta[relay.Constant][1163]);
  %5153 = slice_like(%5152, meta[relay.Constant][1163], axes=None);
  %5154 = add(meta[relay.Constant][1163], %5153);
  %5155 = where(meta[relay.Constant][1162], %5154, meta[relay.Constant][1163]);
  %5156 = greater_equal(%5155, %5153);
  %5157 = shape_of(%1687, dtype="int64");
  %5158 = where(%5156, %5153, %5155);
  %5159 = scatter(%5157, meta[relay.Constant][1164], meta[relay.Constant][1165]);
  %5160 = shape_of(%1703, dtype="int32");
  %5161 = cast_like(%5160, meta[relay.Constant][1168]);
  %5162 = slice_like(%5161, meta[relay.Constant][1168], axes=None);
  %5163 = add(meta[relay.Constant][1168], %5162);
  %5164 = where(meta[relay.Constant][1167], %5163, meta[relay.Constant][1168]);
  %5165 = greater_equal(%5164, %5162);
  %5166 = shape_of(%1703, dtype="int64");
  %5167 = where(%5165, %5162, %5164);
  %5168 = scatter(%5166, meta[relay.Constant][1169], meta[relay.Constant][1170]);
  %5169 = dyn.strided_slice(%1703, %5167, %5168, meta[relay.Constant][1171], begin=None, end=None, strides=None, axes=None);
  %5170 = take(%5169, 55, axis=1);
  %5171 = cast(%5170, dtype="float32");
  %5172 = argwhere(%5171);
  %5173 = cast(%5172, dtype="int64");
  %5174 = transpose(%5173, axes=[1, 0]);
  %5175 = transpose(%5174, axes=[1, 0]);
  %5176 = squeeze(%5175, axis=[1]);
  %5177 = cast(%5176, dtype="int64");
  %5178 = cast(%5177, dtype="int64");
  %5179 = dyn.strided_slice(%1687, %5158, %5159, meta[relay.Constant][1166], begin=None, end=None, strides=None, axes=None);
  %5180 = shape_of(%5179, dtype="int64");
  %5181 = take(%5180, 0);
  %5182 = less(%5178, 0);
  %5183 = add(%5178, %5181);
  %5184 = where(%5182, %5183, %5178);
  %5185 = take(%5179, %5184, axis=0);
  %5186 = take(%1701, 55, axis=1);
  %5187 = shape_of(%5186, dtype="int64");
  %5188 = take(%5187, 0);
  %5189 = less(%5177, 0);
  %5190 = add(%5177, %5188);
  %5191 = where(%5189, %5190, %5177);
  %5192 = take(%5186, %5191, axis=0);
  %5193 = expand_dims(%5192, axis=0);
  %5194 = expand_dims(%5185, axis=0);
  %5195 = expand_dims(%5193, axis=0);
  %5196 = vision.all_class_non_max_suppression(%5194, %5195, 2000, 0.5f, 0f);
  %5197 = %5196.0;
  %5198 = shape_of(%5197, dtype="int32");
  %5199 = cast_like(%5198, meta[relay.Constant][1173]);
  %5200 = slice_like(%5199, meta[relay.Constant][1173], axes=None);
  %5201 = add(meta[relay.Constant][1173], %5200);
  %5202 = where(meta[relay.Constant][1172], %5201, meta[relay.Constant][1173]);
  %5203 = greater_equal(%5202, %5200);
  %5204 = where(%5203, %5200, %5202);
  %5205 = %5196.1;
  %5206 = dyn.strided_slice(%5197, %5204, %5205, meta[relay.Constant][1174], begin=None, end=None, strides=None, axes=None);
  %5207 = take(%5206, meta[relay.Constant][1175], axis=1);
  %5208 = squeeze(%5207, axis=[1]);
  %5209 = cast(%5208, dtype="int64");
  %5210 = shape_of(%5185, dtype="int64");
  %5211 = take(%5210, 0);
  %5212 = less(%5209, 0);
  %5213 = add(%5209, %5211);
  %5214 = where(%5212, %5213, %5209);
  %5215 = shape_of(%1687, dtype="int32");
  %5216 = cast_like(%5215, meta[relay.Constant][1177]);
  %5217 = slice_like(%5216, meta[relay.Constant][1177], axes=None);
  %5218 = add(meta[relay.Constant][1177], %5217);
  %5219 = where(meta[relay.Constant][1176], %5218, meta[relay.Constant][1177]);
  %5220 = greater_equal(%5219, %5217);
  %5221 = shape_of(%1687, dtype="int64");
  %5222 = where(%5220, %5217, %5219);
  %5223 = scatter(%5221, meta[relay.Constant][1178], meta[relay.Constant][1179]);
  %5224 = shape_of(%1703, dtype="int32");
  %5225 = cast_like(%5224, meta[relay.Constant][1182]);
  %5226 = slice_like(%5225, meta[relay.Constant][1182], axes=None);
  %5227 = add(meta[relay.Constant][1182], %5226);
  %5228 = where(meta[relay.Constant][1181], %5227, meta[relay.Constant][1182]);
  %5229 = greater_equal(%5228, %5226);
  %5230 = shape_of(%1703, dtype="int64");
  %5231 = where(%5229, %5226, %5228);
  %5232 = scatter(%5230, meta[relay.Constant][1183], meta[relay.Constant][1184]);
  %5233 = dyn.strided_slice(%1703, %5231, %5232, meta[relay.Constant][1185], begin=None, end=None, strides=None, axes=None);
  %5234 = take(%5233, 56, axis=1);
  %5235 = cast(%5234, dtype="float32");
  %5236 = argwhere(%5235);
  %5237 = cast(%5236, dtype="int64");
  %5238 = transpose(%5237, axes=[1, 0]);
  %5239 = transpose(%5238, axes=[1, 0]);
  %5240 = squeeze(%5239, axis=[1]);
  %5241 = cast(%5240, dtype="int64");
  %5242 = cast(%5241, dtype="int64");
  %5243 = dyn.strided_slice(%1687, %5222, %5223, meta[relay.Constant][1180], begin=None, end=None, strides=None, axes=None);
  %5244 = shape_of(%5243, dtype="int64");
  %5245 = take(%5244, 0);
  %5246 = less(%5242, 0);
  %5247 = add(%5242, %5245);
  %5248 = where(%5246, %5247, %5242);
  %5249 = take(%5243, %5248, axis=0);
  %5250 = take(%1701, 56, axis=1);
  %5251 = shape_of(%5250, dtype="int64");
  %5252 = take(%5251, 0);
  %5253 = less(%5241, 0);
  %5254 = add(%5241, %5252);
  %5255 = where(%5253, %5254, %5241);
  %5256 = take(%5250, %5255, axis=0);
  %5257 = expand_dims(%5256, axis=0);
  %5258 = expand_dims(%5249, axis=0);
  %5259 = expand_dims(%5257, axis=0);
  %5260 = vision.all_class_non_max_suppression(%5258, %5259, 2000, 0.5f, 0f);
  %5261 = %5260.0;
  %5262 = shape_of(%5261, dtype="int32");
  %5263 = cast_like(%5262, meta[relay.Constant][1187]);
  %5264 = slice_like(%5263, meta[relay.Constant][1187], axes=None);
  %5265 = add(meta[relay.Constant][1187], %5264);
  %5266 = where(meta[relay.Constant][1186], %5265, meta[relay.Constant][1187]);
  %5267 = greater_equal(%5266, %5264);
  %5268 = where(%5267, %5264, %5266);
  %5269 = %5260.1;
  %5270 = dyn.strided_slice(%5261, %5268, %5269, meta[relay.Constant][1188], begin=None, end=None, strides=None, axes=None);
  %5271 = take(%5270, meta[relay.Constant][1189], axis=1);
  %5272 = squeeze(%5271, axis=[1]);
  %5273 = cast(%5272, dtype="int64");
  %5274 = shape_of(%5249, dtype="int64");
  %5275 = take(%5274, 0);
  %5276 = less(%5273, 0);
  %5277 = add(%5273, %5275);
  %5278 = where(%5276, %5277, %5273);
  %5279 = shape_of(%1687, dtype="int32");
  %5280 = cast_like(%5279, meta[relay.Constant][1191]);
  %5281 = slice_like(%5280, meta[relay.Constant][1191], axes=None);
  %5282 = add(meta[relay.Constant][1191], %5281);
  %5283 = where(meta[relay.Constant][1190], %5282, meta[relay.Constant][1191]);
  %5284 = greater_equal(%5283, %5281);
  %5285 = shape_of(%1687, dtype="int64");
  %5286 = where(%5284, %5281, %5283);
  %5287 = scatter(%5285, meta[relay.Constant][1192], meta[relay.Constant][1193]);
  %5288 = shape_of(%1703, dtype="int32");
  %5289 = cast_like(%5288, meta[relay.Constant][1196]);
  %5290 = slice_like(%5289, meta[relay.Constant][1196], axes=None);
  %5291 = add(meta[relay.Constant][1196], %5290);
  %5292 = where(meta[relay.Constant][1195], %5291, meta[relay.Constant][1196]);
  %5293 = greater_equal(%5292, %5290);
  %5294 = shape_of(%1703, dtype="int64");
  %5295 = where(%5293, %5290, %5292);
  %5296 = scatter(%5294, meta[relay.Constant][1197], meta[relay.Constant][1198]);
  %5297 = dyn.strided_slice(%1703, %5295, %5296, meta[relay.Constant][1199], begin=None, end=None, strides=None, axes=None);
  %5298 = take(%5297, 57, axis=1);
  %5299 = cast(%5298, dtype="float32");
  %5300 = argwhere(%5299);
  %5301 = cast(%5300, dtype="int64");
  %5302 = transpose(%5301, axes=[1, 0]);
  %5303 = transpose(%5302, axes=[1, 0]);
  %5304 = squeeze(%5303, axis=[1]);
  %5305 = cast(%5304, dtype="int64");
  %5306 = cast(%5305, dtype="int64");
  %5307 = dyn.strided_slice(%1687, %5286, %5287, meta[relay.Constant][1194], begin=None, end=None, strides=None, axes=None);
  %5308 = shape_of(%5307, dtype="int64");
  %5309 = take(%5308, 0);
  %5310 = less(%5306, 0);
  %5311 = add(%5306, %5309);
  %5312 = where(%5310, %5311, %5306);
  %5313 = take(%5307, %5312, axis=0);
  %5314 = take(%1701, 57, axis=1);
  %5315 = shape_of(%5314, dtype="int64");
  %5316 = take(%5315, 0);
  %5317 = less(%5305, 0);
  %5318 = add(%5305, %5316);
  %5319 = where(%5317, %5318, %5305);
  %5320 = take(%5314, %5319, axis=0);
  %5321 = expand_dims(%5320, axis=0);
  %5322 = expand_dims(%5313, axis=0);
  %5323 = expand_dims(%5321, axis=0);
  %5324 = vision.all_class_non_max_suppression(%5322, %5323, 2000, 0.5f, 0f);
  %5325 = %5324.0;
  %5326 = shape_of(%5325, dtype="int32");
  %5327 = cast_like(%5326, meta[relay.Constant][1201]);
  %5328 = slice_like(%5327, meta[relay.Constant][1201], axes=None);
  %5329 = add(meta[relay.Constant][1201], %5328);
  %5330 = where(meta[relay.Constant][1200], %5329, meta[relay.Constant][1201]);
  %5331 = greater_equal(%5330, %5328);
  %5332 = where(%5331, %5328, %5330);
  %5333 = %5324.1;
  %5334 = dyn.strided_slice(%5325, %5332, %5333, meta[relay.Constant][1202], begin=None, end=None, strides=None, axes=None);
  %5335 = take(%5334, meta[relay.Constant][1203], axis=1);
  %5336 = squeeze(%5335, axis=[1]);
  %5337 = cast(%5336, dtype="int64");
  %5338 = shape_of(%5313, dtype="int64");
  %5339 = take(%5338, 0);
  %5340 = less(%5337, 0);
  %5341 = add(%5337, %5339);
  %5342 = where(%5340, %5341, %5337);
  %5343 = shape_of(%1687, dtype="int32");
  %5344 = cast_like(%5343, meta[relay.Constant][1205]);
  %5345 = slice_like(%5344, meta[relay.Constant][1205], axes=None);
  %5346 = add(meta[relay.Constant][1205], %5345);
  %5347 = where(meta[relay.Constant][1204], %5346, meta[relay.Constant][1205]);
  %5348 = greater_equal(%5347, %5345);
  %5349 = shape_of(%1687, dtype="int64");
  %5350 = where(%5348, %5345, %5347);
  %5351 = scatter(%5349, meta[relay.Constant][1206], meta[relay.Constant][1207]);
  %5352 = shape_of(%1703, dtype="int32");
  %5353 = cast_like(%5352, meta[relay.Constant][1210]);
  %5354 = slice_like(%5353, meta[relay.Constant][1210], axes=None);
  %5355 = add(meta[relay.Constant][1210], %5354);
  %5356 = where(meta[relay.Constant][1209], %5355, meta[relay.Constant][1210]);
  %5357 = greater_equal(%5356, %5354);
  %5358 = shape_of(%1703, dtype="int64");
  %5359 = where(%5357, %5354, %5356);
  %5360 = scatter(%5358, meta[relay.Constant][1211], meta[relay.Constant][1212]);
  %5361 = dyn.strided_slice(%1703, %5359, %5360, meta[relay.Constant][1213], begin=None, end=None, strides=None, axes=None);
  %5362 = take(%5361, 58, axis=1);
  %5363 = cast(%5362, dtype="float32");
  %5364 = argwhere(%5363);
  %5365 = cast(%5364, dtype="int64");
  %5366 = transpose(%5365, axes=[1, 0]);
  %5367 = transpose(%5366, axes=[1, 0]);
  %5368 = squeeze(%5367, axis=[1]);
  %5369 = cast(%5368, dtype="int64");
  %5370 = cast(%5369, dtype="int64");
  %5371 = dyn.strided_slice(%1687, %5350, %5351, meta[relay.Constant][1208], begin=None, end=None, strides=None, axes=None);
  %5372 = shape_of(%5371, dtype="int64");
  %5373 = take(%5372, 0);
  %5374 = less(%5370, 0);
  %5375 = add(%5370, %5373);
  %5376 = where(%5374, %5375, %5370);
  %5377 = take(%5371, %5376, axis=0);
  %5378 = take(%1701, 58, axis=1);
  %5379 = shape_of(%5378, dtype="int64");
  %5380 = take(%5379, 0);
  %5381 = less(%5369, 0);
  %5382 = add(%5369, %5380);
  %5383 = where(%5381, %5382, %5369);
  %5384 = take(%5378, %5383, axis=0);
  %5385 = expand_dims(%5384, axis=0);
  %5386 = expand_dims(%5377, axis=0);
  %5387 = expand_dims(%5385, axis=0);
  %5388 = vision.all_class_non_max_suppression(%5386, %5387, 2000, 0.5f, 0f);
  %5389 = %5388.0;
  %5390 = shape_of(%5389, dtype="int32");
  %5391 = cast_like(%5390, meta[relay.Constant][1215]);
  %5392 = slice_like(%5391, meta[relay.Constant][1215], axes=None);
  %5393 = add(meta[relay.Constant][1215], %5392);
  %5394 = where(meta[relay.Constant][1214], %5393, meta[relay.Constant][1215]);
  %5395 = greater_equal(%5394, %5392);
  %5396 = where(%5395, %5392, %5394);
  %5397 = %5388.1;
  %5398 = dyn.strided_slice(%5389, %5396, %5397, meta[relay.Constant][1216], begin=None, end=None, strides=None, axes=None);
  %5399 = take(%5398, meta[relay.Constant][1217], axis=1);
  %5400 = squeeze(%5399, axis=[1]);
  %5401 = cast(%5400, dtype="int64");
  %5402 = shape_of(%5377, dtype="int64");
  %5403 = take(%5402, 0);
  %5404 = less(%5401, 0);
  %5405 = add(%5401, %5403);
  %5406 = where(%5404, %5405, %5401);
  %5407 = shape_of(%1687, dtype="int32");
  %5408 = cast_like(%5407, meta[relay.Constant][1219]);
  %5409 = slice_like(%5408, meta[relay.Constant][1219], axes=None);
  %5410 = add(meta[relay.Constant][1219], %5409);
  %5411 = where(meta[relay.Constant][1218], %5410, meta[relay.Constant][1219]);
  %5412 = greater_equal(%5411, %5409);
  %5413 = shape_of(%1687, dtype="int64");
  %5414 = where(%5412, %5409, %5411);
  %5415 = scatter(%5413, meta[relay.Constant][1220], meta[relay.Constant][1221]);
  %5416 = shape_of(%1703, dtype="int32");
  %5417 = cast_like(%5416, meta[relay.Constant][1224]);
  %5418 = slice_like(%5417, meta[relay.Constant][1224], axes=None);
  %5419 = add(meta[relay.Constant][1224], %5418);
  %5420 = where(meta[relay.Constant][1223], %5419, meta[relay.Constant][1224]);
  %5421 = greater_equal(%5420, %5418);
  %5422 = shape_of(%1703, dtype="int64");
  %5423 = where(%5421, %5418, %5420);
  %5424 = scatter(%5422, meta[relay.Constant][1225], meta[relay.Constant][1226]);
  %5425 = dyn.strided_slice(%1703, %5423, %5424, meta[relay.Constant][1227], begin=None, end=None, strides=None, axes=None);
  %5426 = take(%5425, 59, axis=1);
  %5427 = cast(%5426, dtype="float32");
  %5428 = argwhere(%5427);
  %5429 = cast(%5428, dtype="int64");
  %5430 = transpose(%5429, axes=[1, 0]);
  %5431 = transpose(%5430, axes=[1, 0]);
  %5432 = squeeze(%5431, axis=[1]);
  %5433 = cast(%5432, dtype="int64");
  %5434 = cast(%5433, dtype="int64");
  %5435 = dyn.strided_slice(%1687, %5414, %5415, meta[relay.Constant][1222], begin=None, end=None, strides=None, axes=None);
  %5436 = shape_of(%5435, dtype="int64");
  %5437 = take(%5436, 0);
  %5438 = less(%5434, 0);
  %5439 = add(%5434, %5437);
  %5440 = where(%5438, %5439, %5434);
  %5441 = take(%5435, %5440, axis=0);
  %5442 = take(%1701, 59, axis=1);
  %5443 = shape_of(%5442, dtype="int64");
  %5444 = take(%5443, 0);
  %5445 = less(%5433, 0);
  %5446 = add(%5433, %5444);
  %5447 = where(%5445, %5446, %5433);
  %5448 = take(%5442, %5447, axis=0);
  %5449 = expand_dims(%5448, axis=0);
  %5450 = expand_dims(%5441, axis=0);
  %5451 = expand_dims(%5449, axis=0);
  %5452 = vision.all_class_non_max_suppression(%5450, %5451, 2000, 0.5f, 0f);
  %5453 = %5452.0;
  %5454 = shape_of(%5453, dtype="int32");
  %5455 = cast_like(%5454, meta[relay.Constant][1229]);
  %5456 = slice_like(%5455, meta[relay.Constant][1229], axes=None);
  %5457 = add(meta[relay.Constant][1229], %5456);
  %5458 = where(meta[relay.Constant][1228], %5457, meta[relay.Constant][1229]);
  %5459 = greater_equal(%5458, %5456);
  %5460 = where(%5459, %5456, %5458);
  %5461 = %5452.1;
  %5462 = dyn.strided_slice(%5453, %5460, %5461, meta[relay.Constant][1230], begin=None, end=None, strides=None, axes=None);
  %5463 = take(%5462, meta[relay.Constant][1231], axis=1);
  %5464 = squeeze(%5463, axis=[1]);
  %5465 = cast(%5464, dtype="int64");
  %5466 = shape_of(%5441, dtype="int64");
  %5467 = take(%5466, 0);
  %5468 = less(%5465, 0);
  %5469 = add(%5465, %5467);
  %5470 = where(%5468, %5469, %5465);
  %5471 = shape_of(%1687, dtype="int32");
  %5472 = cast_like(%5471, meta[relay.Constant][1233]);
  %5473 = slice_like(%5472, meta[relay.Constant][1233], axes=None);
  %5474 = add(meta[relay.Constant][1233], %5473);
  %5475 = where(meta[relay.Constant][1232], %5474, meta[relay.Constant][1233]);
  %5476 = greater_equal(%5475, %5473);
  %5477 = shape_of(%1687, dtype="int64");
  %5478 = where(%5476, %5473, %5475);
  %5479 = scatter(%5477, meta[relay.Constant][1234], meta[relay.Constant][1235]);
  %5480 = shape_of(%1703, dtype="int32");
  %5481 = cast_like(%5480, meta[relay.Constant][1238]);
  %5482 = slice_like(%5481, meta[relay.Constant][1238], axes=None);
  %5483 = add(meta[relay.Constant][1238], %5482);
  %5484 = where(meta[relay.Constant][1237], %5483, meta[relay.Constant][1238]);
  %5485 = greater_equal(%5484, %5482);
  %5486 = shape_of(%1703, dtype="int64");
  %5487 = where(%5485, %5482, %5484);
  %5488 = scatter(%5486, meta[relay.Constant][1239], meta[relay.Constant][1240]);
  %5489 = dyn.strided_slice(%1703, %5487, %5488, meta[relay.Constant][1241], begin=None, end=None, strides=None, axes=None);
  %5490 = take(%5489, 60, axis=1);
  %5491 = cast(%5490, dtype="float32");
  %5492 = argwhere(%5491);
  %5493 = cast(%5492, dtype="int64");
  %5494 = transpose(%5493, axes=[1, 0]);
  %5495 = transpose(%5494, axes=[1, 0]);
  %5496 = squeeze(%5495, axis=[1]);
  %5497 = cast(%5496, dtype="int64");
  %5498 = cast(%5497, dtype="int64");
  %5499 = dyn.strided_slice(%1687, %5478, %5479, meta[relay.Constant][1236], begin=None, end=None, strides=None, axes=None);
  %5500 = shape_of(%5499, dtype="int64");
  %5501 = take(%5500, 0);
  %5502 = less(%5498, 0);
  %5503 = add(%5498, %5501);
  %5504 = where(%5502, %5503, %5498);
  %5505 = take(%5499, %5504, axis=0);
  %5506 = take(%1701, 60, axis=1);
  %5507 = shape_of(%5506, dtype="int64");
  %5508 = take(%5507, 0);
  %5509 = less(%5497, 0);
  %5510 = add(%5497, %5508);
  %5511 = where(%5509, %5510, %5497);
  %5512 = take(%5506, %5511, axis=0);
  %5513 = expand_dims(%5512, axis=0);
  %5514 = expand_dims(%5505, axis=0);
  %5515 = expand_dims(%5513, axis=0);
  %5516 = vision.all_class_non_max_suppression(%5514, %5515, 2000, 0.5f, 0f);
  %5517 = %5516.0;
  %5518 = shape_of(%5517, dtype="int32");
  %5519 = cast_like(%5518, meta[relay.Constant][1243]);
  %5520 = slice_like(%5519, meta[relay.Constant][1243], axes=None);
  %5521 = add(meta[relay.Constant][1243], %5520);
  %5522 = where(meta[relay.Constant][1242], %5521, meta[relay.Constant][1243]);
  %5523 = greater_equal(%5522, %5520);
  %5524 = where(%5523, %5520, %5522);
  %5525 = %5516.1;
  %5526 = dyn.strided_slice(%5517, %5524, %5525, meta[relay.Constant][1244], begin=None, end=None, strides=None, axes=None);
  %5527 = take(%5526, meta[relay.Constant][1245], axis=1);
  %5528 = squeeze(%5527, axis=[1]);
  %5529 = cast(%5528, dtype="int64");
  %5530 = shape_of(%5505, dtype="int64");
  %5531 = take(%5530, 0);
  %5532 = less(%5529, 0);
  %5533 = add(%5529, %5531);
  %5534 = where(%5532, %5533, %5529);
  %5535 = shape_of(%1687, dtype="int32");
  %5536 = cast_like(%5535, meta[relay.Constant][1247]);
  %5537 = slice_like(%5536, meta[relay.Constant][1247], axes=None);
  %5538 = add(meta[relay.Constant][1247], %5537);
  %5539 = where(meta[relay.Constant][1246], %5538, meta[relay.Constant][1247]);
  %5540 = greater_equal(%5539, %5537);
  %5541 = shape_of(%1687, dtype="int64");
  %5542 = where(%5540, %5537, %5539);
  %5543 = scatter(%5541, meta[relay.Constant][1248], meta[relay.Constant][1249]);
  %5544 = shape_of(%1703, dtype="int32");
  %5545 = cast_like(%5544, meta[relay.Constant][1252]);
  %5546 = slice_like(%5545, meta[relay.Constant][1252], axes=None);
  %5547 = add(meta[relay.Constant][1252], %5546);
  %5548 = where(meta[relay.Constant][1251], %5547, meta[relay.Constant][1252]);
  %5549 = greater_equal(%5548, %5546);
  %5550 = shape_of(%1703, dtype="int64");
  %5551 = where(%5549, %5546, %5548);
  %5552 = scatter(%5550, meta[relay.Constant][1253], meta[relay.Constant][1254]);
  %5553 = dyn.strided_slice(%1703, %5551, %5552, meta[relay.Constant][1255], begin=None, end=None, strides=None, axes=None);
  %5554 = take(%5553, 61, axis=1);
  %5555 = cast(%5554, dtype="float32");
  %5556 = argwhere(%5555);
  %5557 = cast(%5556, dtype="int64");
  %5558 = transpose(%5557, axes=[1, 0]);
  %5559 = transpose(%5558, axes=[1, 0]);
  %5560 = squeeze(%5559, axis=[1]);
  %5561 = cast(%5560, dtype="int64");
  %5562 = cast(%5561, dtype="int64");
  %5563 = dyn.strided_slice(%1687, %5542, %5543, meta[relay.Constant][1250], begin=None, end=None, strides=None, axes=None);
  %5564 = shape_of(%5563, dtype="int64");
  %5565 = take(%5564, 0);
  %5566 = less(%5562, 0);
  %5567 = add(%5562, %5565);
  %5568 = where(%5566, %5567, %5562);
  %5569 = take(%5563, %5568, axis=0);
  %5570 = take(%1701, 61, axis=1);
  %5571 = shape_of(%5570, dtype="int64");
  %5572 = take(%5571, 0);
  %5573 = less(%5561, 0);
  %5574 = add(%5561, %5572);
  %5575 = where(%5573, %5574, %5561);
  %5576 = take(%5570, %5575, axis=0);
  %5577 = expand_dims(%5576, axis=0);
  %5578 = expand_dims(%5569, axis=0);
  %5579 = expand_dims(%5577, axis=0);
  %5580 = vision.all_class_non_max_suppression(%5578, %5579, 2000, 0.5f, 0f);
  %5581 = %5580.0;
  %5582 = shape_of(%5581, dtype="int32");
  %5583 = cast_like(%5582, meta[relay.Constant][1257]);
  %5584 = slice_like(%5583, meta[relay.Constant][1257], axes=None);
  %5585 = add(meta[relay.Constant][1257], %5584);
  %5586 = where(meta[relay.Constant][1256], %5585, meta[relay.Constant][1257]);
  %5587 = greater_equal(%5586, %5584);
  %5588 = where(%5587, %5584, %5586);
  %5589 = %5580.1;
  %5590 = dyn.strided_slice(%5581, %5588, %5589, meta[relay.Constant][1258], begin=None, end=None, strides=None, axes=None);
  %5591 = take(%5590, meta[relay.Constant][1259], axis=1);
  %5592 = squeeze(%5591, axis=[1]);
  %5593 = cast(%5592, dtype="int64");
  %5594 = shape_of(%5569, dtype="int64");
  %5595 = take(%5594, 0);
  %5596 = less(%5593, 0);
  %5597 = add(%5593, %5595);
  %5598 = where(%5596, %5597, %5593);
  %5599 = shape_of(%1687, dtype="int32");
  %5600 = cast_like(%5599, meta[relay.Constant][1261]);
  %5601 = slice_like(%5600, meta[relay.Constant][1261], axes=None);
  %5602 = add(meta[relay.Constant][1261], %5601);
  %5603 = where(meta[relay.Constant][1260], %5602, meta[relay.Constant][1261]);
  %5604 = greater_equal(%5603, %5601);
  %5605 = shape_of(%1687, dtype="int64");
  %5606 = where(%5604, %5601, %5603);
  %5607 = scatter(%5605, meta[relay.Constant][1262], meta[relay.Constant][1263]);
  %5608 = shape_of(%1703, dtype="int32");
  %5609 = cast_like(%5608, meta[relay.Constant][1266]);
  %5610 = slice_like(%5609, meta[relay.Constant][1266], axes=None);
  %5611 = add(meta[relay.Constant][1266], %5610);
  %5612 = where(meta[relay.Constant][1265], %5611, meta[relay.Constant][1266]);
  %5613 = greater_equal(%5612, %5610);
  %5614 = shape_of(%1703, dtype="int64");
  %5615 = where(%5613, %5610, %5612);
  %5616 = scatter(%5614, meta[relay.Constant][1267], meta[relay.Constant][1268]);
  %5617 = dyn.strided_slice(%1703, %5615, %5616, meta[relay.Constant][1269], begin=None, end=None, strides=None, axes=None);
  %5618 = take(%5617, 62, axis=1);
  %5619 = cast(%5618, dtype="float32");
  %5620 = argwhere(%5619);
  %5621 = cast(%5620, dtype="int64");
  %5622 = transpose(%5621, axes=[1, 0]);
  %5623 = transpose(%5622, axes=[1, 0]);
  %5624 = squeeze(%5623, axis=[1]);
  %5625 = cast(%5624, dtype="int64");
  %5626 = cast(%5625, dtype="int64");
  %5627 = dyn.strided_slice(%1687, %5606, %5607, meta[relay.Constant][1264], begin=None, end=None, strides=None, axes=None);
  %5628 = shape_of(%5627, dtype="int64");
  %5629 = take(%5628, 0);
  %5630 = less(%5626, 0);
  %5631 = add(%5626, %5629);
  %5632 = where(%5630, %5631, %5626);
  %5633 = take(%5627, %5632, axis=0);
  %5634 = take(%1701, 62, axis=1);
  %5635 = shape_of(%5634, dtype="int64");
  %5636 = take(%5635, 0);
  %5637 = less(%5625, 0);
  %5638 = add(%5625, %5636);
  %5639 = where(%5637, %5638, %5625);
  %5640 = take(%5634, %5639, axis=0);
  %5641 = expand_dims(%5640, axis=0);
  %5642 = expand_dims(%5633, axis=0);
  %5643 = expand_dims(%5641, axis=0);
  %5644 = vision.all_class_non_max_suppression(%5642, %5643, 2000, 0.5f, 0f);
  %5645 = %5644.0;
  %5646 = shape_of(%5645, dtype="int32");
  %5647 = cast_like(%5646, meta[relay.Constant][1271]);
  %5648 = slice_like(%5647, meta[relay.Constant][1271], axes=None);
  %5649 = add(meta[relay.Constant][1271], %5648);
  %5650 = where(meta[relay.Constant][1270], %5649, meta[relay.Constant][1271]);
  %5651 = greater_equal(%5650, %5648);
  %5652 = where(%5651, %5648, %5650);
  %5653 = %5644.1;
  %5654 = dyn.strided_slice(%5645, %5652, %5653, meta[relay.Constant][1272], begin=None, end=None, strides=None, axes=None);
  %5655 = take(%5654, meta[relay.Constant][1273], axis=1);
  %5656 = squeeze(%5655, axis=[1]);
  %5657 = cast(%5656, dtype="int64");
  %5658 = shape_of(%5633, dtype="int64");
  %5659 = take(%5658, 0);
  %5660 = less(%5657, 0);
  %5661 = add(%5657, %5659);
  %5662 = where(%5660, %5661, %5657);
  %5663 = shape_of(%1687, dtype="int32");
  %5664 = cast_like(%5663, meta[relay.Constant][1275]);
  %5665 = slice_like(%5664, meta[relay.Constant][1275], axes=None);
  %5666 = add(meta[relay.Constant][1275], %5665);
  %5667 = where(meta[relay.Constant][1274], %5666, meta[relay.Constant][1275]);
  %5668 = greater_equal(%5667, %5665);
  %5669 = shape_of(%1687, dtype="int64");
  %5670 = where(%5668, %5665, %5667);
  %5671 = scatter(%5669, meta[relay.Constant][1276], meta[relay.Constant][1277]);
  %5672 = shape_of(%1703, dtype="int32");
  %5673 = cast_like(%5672, meta[relay.Constant][1280]);
  %5674 = slice_like(%5673, meta[relay.Constant][1280], axes=None);
  %5675 = add(meta[relay.Constant][1280], %5674);
  %5676 = where(meta[relay.Constant][1279], %5675, meta[relay.Constant][1280]);
  %5677 = greater_equal(%5676, %5674);
  %5678 = shape_of(%1703, dtype="int64");
  %5679 = where(%5677, %5674, %5676);
  %5680 = scatter(%5678, meta[relay.Constant][1281], meta[relay.Constant][1282]);
  %5681 = dyn.strided_slice(%1703, %5679, %5680, meta[relay.Constant][1283], begin=None, end=None, strides=None, axes=None);
  %5682 = take(%5681, 63, axis=1);
  %5683 = cast(%5682, dtype="float32");
  %5684 = argwhere(%5683);
  %5685 = cast(%5684, dtype="int64");
  %5686 = transpose(%5685, axes=[1, 0]);
  %5687 = transpose(%5686, axes=[1, 0]);
  %5688 = squeeze(%5687, axis=[1]);
  %5689 = cast(%5688, dtype="int64");
  %5690 = cast(%5689, dtype="int64");
  %5691 = dyn.strided_slice(%1687, %5670, %5671, meta[relay.Constant][1278], begin=None, end=None, strides=None, axes=None);
  %5692 = shape_of(%5691, dtype="int64");
  %5693 = take(%5692, 0);
  %5694 = less(%5690, 0);
  %5695 = add(%5690, %5693);
  %5696 = where(%5694, %5695, %5690);
  %5697 = take(%5691, %5696, axis=0);
  %5698 = take(%1701, 63, axis=1);
  %5699 = shape_of(%5698, dtype="int64");
  %5700 = take(%5699, 0);
  %5701 = less(%5689, 0);
  %5702 = add(%5689, %5700);
  %5703 = where(%5701, %5702, %5689);
  %5704 = take(%5698, %5703, axis=0);
  %5705 = expand_dims(%5704, axis=0);
  %5706 = expand_dims(%5697, axis=0);
  %5707 = expand_dims(%5705, axis=0);
  %5708 = vision.all_class_non_max_suppression(%5706, %5707, 2000, 0.5f, 0f);
  %5709 = %5708.0;
  %5710 = shape_of(%5709, dtype="int32");
  %5711 = cast_like(%5710, meta[relay.Constant][1285]);
  %5712 = slice_like(%5711, meta[relay.Constant][1285], axes=None);
  %5713 = add(meta[relay.Constant][1285], %5712);
  %5714 = where(meta[relay.Constant][1284], %5713, meta[relay.Constant][1285]);
  %5715 = greater_equal(%5714, %5712);
  %5716 = where(%5715, %5712, %5714);
  %5717 = %5708.1;
  %5718 = dyn.strided_slice(%5709, %5716, %5717, meta[relay.Constant][1286], begin=None, end=None, strides=None, axes=None);
  %5719 = take(%5718, meta[relay.Constant][1287], axis=1);
  %5720 = squeeze(%5719, axis=[1]);
  %5721 = cast(%5720, dtype="int64");
  %5722 = shape_of(%5697, dtype="int64");
  %5723 = take(%5722, 0);
  %5724 = less(%5721, 0);
  %5725 = add(%5721, %5723);
  %5726 = where(%5724, %5725, %5721);
  %5727 = shape_of(%1687, dtype="int32");
  %5728 = cast_like(%5727, meta[relay.Constant][1289]);
  %5729 = slice_like(%5728, meta[relay.Constant][1289], axes=None);
  %5730 = add(meta[relay.Constant][1289], %5729);
  %5731 = where(meta[relay.Constant][1288], %5730, meta[relay.Constant][1289]);
  %5732 = greater_equal(%5731, %5729);
  %5733 = shape_of(%1687, dtype="int64");
  %5734 = where(%5732, %5729, %5731);
  %5735 = scatter(%5733, meta[relay.Constant][1290], meta[relay.Constant][1291]);
  %5736 = shape_of(%1703, dtype="int32");
  %5737 = cast_like(%5736, meta[relay.Constant][1294]);
  %5738 = slice_like(%5737, meta[relay.Constant][1294], axes=None);
  %5739 = add(meta[relay.Constant][1294], %5738);
  %5740 = where(meta[relay.Constant][1293], %5739, meta[relay.Constant][1294]);
  %5741 = greater_equal(%5740, %5738);
  %5742 = shape_of(%1703, dtype="int64");
  %5743 = where(%5741, %5738, %5740);
  %5744 = scatter(%5742, meta[relay.Constant][1295], meta[relay.Constant][1296]);
  %5745 = dyn.strided_slice(%1703, %5743, %5744, meta[relay.Constant][1297], begin=None, end=None, strides=None, axes=None);
  %5746 = take(%5745, 64, axis=1);
  %5747 = cast(%5746, dtype="float32");
  %5748 = argwhere(%5747);
  %5749 = cast(%5748, dtype="int64");
  %5750 = transpose(%5749, axes=[1, 0]);
  %5751 = transpose(%5750, axes=[1, 0]);
  %5752 = squeeze(%5751, axis=[1]);
  %5753 = cast(%5752, dtype="int64");
  %5754 = cast(%5753, dtype="int64");
  %5755 = dyn.strided_slice(%1687, %5734, %5735, meta[relay.Constant][1292], begin=None, end=None, strides=None, axes=None);
  %5756 = shape_of(%5755, dtype="int64");
  %5757 = take(%5756, 0);
  %5758 = less(%5754, 0);
  %5759 = add(%5754, %5757);
  %5760 = where(%5758, %5759, %5754);
  %5761 = take(%5755, %5760, axis=0);
  %5762 = take(%1701, 64, axis=1);
  %5763 = shape_of(%5762, dtype="int64");
  %5764 = take(%5763, 0);
  %5765 = less(%5753, 0);
  %5766 = add(%5753, %5764);
  %5767 = where(%5765, %5766, %5753);
  %5768 = take(%5762, %5767, axis=0);
  %5769 = expand_dims(%5768, axis=0);
  %5770 = expand_dims(%5761, axis=0);
  %5771 = expand_dims(%5769, axis=0);
  %5772 = vision.all_class_non_max_suppression(%5770, %5771, 2000, 0.5f, 0f);
  %5773 = %5772.0;
  %5774 = shape_of(%5773, dtype="int32");
  %5775 = cast_like(%5774, meta[relay.Constant][1299]);
  %5776 = slice_like(%5775, meta[relay.Constant][1299], axes=None);
  %5777 = add(meta[relay.Constant][1299], %5776);
  %5778 = where(meta[relay.Constant][1298], %5777, meta[relay.Constant][1299]);
  %5779 = greater_equal(%5778, %5776);
  %5780 = where(%5779, %5776, %5778);
  %5781 = %5772.1;
  %5782 = dyn.strided_slice(%5773, %5780, %5781, meta[relay.Constant][1300], begin=None, end=None, strides=None, axes=None);
  %5783 = take(%5782, meta[relay.Constant][1301], axis=1);
  %5784 = squeeze(%5783, axis=[1]);
  %5785 = cast(%5784, dtype="int64");
  %5786 = shape_of(%5761, dtype="int64");
  %5787 = take(%5786, 0);
  %5788 = less(%5785, 0);
  %5789 = add(%5785, %5787);
  %5790 = where(%5788, %5789, %5785);
  %5791 = shape_of(%1687, dtype="int32");
  %5792 = cast_like(%5791, meta[relay.Constant][1303]);
  %5793 = slice_like(%5792, meta[relay.Constant][1303], axes=None);
  %5794 = add(meta[relay.Constant][1303], %5793);
  %5795 = where(meta[relay.Constant][1302], %5794, meta[relay.Constant][1303]);
  %5796 = greater_equal(%5795, %5793);
  %5797 = shape_of(%1687, dtype="int64");
  %5798 = where(%5796, %5793, %5795);
  %5799 = scatter(%5797, meta[relay.Constant][1304], meta[relay.Constant][1305]);
  %5800 = shape_of(%1703, dtype="int32");
  %5801 = cast_like(%5800, meta[relay.Constant][1308]);
  %5802 = slice_like(%5801, meta[relay.Constant][1308], axes=None);
  %5803 = add(meta[relay.Constant][1308], %5802);
  %5804 = where(meta[relay.Constant][1307], %5803, meta[relay.Constant][1308]);
  %5805 = greater_equal(%5804, %5802);
  %5806 = shape_of(%1703, dtype="int64");
  %5807 = where(%5805, %5802, %5804);
  %5808 = scatter(%5806, meta[relay.Constant][1309], meta[relay.Constant][1310]);
  %5809 = dyn.strided_slice(%1703, %5807, %5808, meta[relay.Constant][1311], begin=None, end=None, strides=None, axes=None);
  %5810 = take(%5809, 65, axis=1);
  %5811 = cast(%5810, dtype="float32");
  %5812 = argwhere(%5811);
  %5813 = cast(%5812, dtype="int64");
  %5814 = transpose(%5813, axes=[1, 0]);
  %5815 = transpose(%5814, axes=[1, 0]);
  %5816 = squeeze(%5815, axis=[1]);
  %5817 = cast(%5816, dtype="int64");
  %5818 = cast(%5817, dtype="int64");
  %5819 = dyn.strided_slice(%1687, %5798, %5799, meta[relay.Constant][1306], begin=None, end=None, strides=None, axes=None);
  %5820 = shape_of(%5819, dtype="int64");
  %5821 = take(%5820, 0);
  %5822 = less(%5818, 0);
  %5823 = add(%5818, %5821);
  %5824 = where(%5822, %5823, %5818);
  %5825 = take(%5819, %5824, axis=0);
  %5826 = take(%1701, 65, axis=1);
  %5827 = shape_of(%5826, dtype="int64");
  %5828 = take(%5827, 0);
  %5829 = less(%5817, 0);
  %5830 = add(%5817, %5828);
  %5831 = where(%5829, %5830, %5817);
  %5832 = take(%5826, %5831, axis=0);
  %5833 = expand_dims(%5832, axis=0);
  %5834 = expand_dims(%5825, axis=0);
  %5835 = expand_dims(%5833, axis=0);
  %5836 = vision.all_class_non_max_suppression(%5834, %5835, 2000, 0.5f, 0f);
  %5837 = %5836.0;
  %5838 = shape_of(%5837, dtype="int32");
  %5839 = cast_like(%5838, meta[relay.Constant][1313]);
  %5840 = slice_like(%5839, meta[relay.Constant][1313], axes=None);
  %5841 = add(meta[relay.Constant][1313], %5840);
  %5842 = where(meta[relay.Constant][1312], %5841, meta[relay.Constant][1313]);
  %5843 = greater_equal(%5842, %5840);
  %5844 = where(%5843, %5840, %5842);
  %5845 = %5836.1;
  %5846 = dyn.strided_slice(%5837, %5844, %5845, meta[relay.Constant][1314], begin=None, end=None, strides=None, axes=None);
  %5847 = take(%5846, meta[relay.Constant][1315], axis=1);
  %5848 = squeeze(%5847, axis=[1]);
  %5849 = cast(%5848, dtype="int64");
  %5850 = shape_of(%5825, dtype="int64");
  %5851 = take(%5850, 0);
  %5852 = less(%5849, 0);
  %5853 = add(%5849, %5851);
  %5854 = where(%5852, %5853, %5849);
  %5855 = shape_of(%1687, dtype="int32");
  %5856 = cast_like(%5855, meta[relay.Constant][1317]);
  %5857 = slice_like(%5856, meta[relay.Constant][1317], axes=None);
  %5858 = add(meta[relay.Constant][1317], %5857);
  %5859 = where(meta[relay.Constant][1316], %5858, meta[relay.Constant][1317]);
  %5860 = greater_equal(%5859, %5857);
  %5861 = shape_of(%1687, dtype="int64");
  %5862 = where(%5860, %5857, %5859);
  %5863 = scatter(%5861, meta[relay.Constant][1318], meta[relay.Constant][1319]);
  %5864 = shape_of(%1703, dtype="int32");
  %5865 = cast_like(%5864, meta[relay.Constant][1322]);
  %5866 = slice_like(%5865, meta[relay.Constant][1322], axes=None);
  %5867 = add(meta[relay.Constant][1322], %5866);
  %5868 = where(meta[relay.Constant][1321], %5867, meta[relay.Constant][1322]);
  %5869 = greater_equal(%5868, %5866);
  %5870 = shape_of(%1703, dtype="int64");
  %5871 = where(%5869, %5866, %5868);
  %5872 = scatter(%5870, meta[relay.Constant][1323], meta[relay.Constant][1324]);
  %5873 = dyn.strided_slice(%1703, %5871, %5872, meta[relay.Constant][1325], begin=None, end=None, strides=None, axes=None);
  %5874 = take(%5873, 66, axis=1);
  %5875 = cast(%5874, dtype="float32");
  %5876 = argwhere(%5875);
  %5877 = cast(%5876, dtype="int64");
  %5878 = transpose(%5877, axes=[1, 0]);
  %5879 = transpose(%5878, axes=[1, 0]);
  %5880 = squeeze(%5879, axis=[1]);
  %5881 = cast(%5880, dtype="int64");
  %5882 = cast(%5881, dtype="int64");
  %5883 = dyn.strided_slice(%1687, %5862, %5863, meta[relay.Constant][1320], begin=None, end=None, strides=None, axes=None);
  %5884 = shape_of(%5883, dtype="int64");
  %5885 = take(%5884, 0);
  %5886 = less(%5882, 0);
  %5887 = add(%5882, %5885);
  %5888 = where(%5886, %5887, %5882);
  %5889 = take(%5883, %5888, axis=0);
  %5890 = take(%1701, 66, axis=1);
  %5891 = shape_of(%5890, dtype="int64");
  %5892 = take(%5891, 0);
  %5893 = less(%5881, 0);
  %5894 = add(%5881, %5892);
  %5895 = where(%5893, %5894, %5881);
  %5896 = take(%5890, %5895, axis=0);
  %5897 = expand_dims(%5896, axis=0);
  %5898 = expand_dims(%5889, axis=0);
  %5899 = expand_dims(%5897, axis=0);
  %5900 = vision.all_class_non_max_suppression(%5898, %5899, 2000, 0.5f, 0f);
  %5901 = %5900.0;
  %5902 = shape_of(%5901, dtype="int32");
  %5903 = cast_like(%5902, meta[relay.Constant][1327]);
  %5904 = slice_like(%5903, meta[relay.Constant][1327], axes=None);
  %5905 = add(meta[relay.Constant][1327], %5904);
  %5906 = where(meta[relay.Constant][1326], %5905, meta[relay.Constant][1327]);
  %5907 = greater_equal(%5906, %5904);
  %5908 = where(%5907, %5904, %5906);
  %5909 = %5900.1;
  %5910 = dyn.strided_slice(%5901, %5908, %5909, meta[relay.Constant][1328], begin=None, end=None, strides=None, axes=None);
  %5911 = take(%5910, meta[relay.Constant][1329], axis=1);
  %5912 = squeeze(%5911, axis=[1]);
  %5913 = cast(%5912, dtype="int64");
  %5914 = shape_of(%5889, dtype="int64");
  %5915 = take(%5914, 0);
  %5916 = less(%5913, 0);
  %5917 = add(%5913, %5915);
  %5918 = where(%5916, %5917, %5913);
  %5919 = shape_of(%1687, dtype="int32");
  %5920 = cast_like(%5919, meta[relay.Constant][1331]);
  %5921 = slice_like(%5920, meta[relay.Constant][1331], axes=None);
  %5922 = add(meta[relay.Constant][1331], %5921);
  %5923 = where(meta[relay.Constant][1330], %5922, meta[relay.Constant][1331]);
  %5924 = greater_equal(%5923, %5921);
  %5925 = shape_of(%1687, dtype="int64");
  %5926 = where(%5924, %5921, %5923);
  %5927 = scatter(%5925, meta[relay.Constant][1332], meta[relay.Constant][1333]);
  %5928 = shape_of(%1703, dtype="int32");
  %5929 = cast_like(%5928, meta[relay.Constant][1336]);
  %5930 = slice_like(%5929, meta[relay.Constant][1336], axes=None);
  %5931 = add(meta[relay.Constant][1336], %5930);
  %5932 = where(meta[relay.Constant][1335], %5931, meta[relay.Constant][1336]);
  %5933 = greater_equal(%5932, %5930);
  %5934 = shape_of(%1703, dtype="int64");
  %5935 = where(%5933, %5930, %5932);
  %5936 = scatter(%5934, meta[relay.Constant][1337], meta[relay.Constant][1338]);
  %5937 = dyn.strided_slice(%1703, %5935, %5936, meta[relay.Constant][1339], begin=None, end=None, strides=None, axes=None);
  %5938 = take(%5937, 67, axis=1);
  %5939 = cast(%5938, dtype="float32");
  %5940 = argwhere(%5939);
  %5941 = cast(%5940, dtype="int64");
  %5942 = transpose(%5941, axes=[1, 0]);
  %5943 = transpose(%5942, axes=[1, 0]);
  %5944 = squeeze(%5943, axis=[1]);
  %5945 = cast(%5944, dtype="int64");
  %5946 = cast(%5945, dtype="int64");
  %5947 = dyn.strided_slice(%1687, %5926, %5927, meta[relay.Constant][1334], begin=None, end=None, strides=None, axes=None);
  %5948 = shape_of(%5947, dtype="int64");
  %5949 = take(%5948, 0);
  %5950 = less(%5946, 0);
  %5951 = add(%5946, %5949);
  %5952 = where(%5950, %5951, %5946);
  %5953 = take(%5947, %5952, axis=0);
  %5954 = take(%1701, 67, axis=1);
  %5955 = shape_of(%5954, dtype="int64");
  %5956 = take(%5955, 0);
  %5957 = less(%5945, 0);
  %5958 = add(%5945, %5956);
  %5959 = where(%5957, %5958, %5945);
  %5960 = take(%5954, %5959, axis=0);
  %5961 = expand_dims(%5960, axis=0);
  %5962 = expand_dims(%5953, axis=0);
  %5963 = expand_dims(%5961, axis=0);
  %5964 = vision.all_class_non_max_suppression(%5962, %5963, 2000, 0.5f, 0f);
  %5965 = %5964.0;
  %5966 = shape_of(%5965, dtype="int32");
  %5967 = cast_like(%5966, meta[relay.Constant][1341]);
  %5968 = slice_like(%5967, meta[relay.Constant][1341], axes=None);
  %5969 = add(meta[relay.Constant][1341], %5968);
  %5970 = where(meta[relay.Constant][1340], %5969, meta[relay.Constant][1341]);
  %5971 = greater_equal(%5970, %5968);
  %5972 = where(%5971, %5968, %5970);
  %5973 = %5964.1;
  %5974 = dyn.strided_slice(%5965, %5972, %5973, meta[relay.Constant][1342], begin=None, end=None, strides=None, axes=None);
  %5975 = take(%5974, meta[relay.Constant][1343], axis=1);
  %5976 = squeeze(%5975, axis=[1]);
  %5977 = cast(%5976, dtype="int64");
  %5978 = shape_of(%5953, dtype="int64");
  %5979 = take(%5978, 0);
  %5980 = less(%5977, 0);
  %5981 = add(%5977, %5979);
  %5982 = where(%5980, %5981, %5977);
  %5983 = shape_of(%1687, dtype="int32");
  %5984 = cast_like(%5983, meta[relay.Constant][1345]);
  %5985 = slice_like(%5984, meta[relay.Constant][1345], axes=None);
  %5986 = add(meta[relay.Constant][1345], %5985);
  %5987 = where(meta[relay.Constant][1344], %5986, meta[relay.Constant][1345]);
  %5988 = greater_equal(%5987, %5985);
  %5989 = shape_of(%1687, dtype="int64");
  %5990 = where(%5988, %5985, %5987);
  %5991 = scatter(%5989, meta[relay.Constant][1346], meta[relay.Constant][1347]);
  %5992 = shape_of(%1703, dtype="int32");
  %5993 = cast_like(%5992, meta[relay.Constant][1350]);
  %5994 = slice_like(%5993, meta[relay.Constant][1350], axes=None);
  %5995 = add(meta[relay.Constant][1350], %5994);
  %5996 = where(meta[relay.Constant][1349], %5995, meta[relay.Constant][1350]);
  %5997 = greater_equal(%5996, %5994);
  %5998 = shape_of(%1703, dtype="int64");
  %5999 = where(%5997, %5994, %5996);
  %6000 = scatter(%5998, meta[relay.Constant][1351], meta[relay.Constant][1352]);
  %6001 = dyn.strided_slice(%1703, %5999, %6000, meta[relay.Constant][1353], begin=None, end=None, strides=None, axes=None);
  %6002 = take(%6001, 68, axis=1);
  %6003 = cast(%6002, dtype="float32");
  %6004 = argwhere(%6003);
  %6005 = cast(%6004, dtype="int64");
  %6006 = transpose(%6005, axes=[1, 0]);
  %6007 = transpose(%6006, axes=[1, 0]);
  %6008 = squeeze(%6007, axis=[1]);
  %6009 = cast(%6008, dtype="int64");
  %6010 = cast(%6009, dtype="int64");
  %6011 = dyn.strided_slice(%1687, %5990, %5991, meta[relay.Constant][1348], begin=None, end=None, strides=None, axes=None);
  %6012 = shape_of(%6011, dtype="int64");
  %6013 = take(%6012, 0);
  %6014 = less(%6010, 0);
  %6015 = add(%6010, %6013);
  %6016 = where(%6014, %6015, %6010);
  %6017 = take(%6011, %6016, axis=0);
  %6018 = take(%1701, 68, axis=1);
  %6019 = shape_of(%6018, dtype="int64");
  %6020 = take(%6019, 0);
  %6021 = less(%6009, 0);
  %6022 = add(%6009, %6020);
  %6023 = where(%6021, %6022, %6009);
  %6024 = take(%6018, %6023, axis=0);
  %6025 = expand_dims(%6024, axis=0);
  %6026 = expand_dims(%6017, axis=0);
  %6027 = expand_dims(%6025, axis=0);
  %6028 = vision.all_class_non_max_suppression(%6026, %6027, 2000, 0.5f, 0f);
  %6029 = %6028.0;
  %6030 = shape_of(%6029, dtype="int32");
  %6031 = cast_like(%6030, meta[relay.Constant][1355]);
  %6032 = slice_like(%6031, meta[relay.Constant][1355], axes=None);
  %6033 = add(meta[relay.Constant][1355], %6032);
  %6034 = where(meta[relay.Constant][1354], %6033, meta[relay.Constant][1355]);
  %6035 = greater_equal(%6034, %6032);
  %6036 = where(%6035, %6032, %6034);
  %6037 = %6028.1;
  %6038 = dyn.strided_slice(%6029, %6036, %6037, meta[relay.Constant][1356], begin=None, end=None, strides=None, axes=None);
  %6039 = take(%6038, meta[relay.Constant][1357], axis=1);
  %6040 = squeeze(%6039, axis=[1]);
  %6041 = cast(%6040, dtype="int64");
  %6042 = shape_of(%6017, dtype="int64");
  %6043 = take(%6042, 0);
  %6044 = less(%6041, 0);
  %6045 = add(%6041, %6043);
  %6046 = where(%6044, %6045, %6041);
  %6047 = shape_of(%1687, dtype="int32");
  %6048 = cast_like(%6047, meta[relay.Constant][1359]);
  %6049 = slice_like(%6048, meta[relay.Constant][1359], axes=None);
  %6050 = add(meta[relay.Constant][1359], %6049);
  %6051 = where(meta[relay.Constant][1358], %6050, meta[relay.Constant][1359]);
  %6052 = greater_equal(%6051, %6049);
  %6053 = shape_of(%1687, dtype="int64");
  %6054 = where(%6052, %6049, %6051);
  %6055 = scatter(%6053, meta[relay.Constant][1360], meta[relay.Constant][1361]);
  %6056 = shape_of(%1703, dtype="int32");
  %6057 = cast_like(%6056, meta[relay.Constant][1364]);
  %6058 = slice_like(%6057, meta[relay.Constant][1364], axes=None);
  %6059 = add(meta[relay.Constant][1364], %6058);
  %6060 = where(meta[relay.Constant][1363], %6059, meta[relay.Constant][1364]);
  %6061 = greater_equal(%6060, %6058);
  %6062 = shape_of(%1703, dtype="int64");
  %6063 = where(%6061, %6058, %6060);
  %6064 = scatter(%6062, meta[relay.Constant][1365], meta[relay.Constant][1366]);
  %6065 = dyn.strided_slice(%1703, %6063, %6064, meta[relay.Constant][1367], begin=None, end=None, strides=None, axes=None);
  %6066 = take(%6065, 69, axis=1);
  %6067 = cast(%6066, dtype="float32");
  %6068 = argwhere(%6067);
  %6069 = cast(%6068, dtype="int64");
  %6070 = transpose(%6069, axes=[1, 0]);
  %6071 = transpose(%6070, axes=[1, 0]);
  %6072 = squeeze(%6071, axis=[1]);
  %6073 = cast(%6072, dtype="int64");
  %6074 = cast(%6073, dtype="int64");
  %6075 = dyn.strided_slice(%1687, %6054, %6055, meta[relay.Constant][1362], begin=None, end=None, strides=None, axes=None);
  %6076 = shape_of(%6075, dtype="int64");
  %6077 = take(%6076, 0);
  %6078 = less(%6074, 0);
  %6079 = add(%6074, %6077);
  %6080 = where(%6078, %6079, %6074);
  %6081 = take(%6075, %6080, axis=0);
  %6082 = take(%1701, 69, axis=1);
  %6083 = shape_of(%6082, dtype="int64");
  %6084 = take(%6083, 0);
  %6085 = less(%6073, 0);
  %6086 = add(%6073, %6084);
  %6087 = where(%6085, %6086, %6073);
  %6088 = take(%6082, %6087, axis=0);
  %6089 = expand_dims(%6088, axis=0);
  %6090 = expand_dims(%6081, axis=0);
  %6091 = expand_dims(%6089, axis=0);
  %6092 = vision.all_class_non_max_suppression(%6090, %6091, 2000, 0.5f, 0f);
  %6093 = %6092.0;
  %6094 = shape_of(%6093, dtype="int32");
  %6095 = cast_like(%6094, meta[relay.Constant][1369]);
  %6096 = slice_like(%6095, meta[relay.Constant][1369], axes=None);
  %6097 = add(meta[relay.Constant][1369], %6096);
  %6098 = where(meta[relay.Constant][1368], %6097, meta[relay.Constant][1369]);
  %6099 = greater_equal(%6098, %6096);
  %6100 = where(%6099, %6096, %6098);
  %6101 = %6092.1;
  %6102 = dyn.strided_slice(%6093, %6100, %6101, meta[relay.Constant][1370], begin=None, end=None, strides=None, axes=None);
  %6103 = take(%6102, meta[relay.Constant][1371], axis=1);
  %6104 = squeeze(%6103, axis=[1]);
  %6105 = cast(%6104, dtype="int64");
  %6106 = shape_of(%6081, dtype="int64");
  %6107 = take(%6106, 0);
  %6108 = less(%6105, 0);
  %6109 = add(%6105, %6107);
  %6110 = where(%6108, %6109, %6105);
  %6111 = shape_of(%1687, dtype="int32");
  %6112 = cast_like(%6111, meta[relay.Constant][1373]);
  %6113 = slice_like(%6112, meta[relay.Constant][1373], axes=None);
  %6114 = add(meta[relay.Constant][1373], %6113);
  %6115 = where(meta[relay.Constant][1372], %6114, meta[relay.Constant][1373]);
  %6116 = greater_equal(%6115, %6113);
  %6117 = shape_of(%1687, dtype="int64");
  %6118 = where(%6116, %6113, %6115);
  %6119 = scatter(%6117, meta[relay.Constant][1374], meta[relay.Constant][1375]);
  %6120 = shape_of(%1703, dtype="int32");
  %6121 = cast_like(%6120, meta[relay.Constant][1378]);
  %6122 = slice_like(%6121, meta[relay.Constant][1378], axes=None);
  %6123 = add(meta[relay.Constant][1378], %6122);
  %6124 = where(meta[relay.Constant][1377], %6123, meta[relay.Constant][1378]);
  %6125 = greater_equal(%6124, %6122);
  %6126 = shape_of(%1703, dtype="int64");
  %6127 = where(%6125, %6122, %6124);
  %6128 = scatter(%6126, meta[relay.Constant][1379], meta[relay.Constant][1380]);
  %6129 = dyn.strided_slice(%1703, %6127, %6128, meta[relay.Constant][1381], begin=None, end=None, strides=None, axes=None);
  %6130 = take(%6129, 70, axis=1);
  %6131 = cast(%6130, dtype="float32");
  %6132 = argwhere(%6131);
  %6133 = cast(%6132, dtype="int64");
  %6134 = transpose(%6133, axes=[1, 0]);
  %6135 = transpose(%6134, axes=[1, 0]);
  %6136 = squeeze(%6135, axis=[1]);
  %6137 = cast(%6136, dtype="int64");
  %6138 = cast(%6137, dtype="int64");
  %6139 = dyn.strided_slice(%1687, %6118, %6119, meta[relay.Constant][1376], begin=None, end=None, strides=None, axes=None);
  %6140 = shape_of(%6139, dtype="int64");
  %6141 = take(%6140, 0);
  %6142 = less(%6138, 0);
  %6143 = add(%6138, %6141);
  %6144 = where(%6142, %6143, %6138);
  %6145 = take(%6139, %6144, axis=0);
  %6146 = take(%1701, 70, axis=1);
  %6147 = shape_of(%6146, dtype="int64");
  %6148 = take(%6147, 0);
  %6149 = less(%6137, 0);
  %6150 = add(%6137, %6148);
  %6151 = where(%6149, %6150, %6137);
  %6152 = take(%6146, %6151, axis=0);
  %6153 = expand_dims(%6152, axis=0);
  %6154 = expand_dims(%6145, axis=0);
  %6155 = expand_dims(%6153, axis=0);
  %6156 = vision.all_class_non_max_suppression(%6154, %6155, 2000, 0.5f, 0f);
  %6157 = %6156.0;
  %6158 = shape_of(%6157, dtype="int32");
  %6159 = cast_like(%6158, meta[relay.Constant][1383]);
  %6160 = slice_like(%6159, meta[relay.Constant][1383], axes=None);
  %6161 = add(meta[relay.Constant][1383], %6160);
  %6162 = where(meta[relay.Constant][1382], %6161, meta[relay.Constant][1383]);
  %6163 = greater_equal(%6162, %6160);
  %6164 = where(%6163, %6160, %6162);
  %6165 = %6156.1;
  %6166 = dyn.strided_slice(%6157, %6164, %6165, meta[relay.Constant][1384], begin=None, end=None, strides=None, axes=None);
  %6167 = take(%6166, meta[relay.Constant][1385], axis=1);
  %6168 = squeeze(%6167, axis=[1]);
  %6169 = cast(%6168, dtype="int64");
  %6170 = shape_of(%6145, dtype="int64");
  %6171 = take(%6170, 0);
  %6172 = less(%6169, 0);
  %6173 = add(%6169, %6171);
  %6174 = where(%6172, %6173, %6169);
  %6175 = shape_of(%1687, dtype="int32");
  %6176 = cast_like(%6175, meta[relay.Constant][1387]);
  %6177 = slice_like(%6176, meta[relay.Constant][1387], axes=None);
  %6178 = add(meta[relay.Constant][1387], %6177);
  %6179 = where(meta[relay.Constant][1386], %6178, meta[relay.Constant][1387]);
  %6180 = greater_equal(%6179, %6177);
  %6181 = shape_of(%1687, dtype="int64");
  %6182 = where(%6180, %6177, %6179);
  %6183 = scatter(%6181, meta[relay.Constant][1388], meta[relay.Constant][1389]);
  %6184 = shape_of(%1703, dtype="int32");
  %6185 = cast_like(%6184, meta[relay.Constant][1392]);
  %6186 = slice_like(%6185, meta[relay.Constant][1392], axes=None);
  %6187 = add(meta[relay.Constant][1392], %6186);
  %6188 = where(meta[relay.Constant][1391], %6187, meta[relay.Constant][1392]);
  %6189 = greater_equal(%6188, %6186);
  %6190 = shape_of(%1703, dtype="int64");
  %6191 = where(%6189, %6186, %6188);
  %6192 = scatter(%6190, meta[relay.Constant][1393], meta[relay.Constant][1394]);
  %6193 = dyn.strided_slice(%1703, %6191, %6192, meta[relay.Constant][1395], begin=None, end=None, strides=None, axes=None);
  %6194 = take(%6193, 71, axis=1);
  %6195 = cast(%6194, dtype="float32");
  %6196 = argwhere(%6195);
  %6197 = cast(%6196, dtype="int64");
  %6198 = transpose(%6197, axes=[1, 0]);
  %6199 = transpose(%6198, axes=[1, 0]);
  %6200 = squeeze(%6199, axis=[1]);
  %6201 = cast(%6200, dtype="int64");
  %6202 = cast(%6201, dtype="int64");
  %6203 = dyn.strided_slice(%1687, %6182, %6183, meta[relay.Constant][1390], begin=None, end=None, strides=None, axes=None);
  %6204 = shape_of(%6203, dtype="int64");
  %6205 = take(%6204, 0);
  %6206 = less(%6202, 0);
  %6207 = add(%6202, %6205);
  %6208 = where(%6206, %6207, %6202);
  %6209 = take(%6203, %6208, axis=0);
  %6210 = take(%1701, 71, axis=1);
  %6211 = shape_of(%6210, dtype="int64");
  %6212 = take(%6211, 0);
  %6213 = less(%6201, 0);
  %6214 = add(%6201, %6212);
  %6215 = where(%6213, %6214, %6201);
  %6216 = take(%6210, %6215, axis=0);
  %6217 = expand_dims(%6216, axis=0);
  %6218 = expand_dims(%6209, axis=0);
  %6219 = expand_dims(%6217, axis=0);
  %6220 = vision.all_class_non_max_suppression(%6218, %6219, 2000, 0.5f, 0f);
  %6221 = %6220.0;
  %6222 = shape_of(%6221, dtype="int32");
  %6223 = cast_like(%6222, meta[relay.Constant][1397]);
  %6224 = slice_like(%6223, meta[relay.Constant][1397], axes=None);
  %6225 = add(meta[relay.Constant][1397], %6224);
  %6226 = where(meta[relay.Constant][1396], %6225, meta[relay.Constant][1397]);
  %6227 = greater_equal(%6226, %6224);
  %6228 = where(%6227, %6224, %6226);
  %6229 = %6220.1;
  %6230 = dyn.strided_slice(%6221, %6228, %6229, meta[relay.Constant][1398], begin=None, end=None, strides=None, axes=None);
  %6231 = take(%6230, meta[relay.Constant][1399], axis=1);
  %6232 = squeeze(%6231, axis=[1]);
  %6233 = cast(%6232, dtype="int64");
  %6234 = shape_of(%6209, dtype="int64");
  %6235 = take(%6234, 0);
  %6236 = less(%6233, 0);
  %6237 = add(%6233, %6235);
  %6238 = where(%6236, %6237, %6233);
  %6239 = shape_of(%1687, dtype="int32");
  %6240 = cast_like(%6239, meta[relay.Constant][1401]);
  %6241 = slice_like(%6240, meta[relay.Constant][1401], axes=None);
  %6242 = add(meta[relay.Constant][1401], %6241);
  %6243 = where(meta[relay.Constant][1400], %6242, meta[relay.Constant][1401]);
  %6244 = greater_equal(%6243, %6241);
  %6245 = shape_of(%1687, dtype="int64");
  %6246 = where(%6244, %6241, %6243);
  %6247 = scatter(%6245, meta[relay.Constant][1402], meta[relay.Constant][1403]);
  %6248 = shape_of(%1703, dtype="int32");
  %6249 = cast_like(%6248, meta[relay.Constant][1406]);
  %6250 = slice_like(%6249, meta[relay.Constant][1406], axes=None);
  %6251 = add(meta[relay.Constant][1406], %6250);
  %6252 = where(meta[relay.Constant][1405], %6251, meta[relay.Constant][1406]);
  %6253 = greater_equal(%6252, %6250);
  %6254 = shape_of(%1703, dtype="int64");
  %6255 = where(%6253, %6250, %6252);
  %6256 = scatter(%6254, meta[relay.Constant][1407], meta[relay.Constant][1408]);
  %6257 = dyn.strided_slice(%1703, %6255, %6256, meta[relay.Constant][1409], begin=None, end=None, strides=None, axes=None);
  %6258 = take(%6257, 72, axis=1);
  %6259 = cast(%6258, dtype="float32");
  %6260 = argwhere(%6259);
  %6261 = cast(%6260, dtype="int64");
  %6262 = transpose(%6261, axes=[1, 0]);
  %6263 = transpose(%6262, axes=[1, 0]);
  %6264 = squeeze(%6263, axis=[1]);
  %6265 = cast(%6264, dtype="int64");
  %6266 = cast(%6265, dtype="int64");
  %6267 = dyn.strided_slice(%1687, %6246, %6247, meta[relay.Constant][1404], begin=None, end=None, strides=None, axes=None);
  %6268 = shape_of(%6267, dtype="int64");
  %6269 = take(%6268, 0);
  %6270 = less(%6266, 0);
  %6271 = add(%6266, %6269);
  %6272 = where(%6270, %6271, %6266);
  %6273 = take(%6267, %6272, axis=0);
  %6274 = take(%1701, 72, axis=1);
  %6275 = shape_of(%6274, dtype="int64");
  %6276 = take(%6275, 0);
  %6277 = less(%6265, 0);
  %6278 = add(%6265, %6276);
  %6279 = where(%6277, %6278, %6265);
  %6280 = take(%6274, %6279, axis=0);
  %6281 = expand_dims(%6280, axis=0);
  %6282 = expand_dims(%6273, axis=0);
  %6283 = expand_dims(%6281, axis=0);
  %6284 = vision.all_class_non_max_suppression(%6282, %6283, 2000, 0.5f, 0f);
  %6285 = %6284.0;
  %6286 = shape_of(%6285, dtype="int32");
  %6287 = cast_like(%6286, meta[relay.Constant][1411]);
  %6288 = slice_like(%6287, meta[relay.Constant][1411], axes=None);
  %6289 = add(meta[relay.Constant][1411], %6288);
  %6290 = where(meta[relay.Constant][1410], %6289, meta[relay.Constant][1411]);
  %6291 = greater_equal(%6290, %6288);
  %6292 = where(%6291, %6288, %6290);
  %6293 = %6284.1;
  %6294 = dyn.strided_slice(%6285, %6292, %6293, meta[relay.Constant][1412], begin=None, end=None, strides=None, axes=None);
  %6295 = take(%6294, meta[relay.Constant][1413], axis=1);
  %6296 = squeeze(%6295, axis=[1]);
  %6297 = cast(%6296, dtype="int64");
  %6298 = shape_of(%6273, dtype="int64");
  %6299 = take(%6298, 0);
  %6300 = less(%6297, 0);
  %6301 = add(%6297, %6299);
  %6302 = where(%6300, %6301, %6297);
  %6303 = shape_of(%1687, dtype="int32");
  %6304 = cast_like(%6303, meta[relay.Constant][1415]);
  %6305 = slice_like(%6304, meta[relay.Constant][1415], axes=None);
  %6306 = add(meta[relay.Constant][1415], %6305);
  %6307 = where(meta[relay.Constant][1414], %6306, meta[relay.Constant][1415]);
  %6308 = greater_equal(%6307, %6305);
  %6309 = shape_of(%1687, dtype="int64");
  %6310 = where(%6308, %6305, %6307);
  %6311 = scatter(%6309, meta[relay.Constant][1416], meta[relay.Constant][1417]);
  %6312 = shape_of(%1703, dtype="int32");
  %6313 = cast_like(%6312, meta[relay.Constant][1420]);
  %6314 = slice_like(%6313, meta[relay.Constant][1420], axes=None);
  %6315 = add(meta[relay.Constant][1420], %6314);
  %6316 = where(meta[relay.Constant][1419], %6315, meta[relay.Constant][1420]);
  %6317 = greater_equal(%6316, %6314);
  %6318 = shape_of(%1703, dtype="int64");
  %6319 = where(%6317, %6314, %6316);
  %6320 = scatter(%6318, meta[relay.Constant][1421], meta[relay.Constant][1422]);
  %6321 = dyn.strided_slice(%1703, %6319, %6320, meta[relay.Constant][1423], begin=None, end=None, strides=None, axes=None);
  %6322 = take(%6321, 73, axis=1);
  %6323 = cast(%6322, dtype="float32");
  %6324 = argwhere(%6323);
  %6325 = cast(%6324, dtype="int64");
  %6326 = transpose(%6325, axes=[1, 0]);
  %6327 = transpose(%6326, axes=[1, 0]);
  %6328 = squeeze(%6327, axis=[1]);
  %6329 = cast(%6328, dtype="int64");
  %6330 = cast(%6329, dtype="int64");
  %6331 = dyn.strided_slice(%1687, %6310, %6311, meta[relay.Constant][1418], begin=None, end=None, strides=None, axes=None);
  %6332 = shape_of(%6331, dtype="int64");
  %6333 = take(%6332, 0);
  %6334 = less(%6330, 0);
  %6335 = add(%6330, %6333);
  %6336 = where(%6334, %6335, %6330);
  %6337 = take(%6331, %6336, axis=0);
  %6338 = take(%1701, 73, axis=1);
  %6339 = shape_of(%6338, dtype="int64");
  %6340 = take(%6339, 0);
  %6341 = less(%6329, 0);
  %6342 = add(%6329, %6340);
  %6343 = where(%6341, %6342, %6329);
  %6344 = take(%6338, %6343, axis=0);
  %6345 = expand_dims(%6344, axis=0);
  %6346 = expand_dims(%6337, axis=0);
  %6347 = expand_dims(%6345, axis=0);
  %6348 = vision.all_class_non_max_suppression(%6346, %6347, 2000, 0.5f, 0f);
  %6349 = %6348.0;
  %6350 = shape_of(%6349, dtype="int32");
  %6351 = cast_like(%6350, meta[relay.Constant][1425]);
  %6352 = slice_like(%6351, meta[relay.Constant][1425], axes=None);
  %6353 = add(meta[relay.Constant][1425], %6352);
  %6354 = where(meta[relay.Constant][1424], %6353, meta[relay.Constant][1425]);
  %6355 = greater_equal(%6354, %6352);
  %6356 = where(%6355, %6352, %6354);
  %6357 = %6348.1;
  %6358 = dyn.strided_slice(%6349, %6356, %6357, meta[relay.Constant][1426], begin=None, end=None, strides=None, axes=None);
  %6359 = take(%6358, meta[relay.Constant][1427], axis=1);
  %6360 = squeeze(%6359, axis=[1]);
  %6361 = cast(%6360, dtype="int64");
  %6362 = shape_of(%6337, dtype="int64");
  %6363 = take(%6362, 0);
  %6364 = less(%6361, 0);
  %6365 = add(%6361, %6363);
  %6366 = where(%6364, %6365, %6361);
  %6367 = shape_of(%1687, dtype="int32");
  %6368 = cast_like(%6367, meta[relay.Constant][1429]);
  %6369 = slice_like(%6368, meta[relay.Constant][1429], axes=None);
  %6370 = add(meta[relay.Constant][1429], %6369);
  %6371 = where(meta[relay.Constant][1428], %6370, meta[relay.Constant][1429]);
  %6372 = greater_equal(%6371, %6369);
  %6373 = shape_of(%1687, dtype="int64");
  %6374 = where(%6372, %6369, %6371);
  %6375 = scatter(%6373, meta[relay.Constant][1430], meta[relay.Constant][1431]);
  %6376 = shape_of(%1703, dtype="int32");
  %6377 = cast_like(%6376, meta[relay.Constant][1434]);
  %6378 = slice_like(%6377, meta[relay.Constant][1434], axes=None);
  %6379 = add(meta[relay.Constant][1434], %6378);
  %6380 = where(meta[relay.Constant][1433], %6379, meta[relay.Constant][1434]);
  %6381 = greater_equal(%6380, %6378);
  %6382 = shape_of(%1703, dtype="int64");
  %6383 = where(%6381, %6378, %6380);
  %6384 = scatter(%6382, meta[relay.Constant][1435], meta[relay.Constant][1436]);
  %6385 = dyn.strided_slice(%1703, %6383, %6384, meta[relay.Constant][1437], begin=None, end=None, strides=None, axes=None);
  %6386 = take(%6385, 74, axis=1);
  %6387 = cast(%6386, dtype="float32");
  %6388 = argwhere(%6387);
  %6389 = cast(%6388, dtype="int64");
  %6390 = transpose(%6389, axes=[1, 0]);
  %6391 = transpose(%6390, axes=[1, 0]);
  %6392 = squeeze(%6391, axis=[1]);
  %6393 = cast(%6392, dtype="int64");
  %6394 = cast(%6393, dtype="int64");
  %6395 = dyn.strided_slice(%1687, %6374, %6375, meta[relay.Constant][1432], begin=None, end=None, strides=None, axes=None);
  %6396 = shape_of(%6395, dtype="int64");
  %6397 = take(%6396, 0);
  %6398 = less(%6394, 0);
  %6399 = add(%6394, %6397);
  %6400 = where(%6398, %6399, %6394);
  %6401 = take(%6395, %6400, axis=0);
  %6402 = take(%1701, 74, axis=1);
  %6403 = shape_of(%6402, dtype="int64");
  %6404 = take(%6403, 0);
  %6405 = less(%6393, 0);
  %6406 = add(%6393, %6404);
  %6407 = where(%6405, %6406, %6393);
  %6408 = take(%6402, %6407, axis=0);
  %6409 = expand_dims(%6408, axis=0);
  %6410 = expand_dims(%6401, axis=0);
  %6411 = expand_dims(%6409, axis=0);
  %6412 = vision.all_class_non_max_suppression(%6410, %6411, 2000, 0.5f, 0f);
  %6413 = %6412.0;
  %6414 = shape_of(%6413, dtype="int32");
  %6415 = cast_like(%6414, meta[relay.Constant][1439]);
  %6416 = slice_like(%6415, meta[relay.Constant][1439], axes=None);
  %6417 = add(meta[relay.Constant][1439], %6416);
  %6418 = where(meta[relay.Constant][1438], %6417, meta[relay.Constant][1439]);
  %6419 = greater_equal(%6418, %6416);
  %6420 = where(%6419, %6416, %6418);
  %6421 = %6412.1;
  %6422 = dyn.strided_slice(%6413, %6420, %6421, meta[relay.Constant][1440], begin=None, end=None, strides=None, axes=None);
  %6423 = take(%6422, meta[relay.Constant][1441], axis=1);
  %6424 = squeeze(%6423, axis=[1]);
  %6425 = cast(%6424, dtype="int64");
  %6426 = shape_of(%6401, dtype="int64");
  %6427 = take(%6426, 0);
  %6428 = less(%6425, 0);
  %6429 = add(%6425, %6427);
  %6430 = where(%6428, %6429, %6425);
  %6431 = shape_of(%1687, dtype="int32");
  %6432 = cast_like(%6431, meta[relay.Constant][1443]);
  %6433 = slice_like(%6432, meta[relay.Constant][1443], axes=None);
  %6434 = add(meta[relay.Constant][1443], %6433);
  %6435 = where(meta[relay.Constant][1442], %6434, meta[relay.Constant][1443]);
  %6436 = greater_equal(%6435, %6433);
  %6437 = shape_of(%1687, dtype="int64");
  %6438 = where(%6436, %6433, %6435);
  %6439 = scatter(%6437, meta[relay.Constant][1444], meta[relay.Constant][1445]);
  %6440 = shape_of(%1703, dtype="int32");
  %6441 = cast_like(%6440, meta[relay.Constant][1448]);
  %6442 = slice_like(%6441, meta[relay.Constant][1448], axes=None);
  %6443 = add(meta[relay.Constant][1448], %6442);
  %6444 = where(meta[relay.Constant][1447], %6443, meta[relay.Constant][1448]);
  %6445 = greater_equal(%6444, %6442);
  %6446 = shape_of(%1703, dtype="int64");
  %6447 = where(%6445, %6442, %6444);
  %6448 = scatter(%6446, meta[relay.Constant][1449], meta[relay.Constant][1450]);
  %6449 = dyn.strided_slice(%1703, %6447, %6448, meta[relay.Constant][1451], begin=None, end=None, strides=None, axes=None);
  %6450 = take(%6449, 75, axis=1);
  %6451 = cast(%6450, dtype="float32");
  %6452 = argwhere(%6451);
  %6453 = cast(%6452, dtype="int64");
  %6454 = transpose(%6453, axes=[1, 0]);
  %6455 = transpose(%6454, axes=[1, 0]);
  %6456 = squeeze(%6455, axis=[1]);
  %6457 = cast(%6456, dtype="int64");
  %6458 = cast(%6457, dtype="int64");
  %6459 = dyn.strided_slice(%1687, %6438, %6439, meta[relay.Constant][1446], begin=None, end=None, strides=None, axes=None);
  %6460 = shape_of(%6459, dtype="int64");
  %6461 = take(%6460, 0);
  %6462 = less(%6458, 0);
  %6463 = add(%6458, %6461);
  %6464 = where(%6462, %6463, %6458);
  %6465 = take(%6459, %6464, axis=0);
  %6466 = take(%1701, 75, axis=1);
  %6467 = shape_of(%6466, dtype="int64");
  %6468 = take(%6467, 0);
  %6469 = less(%6457, 0);
  %6470 = add(%6457, %6468);
  %6471 = where(%6469, %6470, %6457);
  %6472 = take(%6466, %6471, axis=0);
  %6473 = expand_dims(%6472, axis=0);
  %6474 = expand_dims(%6465, axis=0);
  %6475 = expand_dims(%6473, axis=0);
  %6476 = vision.all_class_non_max_suppression(%6474, %6475, 2000, 0.5f, 0f);
  %6477 = %6476.0;
  %6478 = shape_of(%6477, dtype="int32");
  %6479 = cast_like(%6478, meta[relay.Constant][1453]);
  %6480 = slice_like(%6479, meta[relay.Constant][1453], axes=None);
  %6481 = add(meta[relay.Constant][1453], %6480);
  %6482 = where(meta[relay.Constant][1452], %6481, meta[relay.Constant][1453]);
  %6483 = greater_equal(%6482, %6480);
  %6484 = where(%6483, %6480, %6482);
  %6485 = %6476.1;
  %6486 = dyn.strided_slice(%6477, %6484, %6485, meta[relay.Constant][1454], begin=None, end=None, strides=None, axes=None);
  %6487 = take(%6486, meta[relay.Constant][1455], axis=1);
  %6488 = squeeze(%6487, axis=[1]);
  %6489 = cast(%6488, dtype="int64");
  %6490 = shape_of(%6465, dtype="int64");
  %6491 = take(%6490, 0);
  %6492 = less(%6489, 0);
  %6493 = add(%6489, %6491);
  %6494 = where(%6492, %6493, %6489);
  %6495 = shape_of(%1687, dtype="int32");
  %6496 = cast_like(%6495, meta[relay.Constant][1457]);
  %6497 = slice_like(%6496, meta[relay.Constant][1457], axes=None);
  %6498 = add(meta[relay.Constant][1457], %6497);
  %6499 = where(meta[relay.Constant][1456], %6498, meta[relay.Constant][1457]);
  %6500 = greater_equal(%6499, %6497);
  %6501 = shape_of(%1687, dtype="int64");
  %6502 = where(%6500, %6497, %6499);
  %6503 = scatter(%6501, meta[relay.Constant][1458], meta[relay.Constant][1459]);
  %6504 = shape_of(%1703, dtype="int32");
  %6505 = cast_like(%6504, meta[relay.Constant][1462]);
  %6506 = slice_like(%6505, meta[relay.Constant][1462], axes=None);
  %6507 = add(meta[relay.Constant][1462], %6506);
  %6508 = where(meta[relay.Constant][1461], %6507, meta[relay.Constant][1462]);
  %6509 = greater_equal(%6508, %6506);
  %6510 = shape_of(%1703, dtype="int64");
  %6511 = where(%6509, %6506, %6508);
  %6512 = scatter(%6510, meta[relay.Constant][1463], meta[relay.Constant][1464]);
  %6513 = dyn.strided_slice(%1703, %6511, %6512, meta[relay.Constant][1465], begin=None, end=None, strides=None, axes=None);
  %6514 = take(%6513, 76, axis=1);
  %6515 = cast(%6514, dtype="float32");
  %6516 = argwhere(%6515);
  %6517 = cast(%6516, dtype="int64");
  %6518 = transpose(%6517, axes=[1, 0]);
  %6519 = transpose(%6518, axes=[1, 0]);
  %6520 = squeeze(%6519, axis=[1]);
  %6521 = cast(%6520, dtype="int64");
  %6522 = cast(%6521, dtype="int64");
  %6523 = dyn.strided_slice(%1687, %6502, %6503, meta[relay.Constant][1460], begin=None, end=None, strides=None, axes=None);
  %6524 = shape_of(%6523, dtype="int64");
  %6525 = take(%6524, 0);
  %6526 = less(%6522, 0);
  %6527 = add(%6522, %6525);
  %6528 = where(%6526, %6527, %6522);
  %6529 = take(%6523, %6528, axis=0);
  %6530 = take(%1701, 76, axis=1);
  %6531 = shape_of(%6530, dtype="int64");
  %6532 = take(%6531, 0);
  %6533 = less(%6521, 0);
  %6534 = add(%6521, %6532);
  %6535 = where(%6533, %6534, %6521);
  %6536 = take(%6530, %6535, axis=0);
  %6537 = expand_dims(%6536, axis=0);
  %6538 = expand_dims(%6529, axis=0);
  %6539 = expand_dims(%6537, axis=0);
  %6540 = vision.all_class_non_max_suppression(%6538, %6539, 2000, 0.5f, 0f);
  %6541 = %6540.0;
  %6542 = shape_of(%6541, dtype="int32");
  %6543 = cast_like(%6542, meta[relay.Constant][1467]);
  %6544 = slice_like(%6543, meta[relay.Constant][1467], axes=None);
  %6545 = add(meta[relay.Constant][1467], %6544);
  %6546 = where(meta[relay.Constant][1466], %6545, meta[relay.Constant][1467]);
  %6547 = greater_equal(%6546, %6544);
  %6548 = where(%6547, %6544, %6546);
  %6549 = %6540.1;
  %6550 = dyn.strided_slice(%6541, %6548, %6549, meta[relay.Constant][1468], begin=None, end=None, strides=None, axes=None);
  %6551 = take(%6550, meta[relay.Constant][1469], axis=1);
  %6552 = squeeze(%6551, axis=[1]);
  %6553 = cast(%6552, dtype="int64");
  %6554 = shape_of(%6529, dtype="int64");
  %6555 = take(%6554, 0);
  %6556 = less(%6553, 0);
  %6557 = add(%6553, %6555);
  %6558 = where(%6556, %6557, %6553);
  %6559 = shape_of(%1687, dtype="int32");
  %6560 = cast_like(%6559, meta[relay.Constant][1471]);
  %6561 = slice_like(%6560, meta[relay.Constant][1471], axes=None);
  %6562 = add(meta[relay.Constant][1471], %6561);
  %6563 = where(meta[relay.Constant][1470], %6562, meta[relay.Constant][1471]);
  %6564 = greater_equal(%6563, %6561);
  %6565 = shape_of(%1687, dtype="int64");
  %6566 = where(%6564, %6561, %6563);
  %6567 = scatter(%6565, meta[relay.Constant][1472], meta[relay.Constant][1473]);
  %6568 = shape_of(%1703, dtype="int32");
  %6569 = cast_like(%6568, meta[relay.Constant][1476]);
  %6570 = slice_like(%6569, meta[relay.Constant][1476], axes=None);
  %6571 = add(meta[relay.Constant][1476], %6570);
  %6572 = where(meta[relay.Constant][1475], %6571, meta[relay.Constant][1476]);
  %6573 = greater_equal(%6572, %6570);
  %6574 = shape_of(%1703, dtype="int64");
  %6575 = where(%6573, %6570, %6572);
  %6576 = scatter(%6574, meta[relay.Constant][1477], meta[relay.Constant][1478]);
  %6577 = dyn.strided_slice(%1703, %6575, %6576, meta[relay.Constant][1479], begin=None, end=None, strides=None, axes=None);
  %6578 = take(%6577, 77, axis=1);
  %6579 = cast(%6578, dtype="float32");
  %6580 = argwhere(%6579);
  %6581 = cast(%6580, dtype="int64");
  %6582 = transpose(%6581, axes=[1, 0]);
  %6583 = transpose(%6582, axes=[1, 0]);
  %6584 = squeeze(%6583, axis=[1]);
  %6585 = cast(%6584, dtype="int64");
  %6586 = cast(%6585, dtype="int64");
  %6587 = dyn.strided_slice(%1687, %6566, %6567, meta[relay.Constant][1474], begin=None, end=None, strides=None, axes=None);
  %6588 = shape_of(%6587, dtype="int64");
  %6589 = take(%6588, 0);
  %6590 = less(%6586, 0);
  %6591 = add(%6586, %6589);
  %6592 = where(%6590, %6591, %6586);
  %6593 = take(%6587, %6592, axis=0);
  %6594 = take(%1701, 77, axis=1);
  %6595 = shape_of(%6594, dtype="int64");
  %6596 = take(%6595, 0);
  %6597 = less(%6585, 0);
  %6598 = add(%6585, %6596);
  %6599 = where(%6597, %6598, %6585);
  %6600 = take(%6594, %6599, axis=0);
  %6601 = expand_dims(%6600, axis=0);
  %6602 = expand_dims(%6593, axis=0);
  %6603 = expand_dims(%6601, axis=0);
  %6604 = vision.all_class_non_max_suppression(%6602, %6603, 2000, 0.5f, 0f);
  %6605 = %6604.0;
  %6606 = shape_of(%6605, dtype="int32");
  %6607 = cast_like(%6606, meta[relay.Constant][1481]);
  %6608 = slice_like(%6607, meta[relay.Constant][1481], axes=None);
  %6609 = add(meta[relay.Constant][1481], %6608);
  %6610 = where(meta[relay.Constant][1480], %6609, meta[relay.Constant][1481]);
  %6611 = greater_equal(%6610, %6608);
  %6612 = where(%6611, %6608, %6610);
  %6613 = %6604.1;
  %6614 = dyn.strided_slice(%6605, %6612, %6613, meta[relay.Constant][1482], begin=None, end=None, strides=None, axes=None);
  %6615 = take(%6614, meta[relay.Constant][1483], axis=1);
  %6616 = squeeze(%6615, axis=[1]);
  %6617 = cast(%6616, dtype="int64");
  %6618 = shape_of(%6593, dtype="int64");
  %6619 = take(%6618, 0);
  %6620 = less(%6617, 0);
  %6621 = add(%6617, %6619);
  %6622 = where(%6620, %6621, %6617);
  %6623 = shape_of(%1687, dtype="int32");
  %6624 = cast_like(%6623, meta[relay.Constant][1485]);
  %6625 = slice_like(%6624, meta[relay.Constant][1485], axes=None);
  %6626 = add(meta[relay.Constant][1485], %6625);
  %6627 = where(meta[relay.Constant][1484], %6626, meta[relay.Constant][1485]);
  %6628 = greater_equal(%6627, %6625);
  %6629 = shape_of(%1687, dtype="int64");
  %6630 = where(%6628, %6625, %6627);
  %6631 = scatter(%6629, meta[relay.Constant][1486], meta[relay.Constant][1487]);
  %6632 = shape_of(%1703, dtype="int32");
  %6633 = cast_like(%6632, meta[relay.Constant][1490]);
  %6634 = slice_like(%6633, meta[relay.Constant][1490], axes=None);
  %6635 = add(meta[relay.Constant][1490], %6634);
  %6636 = where(meta[relay.Constant][1489], %6635, meta[relay.Constant][1490]);
  %6637 = greater_equal(%6636, %6634);
  %6638 = shape_of(%1703, dtype="int64");
  %6639 = where(%6637, %6634, %6636);
  %6640 = scatter(%6638, meta[relay.Constant][1491], meta[relay.Constant][1492]);
  %6641 = dyn.strided_slice(%1703, %6639, %6640, meta[relay.Constant][1493], begin=None, end=None, strides=None, axes=None);
  %6642 = take(%6641, 78, axis=1);
  %6643 = cast(%6642, dtype="float32");
  %6644 = argwhere(%6643);
  %6645 = cast(%6644, dtype="int64");
  %6646 = transpose(%6645, axes=[1, 0]);
  %6647 = transpose(%6646, axes=[1, 0]);
  %6648 = squeeze(%6647, axis=[1]);
  %6649 = cast(%6648, dtype="int64");
  %6650 = cast(%6649, dtype="int64");
  %6651 = dyn.strided_slice(%1687, %6630, %6631, meta[relay.Constant][1488], begin=None, end=None, strides=None, axes=None);
  %6652 = shape_of(%6651, dtype="int64");
  %6653 = take(%6652, 0);
  %6654 = less(%6650, 0);
  %6655 = add(%6650, %6653);
  %6656 = where(%6654, %6655, %6650);
  %6657 = take(%6651, %6656, axis=0);
  %6658 = take(%1701, 78, axis=1);
  %6659 = shape_of(%6658, dtype="int64");
  %6660 = take(%6659, 0);
  %6661 = less(%6649, 0);
  %6662 = add(%6649, %6660);
  %6663 = where(%6661, %6662, %6649);
  %6664 = take(%6658, %6663, axis=0);
  %6665 = expand_dims(%6664, axis=0);
  %6666 = expand_dims(%6657, axis=0);
  %6667 = expand_dims(%6665, axis=0);
  %6668 = vision.all_class_non_max_suppression(%6666, %6667, 2000, 0.5f, 0f);
  %6669 = %6668.0;
  %6670 = shape_of(%6669, dtype="int32");
  %6671 = cast_like(%6670, meta[relay.Constant][1495]);
  %6672 = slice_like(%6671, meta[relay.Constant][1495], axes=None);
  %6673 = add(meta[relay.Constant][1495], %6672);
  %6674 = where(meta[relay.Constant][1494], %6673, meta[relay.Constant][1495]);
  %6675 = greater_equal(%6674, %6672);
  %6676 = where(%6675, %6672, %6674);
  %6677 = %6668.1;
  %6678 = dyn.strided_slice(%6669, %6676, %6677, meta[relay.Constant][1496], begin=None, end=None, strides=None, axes=None);
  %6679 = take(%6678, meta[relay.Constant][1497], axis=1);
  %6680 = squeeze(%6679, axis=[1]);
  %6681 = cast(%6680, dtype="int64");
  %6682 = shape_of(%6657, dtype="int64");
  %6683 = take(%6682, 0);
  %6684 = less(%6681, 0);
  %6685 = add(%6681, %6683);
  %6686 = where(%6684, %6685, %6681);
  %6687 = shape_of(%1687, dtype="int32");
  %6688 = cast_like(%6687, meta[relay.Constant][1499]);
  %6689 = slice_like(%6688, meta[relay.Constant][1499], axes=None);
  %6690 = add(meta[relay.Constant][1499], %6689);
  %6691 = where(meta[relay.Constant][1498], %6690, meta[relay.Constant][1499]);
  %6692 = greater_equal(%6691, %6689);
  %6693 = shape_of(%1687, dtype="int64");
  %6694 = where(%6692, %6689, %6691);
  %6695 = scatter(%6693, meta[relay.Constant][1500], meta[relay.Constant][1501]);
  %6696 = shape_of(%1703, dtype="int32");
  %6697 = cast_like(%6696, meta[relay.Constant][1504]);
  %6698 = slice_like(%6697, meta[relay.Constant][1504], axes=None);
  %6699 = add(meta[relay.Constant][1504], %6698);
  %6700 = where(meta[relay.Constant][1503], %6699, meta[relay.Constant][1504]);
  %6701 = greater_equal(%6700, %6698);
  %6702 = shape_of(%1703, dtype="int64");
  %6703 = where(%6701, %6698, %6700);
  %6704 = scatter(%6702, meta[relay.Constant][1505], meta[relay.Constant][1506]);
  %6705 = dyn.strided_slice(%1703, %6703, %6704, meta[relay.Constant][1507], begin=None, end=None, strides=None, axes=None);
  %6706 = take(%6705, 79, axis=1);
  %6707 = cast(%6706, dtype="float32");
  %6708 = argwhere(%6707);
  %6709 = cast(%6708, dtype="int64");
  %6710 = transpose(%6709, axes=[1, 0]);
  %6711 = transpose(%6710, axes=[1, 0]);
  %6712 = squeeze(%6711, axis=[1]);
  %6713 = cast(%6712, dtype="int64");
  %6714 = cast(%6713, dtype="int64");
  %6715 = dyn.strided_slice(%1687, %6694, %6695, meta[relay.Constant][1502], begin=None, end=None, strides=None, axes=None);
  %6716 = shape_of(%6715, dtype="int64");
  %6717 = take(%6716, 0);
  %6718 = less(%6714, 0);
  %6719 = add(%6714, %6717);
  %6720 = where(%6718, %6719, %6714);
  %6721 = take(%6715, %6720, axis=0);
  %6722 = take(%1701, 79, axis=1);
  %6723 = shape_of(%6722, dtype="int64");
  %6724 = take(%6723, 0);
  %6725 = less(%6713, 0);
  %6726 = add(%6713, %6724);
  %6727 = where(%6725, %6726, %6713);
  %6728 = take(%6722, %6727, axis=0);
  %6729 = expand_dims(%6728, axis=0);
  %6730 = expand_dims(%6721, axis=0);
  %6731 = expand_dims(%6729, axis=0);
  %6732 = vision.all_class_non_max_suppression(%6730, %6731, 2000, 0.5f, 0f);
  %6733 = %6732.0;
  %6734 = shape_of(%6733, dtype="int32");
  %6735 = cast_like(%6734, meta[relay.Constant][1509]);
  %6736 = slice_like(%6735, meta[relay.Constant][1509], axes=None);
  %6737 = add(meta[relay.Constant][1509], %6736);
  %6738 = where(meta[relay.Constant][1508], %6737, meta[relay.Constant][1509]);
  %6739 = greater_equal(%6738, %6736);
  %6740 = where(%6739, %6736, %6738);
  %6741 = %6732.1;
  %6742 = dyn.strided_slice(%6733, %6740, %6741, meta[relay.Constant][1510], begin=None, end=None, strides=None, axes=None);
  %6743 = take(%6742, meta[relay.Constant][1511], axis=1);
  %6744 = squeeze(%6743, axis=[1]);
  %6745 = cast(%6744, dtype="int64");
  %6746 = shape_of(%6721, dtype="int64");
  %6747 = take(%6746, 0);
  %6748 = less(%6745, 0);
  %6749 = add(%6745, %6747);
  %6750 = where(%6748, %6749, %6745);
  %6751 = shape_of(%1687, dtype="int32");
  %6752 = cast_like(%6751, meta[relay.Constant][1513]);
  %6753 = slice_like(%6752, meta[relay.Constant][1513], axes=None);
  %6754 = add(meta[relay.Constant][1513], %6753);
  %6755 = where(meta[relay.Constant][1512], %6754, meta[relay.Constant][1513]);
  %6756 = greater_equal(%6755, %6753);
  %6757 = shape_of(%1687, dtype="int64");
  %6758 = where(%6756, %6753, %6755);
  %6759 = scatter(%6757, meta[relay.Constant][1514], meta[relay.Constant][1515]);
  %6760 = shape_of(%1703, dtype="int32");
  %6761 = cast_like(%6760, meta[relay.Constant][1518]);
  %6762 = slice_like(%6761, meta[relay.Constant][1518], axes=None);
  %6763 = add(meta[relay.Constant][1518], %6762);
  %6764 = where(meta[relay.Constant][1517], %6763, meta[relay.Constant][1518]);
  %6765 = greater_equal(%6764, %6762);
  %6766 = shape_of(%1703, dtype="int64");
  %6767 = where(%6765, %6762, %6764);
  %6768 = scatter(%6766, meta[relay.Constant][1519], meta[relay.Constant][1520]);
  %6769 = dyn.strided_slice(%1703, %6767, %6768, meta[relay.Constant][1521], begin=None, end=None, strides=None, axes=None);
  %6770 = take(%6769, 80, axis=1);
  %6771 = cast(%6770, dtype="float32");
  %6772 = argwhere(%6771);
  %6773 = cast(%6772, dtype="int64");
  %6774 = transpose(%6773, axes=[1, 0]);
  %6775 = transpose(%6774, axes=[1, 0]);
  %6776 = squeeze(%6775, axis=[1]);
  %6777 = cast(%6776, dtype="int64");
  %6778 = cast(%6777, dtype="int64");
  %6779 = dyn.strided_slice(%1687, %6758, %6759, meta[relay.Constant][1516], begin=None, end=None, strides=None, axes=None);
  %6780 = shape_of(%6779, dtype="int64");
  %6781 = take(%6780, 0);
  %6782 = less(%6778, 0);
  %6783 = add(%6778, %6781);
  %6784 = where(%6782, %6783, %6778);
  %6785 = take(%6779, %6784, axis=0);
  %6786 = take(%1701, 80, axis=1);
  %6787 = shape_of(%6786, dtype="int64");
  %6788 = take(%6787, 0);
  %6789 = less(%6777, 0);
  %6790 = add(%6777, %6788);
  %6791 = where(%6789, %6790, %6777);
  %6792 = take(%6786, %6791, axis=0);
  %6793 = expand_dims(%6792, axis=0);
  %6794 = expand_dims(%6785, axis=0);
  %6795 = expand_dims(%6793, axis=0);
  %6796 = vision.all_class_non_max_suppression(%6794, %6795, 2000, 0.5f, 0f);
  %6797 = %6796.0;
  %6798 = shape_of(%6797, dtype="int32");
  %6799 = cast_like(%6798, meta[relay.Constant][1523]);
  %6800 = slice_like(%6799, meta[relay.Constant][1523], axes=None);
  %6801 = add(meta[relay.Constant][1523], %6800);
  %6802 = where(meta[relay.Constant][1522], %6801, meta[relay.Constant][1523]);
  %6803 = greater_equal(%6802, %6800);
  %6804 = where(%6803, %6800, %6802);
  %6805 = %6796.1;
  %6806 = dyn.strided_slice(%6797, %6804, %6805, meta[relay.Constant][1524], begin=None, end=None, strides=None, axes=None);
  %6807 = take(%6806, meta[relay.Constant][1525], axis=1);
  %6808 = squeeze(%6807, axis=[1]);
  %6809 = cast(%6808, dtype="int64");
  %6810 = shape_of(%6785, dtype="int64");
  %6811 = take(%6810, 0);
  %6812 = less(%6809, 0);
  %6813 = add(%6809, %6811);
  %6814 = where(%6812, %6813, %6809);
  %6815 = take(%1729, %1758, axis=0);
  %6816 = take(%1793, %1822, axis=0);
  %6817 = take(%1857, %1886, axis=0);
  %6818 = take(%1921, %1950, axis=0);
  %6819 = take(%1985, %2014, axis=0);
  %6820 = take(%2049, %2078, axis=0);
  %6821 = take(%2113, %2142, axis=0);
  %6822 = take(%2177, %2206, axis=0);
  %6823 = take(%2241, %2270, axis=0);
  %6824 = take(%2305, %2334, axis=0);
  %6825 = take(%2369, %2398, axis=0);
  %6826 = take(%2433, %2462, axis=0);
  %6827 = take(%2497, %2526, axis=0);
  %6828 = take(%2561, %2590, axis=0);
  %6829 = take(%2625, %2654, axis=0);
  %6830 = take(%2689, %2718, axis=0);
  %6831 = take(%2753, %2782, axis=0);
  %6832 = take(%2817, %2846, axis=0);
  %6833 = take(%2881, %2910, axis=0);
  %6834 = take(%2945, %2974, axis=0);
  %6835 = take(%3009, %3038, axis=0);
  %6836 = take(%3073, %3102, axis=0);
  %6837 = take(%3137, %3166, axis=0);
  %6838 = take(%3201, %3230, axis=0);
  %6839 = take(%3265, %3294, axis=0);
  %6840 = take(%3329, %3358, axis=0);
  %6841 = take(%3393, %3422, axis=0);
  %6842 = take(%3457, %3486, axis=0);
  %6843 = take(%3521, %3550, axis=0);
  %6844 = take(%3585, %3614, axis=0);
  %6845 = take(%3649, %3678, axis=0);
  %6846 = take(%3713, %3742, axis=0);
  %6847 = take(%3777, %3806, axis=0);
  %6848 = take(%3841, %3870, axis=0);
  %6849 = take(%3905, %3934, axis=0);
  %6850 = take(%3969, %3998, axis=0);
  %6851 = take(%4033, %4062, axis=0);
  %6852 = take(%4097, %4126, axis=0);
  %6853 = take(%4161, %4190, axis=0);
  %6854 = take(%4225, %4254, axis=0);
  %6855 = take(%4289, %4318, axis=0);
  %6856 = take(%4353, %4382, axis=0);
  %6857 = take(%4417, %4446, axis=0);
  %6858 = take(%4481, %4510, axis=0);
  %6859 = take(%4545, %4574, axis=0);
  %6860 = take(%4609, %4638, axis=0);
  %6861 = take(%4673, %4702, axis=0);
  %6862 = take(%4737, %4766, axis=0);
  %6863 = take(%4801, %4830, axis=0);
  %6864 = take(%4865, %4894, axis=0);
  %6865 = take(%4929, %4958, axis=0);
  %6866 = take(%4993, %5022, axis=0);
  %6867 = take(%5057, %5086, axis=0);
  %6868 = take(%5121, %5150, axis=0);
  %6869 = take(%5185, %5214, axis=0);
  %6870 = take(%5249, %5278, axis=0);
  %6871 = take(%5313, %5342, axis=0);
  %6872 = take(%5377, %5406, axis=0);
  %6873 = take(%5441, %5470, axis=0);
  %6874 = take(%5505, %5534, axis=0);
  %6875 = take(%5569, %5598, axis=0);
  %6876 = take(%5633, %5662, axis=0);
  %6877 = take(%5697, %5726, axis=0);
  %6878 = take(%5761, %5790, axis=0);
  %6879 = take(%5825, %5854, axis=0);
  %6880 = take(%5889, %5918, axis=0);
  %6881 = take(%5953, %5982, axis=0);
  %6882 = take(%6017, %6046, axis=0);
  %6883 = take(%6081, %6110, axis=0);
  %6884 = take(%6145, %6174, axis=0);
  %6885 = take(%6209, %6238, axis=0);
  %6886 = take(%6273, %6302, axis=0);
  %6887 = take(%6337, %6366, axis=0);
  %6888 = take(%6401, %6430, axis=0);
  %6889 = take(%6465, %6494, axis=0);
  %6890 = take(%6529, %6558, axis=0);
  %6891 = take(%6593, %6622, axis=0);
  %6892 = take(%6657, %6686, axis=0);
  %6893 = take(%6721, %6750, axis=0);
  %6894 = take(%6785, %6814, axis=0);
  %6895 = (%6815, %6816, %6817, %6818, %6819, %6820, %6821, %6822, %6823, %6824, %6825, %6826, %6827, %6828, %6829, %6830, %6831, %6832, %6833, %6834, %6835, %6836, %6837, %6838, %6839, %6840, %6841, %6842, %6843, %6844, %6845, %6846, %6847, %6848, %6849, %6850, %6851, %6852, %6853, %6854, %6855, %6856, %6857, %6858, %6859, %6860, %6861, %6862, %6863, %6864, %6865, %6866, %6867, %6868, %6869, %6870, %6871, %6872, %6873, %6874, %6875, %6876, %6877, %6878, %6879, %6880, %6881, %6882, %6883, %6884, %6885, %6886, %6887, %6888, %6889, %6890, %6891, %6892, %6893, %6894);
  %6896 = cast(%1753, dtype="int64");
  %6897 = shape_of(%1736, dtype="int64");
  %6898 = take(%6897, 0);
  %6899 = less(%6896, 0);
  %6900 = add(%6896, %6898);
  %6901 = where(%6899, %6900, %6896);
  %6902 = cast(%1817, dtype="int64");
  %6903 = shape_of(%1800, dtype="int64");
  %6904 = take(%6903, 0);
  %6905 = less(%6902, 0);
  %6906 = add(%6902, %6904);
  %6907 = where(%6905, %6906, %6902);
  %6908 = cast(%1881, dtype="int64");
  %6909 = shape_of(%1864, dtype="int64");
  %6910 = take(%6909, 0);
  %6911 = less(%6908, 0);
  %6912 = add(%6908, %6910);
  %6913 = where(%6911, %6912, %6908);
  %6914 = cast(%1945, dtype="int64");
  %6915 = shape_of(%1928, dtype="int64");
  %6916 = take(%6915, 0);
  %6917 = less(%6914, 0);
  %6918 = add(%6914, %6916);
  %6919 = where(%6917, %6918, %6914);
  %6920 = cast(%2009, dtype="int64");
  %6921 = shape_of(%1992, dtype="int64");
  %6922 = take(%6921, 0);
  %6923 = less(%6920, 0);
  %6924 = add(%6920, %6922);
  %6925 = where(%6923, %6924, %6920);
  %6926 = cast(%2073, dtype="int64");
  %6927 = shape_of(%2056, dtype="int64");
  %6928 = take(%6927, 0);
  %6929 = less(%6926, 0);
  %6930 = add(%6926, %6928);
  %6931 = where(%6929, %6930, %6926);
  %6932 = cast(%2137, dtype="int64");
  %6933 = shape_of(%2120, dtype="int64");
  %6934 = take(%6933, 0);
  %6935 = less(%6932, 0);
  %6936 = add(%6932, %6934);
  %6937 = where(%6935, %6936, %6932);
  %6938 = cast(%2201, dtype="int64");
  %6939 = shape_of(%2184, dtype="int64");
  %6940 = take(%6939, 0);
  %6941 = less(%6938, 0);
  %6942 = add(%6938, %6940);
  %6943 = where(%6941, %6942, %6938);
  %6944 = cast(%2265, dtype="int64");
  %6945 = shape_of(%2248, dtype="int64");
  %6946 = take(%6945, 0);
  %6947 = less(%6944, 0);
  %6948 = add(%6944, %6946);
  %6949 = where(%6947, %6948, %6944);
  %6950 = cast(%2329, dtype="int64");
  %6951 = shape_of(%2312, dtype="int64");
  %6952 = take(%6951, 0);
  %6953 = less(%6950, 0);
  %6954 = add(%6950, %6952);
  %6955 = where(%6953, %6954, %6950);
  %6956 = cast(%2393, dtype="int64");
  %6957 = shape_of(%2376, dtype="int64");
  %6958 = take(%6957, 0);
  %6959 = less(%6956, 0);
  %6960 = add(%6956, %6958);
  %6961 = where(%6959, %6960, %6956);
  %6962 = cast(%2457, dtype="int64");
  %6963 = shape_of(%2440, dtype="int64");
  %6964 = take(%6963, 0);
  %6965 = less(%6962, 0);
  %6966 = add(%6962, %6964);
  %6967 = where(%6965, %6966, %6962);
  %6968 = cast(%2521, dtype="int64");
  %6969 = shape_of(%2504, dtype="int64");
  %6970 = take(%6969, 0);
  %6971 = less(%6968, 0);
  %6972 = add(%6968, %6970);
  %6973 = where(%6971, %6972, %6968);
  %6974 = cast(%2585, dtype="int64");
  %6975 = shape_of(%2568, dtype="int64");
  %6976 = take(%6975, 0);
  %6977 = less(%6974, 0);
  %6978 = add(%6974, %6976);
  %6979 = where(%6977, %6978, %6974);
  %6980 = cast(%2649, dtype="int64");
  %6981 = shape_of(%2632, dtype="int64");
  %6982 = take(%6981, 0);
  %6983 = less(%6980, 0);
  %6984 = add(%6980, %6982);
  %6985 = where(%6983, %6984, %6980);
  %6986 = cast(%2713, dtype="int64");
  %6987 = shape_of(%2696, dtype="int64");
  %6988 = take(%6987, 0);
  %6989 = less(%6986, 0);
  %6990 = add(%6986, %6988);
  %6991 = where(%6989, %6990, %6986);
  %6992 = cast(%2777, dtype="int64");
  %6993 = shape_of(%2760, dtype="int64");
  %6994 = take(%6993, 0);
  %6995 = less(%6992, 0);
  %6996 = add(%6992, %6994);
  %6997 = where(%6995, %6996, %6992);
  %6998 = cast(%2841, dtype="int64");
  %6999 = shape_of(%2824, dtype="int64");
  %7000 = take(%6999, 0);
  %7001 = less(%6998, 0);
  %7002 = add(%6998, %7000);
  %7003 = where(%7001, %7002, %6998);
  %7004 = cast(%2905, dtype="int64");
  %7005 = shape_of(%2888, dtype="int64");
  %7006 = take(%7005, 0);
  %7007 = less(%7004, 0);
  %7008 = add(%7004, %7006);
  %7009 = where(%7007, %7008, %7004);
  %7010 = cast(%2969, dtype="int64");
  %7011 = shape_of(%2952, dtype="int64");
  %7012 = take(%7011, 0);
  %7013 = less(%7010, 0);
  %7014 = add(%7010, %7012);
  %7015 = where(%7013, %7014, %7010);
  %7016 = cast(%3033, dtype="int64");
  %7017 = shape_of(%3016, dtype="int64");
  %7018 = take(%7017, 0);
  %7019 = less(%7016, 0);
  %7020 = add(%7016, %7018);
  %7021 = where(%7019, %7020, %7016);
  %7022 = cast(%3097, dtype="int64");
  %7023 = shape_of(%3080, dtype="int64");
  %7024 = take(%7023, 0);
  %7025 = less(%7022, 0);
  %7026 = add(%7022, %7024);
  %7027 = where(%7025, %7026, %7022);
  %7028 = cast(%3161, dtype="int64");
  %7029 = shape_of(%3144, dtype="int64");
  %7030 = take(%7029, 0);
  %7031 = less(%7028, 0);
  %7032 = add(%7028, %7030);
  %7033 = where(%7031, %7032, %7028);
  %7034 = cast(%3225, dtype="int64");
  %7035 = shape_of(%3208, dtype="int64");
  %7036 = take(%7035, 0);
  %7037 = less(%7034, 0);
  %7038 = add(%7034, %7036);
  %7039 = where(%7037, %7038, %7034);
  %7040 = cast(%3289, dtype="int64");
  %7041 = shape_of(%3272, dtype="int64");
  %7042 = take(%7041, 0);
  %7043 = less(%7040, 0);
  %7044 = add(%7040, %7042);
  %7045 = where(%7043, %7044, %7040);
  %7046 = cast(%3353, dtype="int64");
  %7047 = shape_of(%3336, dtype="int64");
  %7048 = take(%7047, 0);
  %7049 = less(%7046, 0);
  %7050 = add(%7046, %7048);
  %7051 = where(%7049, %7050, %7046);
  %7052 = cast(%3417, dtype="int64");
  %7053 = shape_of(%3400, dtype="int64");
  %7054 = take(%7053, 0);
  %7055 = less(%7052, 0);
  %7056 = add(%7052, %7054);
  %7057 = where(%7055, %7056, %7052);
  %7058 = cast(%3481, dtype="int64");
  %7059 = shape_of(%3464, dtype="int64");
  %7060 = take(%7059, 0);
  %7061 = less(%7058, 0);
  %7062 = add(%7058, %7060);
  %7063 = where(%7061, %7062, %7058);
  %7064 = cast(%3545, dtype="int64");
  %7065 = shape_of(%3528, dtype="int64");
  %7066 = take(%7065, 0);
  %7067 = less(%7064, 0);
  %7068 = add(%7064, %7066);
  %7069 = where(%7067, %7068, %7064);
  %7070 = cast(%3609, dtype="int64");
  %7071 = shape_of(%3592, dtype="int64");
  %7072 = take(%7071, 0);
  %7073 = less(%7070, 0);
  %7074 = add(%7070, %7072);
  %7075 = where(%7073, %7074, %7070);
  %7076 = cast(%3673, dtype="int64");
  %7077 = shape_of(%3656, dtype="int64");
  %7078 = take(%7077, 0);
  %7079 = less(%7076, 0);
  %7080 = add(%7076, %7078);
  %7081 = where(%7079, %7080, %7076);
  %7082 = cast(%3737, dtype="int64");
  %7083 = shape_of(%3720, dtype="int64");
  %7084 = take(%7083, 0);
  %7085 = less(%7082, 0);
  %7086 = add(%7082, %7084);
  %7087 = where(%7085, %7086, %7082);
  %7088 = cast(%3801, dtype="int64");
  %7089 = shape_of(%3784, dtype="int64");
  %7090 = take(%7089, 0);
  %7091 = less(%7088, 0);
  %7092 = add(%7088, %7090);
  %7093 = where(%7091, %7092, %7088);
  %7094 = cast(%3865, dtype="int64");
  %7095 = shape_of(%3848, dtype="int64");
  %7096 = take(%7095, 0);
  %7097 = less(%7094, 0);
  %7098 = add(%7094, %7096);
  %7099 = where(%7097, %7098, %7094);
  %7100 = cast(%3929, dtype="int64");
  %7101 = shape_of(%3912, dtype="int64");
  %7102 = take(%7101, 0);
  %7103 = less(%7100, 0);
  %7104 = add(%7100, %7102);
  %7105 = where(%7103, %7104, %7100);
  %7106 = cast(%3993, dtype="int64");
  %7107 = shape_of(%3976, dtype="int64");
  %7108 = take(%7107, 0);
  %7109 = less(%7106, 0);
  %7110 = add(%7106, %7108);
  %7111 = where(%7109, %7110, %7106);
  %7112 = cast(%4057, dtype="int64");
  %7113 = shape_of(%4040, dtype="int64");
  %7114 = take(%7113, 0);
  %7115 = less(%7112, 0);
  %7116 = add(%7112, %7114);
  %7117 = where(%7115, %7116, %7112);
  %7118 = cast(%4121, dtype="int64");
  %7119 = shape_of(%4104, dtype="int64");
  %7120 = take(%7119, 0);
  %7121 = less(%7118, 0);
  %7122 = add(%7118, %7120);
  %7123 = where(%7121, %7122, %7118);
  %7124 = cast(%4185, dtype="int64");
  %7125 = shape_of(%4168, dtype="int64");
  %7126 = take(%7125, 0);
  %7127 = less(%7124, 0);
  %7128 = add(%7124, %7126);
  %7129 = where(%7127, %7128, %7124);
  %7130 = cast(%4249, dtype="int64");
  %7131 = shape_of(%4232, dtype="int64");
  %7132 = take(%7131, 0);
  %7133 = less(%7130, 0);
  %7134 = add(%7130, %7132);
  %7135 = where(%7133, %7134, %7130);
  %7136 = cast(%4313, dtype="int64");
  %7137 = shape_of(%4296, dtype="int64");
  %7138 = take(%7137, 0);
  %7139 = less(%7136, 0);
  %7140 = add(%7136, %7138);
  %7141 = where(%7139, %7140, %7136);
  %7142 = cast(%4377, dtype="int64");
  %7143 = shape_of(%4360, dtype="int64");
  %7144 = take(%7143, 0);
  %7145 = less(%7142, 0);
  %7146 = add(%7142, %7144);
  %7147 = where(%7145, %7146, %7142);
  %7148 = cast(%4441, dtype="int64");
  %7149 = shape_of(%4424, dtype="int64");
  %7150 = take(%7149, 0);
  %7151 = less(%7148, 0);
  %7152 = add(%7148, %7150);
  %7153 = where(%7151, %7152, %7148);
  %7154 = cast(%4505, dtype="int64");
  %7155 = shape_of(%4488, dtype="int64");
  %7156 = take(%7155, 0);
  %7157 = less(%7154, 0);
  %7158 = add(%7154, %7156);
  %7159 = where(%7157, %7158, %7154);
  %7160 = cast(%4569, dtype="int64");
  %7161 = shape_of(%4552, dtype="int64");
  %7162 = take(%7161, 0);
  %7163 = less(%7160, 0);
  %7164 = add(%7160, %7162);
  %7165 = where(%7163, %7164, %7160);
  %7166 = cast(%4633, dtype="int64");
  %7167 = shape_of(%4616, dtype="int64");
  %7168 = take(%7167, 0);
  %7169 = less(%7166, 0);
  %7170 = add(%7166, %7168);
  %7171 = where(%7169, %7170, %7166);
  %7172 = cast(%4697, dtype="int64");
  %7173 = shape_of(%4680, dtype="int64");
  %7174 = take(%7173, 0);
  %7175 = less(%7172, 0);
  %7176 = add(%7172, %7174);
  %7177 = where(%7175, %7176, %7172);
  %7178 = cast(%4761, dtype="int64");
  %7179 = shape_of(%4744, dtype="int64");
  %7180 = take(%7179, 0);
  %7181 = less(%7178, 0);
  %7182 = add(%7178, %7180);
  %7183 = where(%7181, %7182, %7178);
  %7184 = cast(%4825, dtype="int64");
  %7185 = shape_of(%4808, dtype="int64");
  %7186 = take(%7185, 0);
  %7187 = less(%7184, 0);
  %7188 = add(%7184, %7186);
  %7189 = where(%7187, %7188, %7184);
  %7190 = cast(%4889, dtype="int64");
  %7191 = shape_of(%4872, dtype="int64");
  %7192 = take(%7191, 0);
  %7193 = less(%7190, 0);
  %7194 = add(%7190, %7192);
  %7195 = where(%7193, %7194, %7190);
  %7196 = cast(%4953, dtype="int64");
  %7197 = shape_of(%4936, dtype="int64");
  %7198 = take(%7197, 0);
  %7199 = less(%7196, 0);
  %7200 = add(%7196, %7198);
  %7201 = where(%7199, %7200, %7196);
  %7202 = cast(%5017, dtype="int64");
  %7203 = shape_of(%5000, dtype="int64");
  %7204 = take(%7203, 0);
  %7205 = less(%7202, 0);
  %7206 = add(%7202, %7204);
  %7207 = where(%7205, %7206, %7202);
  %7208 = cast(%5081, dtype="int64");
  %7209 = shape_of(%5064, dtype="int64");
  %7210 = take(%7209, 0);
  %7211 = less(%7208, 0);
  %7212 = add(%7208, %7210);
  %7213 = where(%7211, %7212, %7208);
  %7214 = cast(%5145, dtype="int64");
  %7215 = shape_of(%5128, dtype="int64");
  %7216 = take(%7215, 0);
  %7217 = less(%7214, 0);
  %7218 = add(%7214, %7216);
  %7219 = where(%7217, %7218, %7214);
  %7220 = cast(%5209, dtype="int64");
  %7221 = shape_of(%5192, dtype="int64");
  %7222 = take(%7221, 0);
  %7223 = less(%7220, 0);
  %7224 = add(%7220, %7222);
  %7225 = where(%7223, %7224, %7220);
  %7226 = cast(%5273, dtype="int64");
  %7227 = shape_of(%5256, dtype="int64");
  %7228 = take(%7227, 0);
  %7229 = less(%7226, 0);
  %7230 = add(%7226, %7228);
  %7231 = where(%7229, %7230, %7226);
  %7232 = cast(%5337, dtype="int64");
  %7233 = shape_of(%5320, dtype="int64");
  %7234 = take(%7233, 0);
  %7235 = less(%7232, 0);
  %7236 = add(%7232, %7234);
  %7237 = where(%7235, %7236, %7232);
  %7238 = cast(%5401, dtype="int64");
  %7239 = shape_of(%5384, dtype="int64");
  %7240 = take(%7239, 0);
  %7241 = less(%7238, 0);
  %7242 = add(%7238, %7240);
  %7243 = where(%7241, %7242, %7238);
  %7244 = cast(%5465, dtype="int64");
  %7245 = shape_of(%5448, dtype="int64");
  %7246 = take(%7245, 0);
  %7247 = less(%7244, 0);
  %7248 = add(%7244, %7246);
  %7249 = where(%7247, %7248, %7244);
  %7250 = cast(%5529, dtype="int64");
  %7251 = shape_of(%5512, dtype="int64");
  %7252 = take(%7251, 0);
  %7253 = less(%7250, 0);
  %7254 = add(%7250, %7252);
  %7255 = where(%7253, %7254, %7250);
  %7256 = cast(%5593, dtype="int64");
  %7257 = shape_of(%5576, dtype="int64");
  %7258 = take(%7257, 0);
  %7259 = less(%7256, 0);
  %7260 = add(%7256, %7258);
  %7261 = where(%7259, %7260, %7256);
  %7262 = cast(%5657, dtype="int64");
  %7263 = shape_of(%5640, dtype="int64");
  %7264 = take(%7263, 0);
  %7265 = less(%7262, 0);
  %7266 = add(%7262, %7264);
  %7267 = where(%7265, %7266, %7262);
  %7268 = cast(%5721, dtype="int64");
  %7269 = shape_of(%5704, dtype="int64");
  %7270 = take(%7269, 0);
  %7271 = less(%7268, 0);
  %7272 = add(%7268, %7270);
  %7273 = where(%7271, %7272, %7268);
  %7274 = cast(%5785, dtype="int64");
  %7275 = shape_of(%5768, dtype="int64");
  %7276 = take(%7275, 0);
  %7277 = less(%7274, 0);
  %7278 = add(%7274, %7276);
  %7279 = where(%7277, %7278, %7274);
  %7280 = cast(%5849, dtype="int64");
  %7281 = shape_of(%5832, dtype="int64");
  %7282 = take(%7281, 0);
  %7283 = less(%7280, 0);
  %7284 = add(%7280, %7282);
  %7285 = where(%7283, %7284, %7280);
  %7286 = cast(%5913, dtype="int64");
  %7287 = shape_of(%5896, dtype="int64");
  %7288 = take(%7287, 0);
  %7289 = less(%7286, 0);
  %7290 = add(%7286, %7288);
  %7291 = where(%7289, %7290, %7286);
  %7292 = cast(%5977, dtype="int64");
  %7293 = shape_of(%5960, dtype="int64");
  %7294 = take(%7293, 0);
  %7295 = less(%7292, 0);
  %7296 = add(%7292, %7294);
  %7297 = where(%7295, %7296, %7292);
  %7298 = cast(%6041, dtype="int64");
  %7299 = shape_of(%6024, dtype="int64");
  %7300 = take(%7299, 0);
  %7301 = less(%7298, 0);
  %7302 = add(%7298, %7300);
  %7303 = where(%7301, %7302, %7298);
  %7304 = cast(%6105, dtype="int64");
  %7305 = shape_of(%6088, dtype="int64");
  %7306 = take(%7305, 0);
  %7307 = less(%7304, 0);
  %7308 = add(%7304, %7306);
  %7309 = where(%7307, %7308, %7304);
  %7310 = cast(%6169, dtype="int64");
  %7311 = shape_of(%6152, dtype="int64");
  %7312 = take(%7311, 0);
  %7313 = less(%7310, 0);
  %7314 = add(%7310, %7312);
  %7315 = where(%7313, %7314, %7310);
  %7316 = cast(%6233, dtype="int64");
  %7317 = shape_of(%6216, dtype="int64");
  %7318 = take(%7317, 0);
  %7319 = less(%7316, 0);
  %7320 = add(%7316, %7318);
  %7321 = where(%7319, %7320, %7316);
  %7322 = cast(%6297, dtype="int64");
  %7323 = shape_of(%6280, dtype="int64");
  %7324 = take(%7323, 0);
  %7325 = less(%7322, 0);
  %7326 = add(%7322, %7324);
  %7327 = where(%7325, %7326, %7322);
  %7328 = cast(%6361, dtype="int64");
  %7329 = shape_of(%6344, dtype="int64");
  %7330 = take(%7329, 0);
  %7331 = less(%7328, 0);
  %7332 = add(%7328, %7330);
  %7333 = where(%7331, %7332, %7328);
  %7334 = cast(%6425, dtype="int64");
  %7335 = shape_of(%6408, dtype="int64");
  %7336 = take(%7335, 0);
  %7337 = less(%7334, 0);
  %7338 = add(%7334, %7336);
  %7339 = where(%7337, %7338, %7334);
  %7340 = cast(%6489, dtype="int64");
  %7341 = shape_of(%6472, dtype="int64");
  %7342 = take(%7341, 0);
  %7343 = less(%7340, 0);
  %7344 = add(%7340, %7342);
  %7345 = where(%7343, %7344, %7340);
  %7346 = cast(%6553, dtype="int64");
  %7347 = shape_of(%6536, dtype="int64");
  %7348 = take(%7347, 0);
  %7349 = less(%7346, 0);
  %7350 = add(%7346, %7348);
  %7351 = where(%7349, %7350, %7346);
  %7352 = cast(%6617, dtype="int64");
  %7353 = shape_of(%6600, dtype="int64");
  %7354 = take(%7353, 0);
  %7355 = less(%7352, 0);
  %7356 = add(%7352, %7354);
  %7357 = where(%7355, %7356, %7352);
  %7358 = cast(%6681, dtype="int64");
  %7359 = shape_of(%6664, dtype="int64");
  %7360 = take(%7359, 0);
  %7361 = less(%7358, 0);
  %7362 = add(%7358, %7360);
  %7363 = where(%7361, %7362, %7358);
  %7364 = cast(%6745, dtype="int64");
  %7365 = shape_of(%6728, dtype="int64");
  %7366 = take(%7365, 0);
  %7367 = less(%7364, 0);
  %7368 = add(%7364, %7366);
  %7369 = where(%7367, %7368, %7364);
  %7370 = cast(%6809, dtype="int64");
  %7371 = shape_of(%6792, dtype="int64");
  %7372 = take(%7371, 0);
  %7373 = less(%7370, 0);
  %7374 = add(%7370, %7372);
  %7375 = where(%7373, %7374, %7370);
  %7376 = take(%1736, %6901, axis=0);
  %7377 = take(%1800, %6907, axis=0);
  %7378 = take(%1864, %6913, axis=0);
  %7379 = take(%1928, %6919, axis=0);
  %7380 = take(%1992, %6925, axis=0);
  %7381 = take(%2056, %6931, axis=0);
  %7382 = take(%2120, %6937, axis=0);
  %7383 = take(%2184, %6943, axis=0);
  %7384 = take(%2248, %6949, axis=0);
  %7385 = take(%2312, %6955, axis=0);
  %7386 = take(%2376, %6961, axis=0);
  %7387 = take(%2440, %6967, axis=0);
  %7388 = take(%2504, %6973, axis=0);
  %7389 = take(%2568, %6979, axis=0);
  %7390 = take(%2632, %6985, axis=0);
  %7391 = take(%2696, %6991, axis=0);
  %7392 = take(%2760, %6997, axis=0);
  %7393 = take(%2824, %7003, axis=0);
  %7394 = take(%2888, %7009, axis=0);
  %7395 = take(%2952, %7015, axis=0);
  %7396 = take(%3016, %7021, axis=0);
  %7397 = take(%3080, %7027, axis=0);
  %7398 = take(%3144, %7033, axis=0);
  %7399 = take(%3208, %7039, axis=0);
  %7400 = take(%3272, %7045, axis=0);
  %7401 = take(%3336, %7051, axis=0);
  %7402 = take(%3400, %7057, axis=0);
  %7403 = take(%3464, %7063, axis=0);
  %7404 = take(%3528, %7069, axis=0);
  %7405 = take(%3592, %7075, axis=0);
  %7406 = take(%3656, %7081, axis=0);
  %7407 = take(%3720, %7087, axis=0);
  %7408 = take(%3784, %7093, axis=0);
  %7409 = take(%3848, %7099, axis=0);
  %7410 = take(%3912, %7105, axis=0);
  %7411 = take(%3976, %7111, axis=0);
  %7412 = take(%4040, %7117, axis=0);
  %7413 = take(%4104, %7123, axis=0);
  %7414 = take(%4168, %7129, axis=0);
  %7415 = take(%4232, %7135, axis=0);
  %7416 = take(%4296, %7141, axis=0);
  %7417 = take(%4360, %7147, axis=0);
  %7418 = take(%4424, %7153, axis=0);
  %7419 = take(%4488, %7159, axis=0);
  %7420 = take(%4552, %7165, axis=0);
  %7421 = take(%4616, %7171, axis=0);
  %7422 = take(%4680, %7177, axis=0);
  %7423 = take(%4744, %7183, axis=0);
  %7424 = take(%4808, %7189, axis=0);
  %7425 = take(%4872, %7195, axis=0);
  %7426 = take(%4936, %7201, axis=0);
  %7427 = take(%5000, %7207, axis=0);
  %7428 = take(%5064, %7213, axis=0);
  %7429 = take(%5128, %7219, axis=0);
  %7430 = take(%5192, %7225, axis=0);
  %7431 = take(%5256, %7231, axis=0);
  %7432 = take(%5320, %7237, axis=0);
  %7433 = take(%5384, %7243, axis=0);
  %7434 = take(%5448, %7249, axis=0);
  %7435 = take(%5512, %7255, axis=0);
  %7436 = take(%5576, %7261, axis=0);
  %7437 = take(%5640, %7267, axis=0);
  %7438 = take(%5704, %7273, axis=0);
  %7439 = take(%5768, %7279, axis=0);
  %7440 = take(%5832, %7285, axis=0);
  %7441 = take(%5896, %7291, axis=0);
  %7442 = take(%5960, %7297, axis=0);
  %7443 = take(%6024, %7303, axis=0);
  %7444 = take(%6088, %7309, axis=0);
  %7445 = take(%6152, %7315, axis=0);
  %7446 = take(%6216, %7321, axis=0);
  %7447 = take(%6280, %7327, axis=0);
  %7448 = take(%6344, %7333, axis=0);
  %7449 = take(%6408, %7339, axis=0);
  %7450 = take(%6472, %7345, axis=0);
  %7451 = take(%6536, %7351, axis=0);
  %7452 = take(%6600, %7357, axis=0);
  %7453 = take(%6664, %7363, axis=0);
  %7454 = take(%6728, %7369, axis=0);
  %7455 = take(%6792, %7375, axis=0);
  %7456 = (%7376, %7377, %7378, %7379, %7380, %7381, %7382, %7383, %7384, %7385, %7386, %7387, %7388, %7389, %7390, %7391, %7392, %7393, %7394, %7395, %7396, %7397, %7398, %7399, %7400, %7401, %7402, %7403, %7404, %7405, %7406, %7407, %7408, %7409, %7410, %7411, %7412, %7413, %7414, %7415, %7416, %7417, %7418, %7419, %7420, %7421, %7422, %7423, %7424, %7425, %7426, %7427, %7428, %7429, %7430, %7431, %7432, %7433, %7434, %7435, %7436, %7437, %7438, %7439, %7440, %7441, %7442, %7443, %7444, %7445, %7446, %7447, %7448, %7449, %7450, %7451, %7452, %7453, %7454, %7455);
  %7457 = concatenate(%7456);
  %7458 = shape_of(%7457, dtype="int64");
  %7459 = (meta[relay.Constant][1526], %7458);
  %7460 = concatenate(%7459);
  %7461 = cast(%7460, dtype="int32");
  %7462 = min(%7461, axis=[0]);
  %7463 = cast(%7462, dtype="int64");
  %7464 = expand_dims(%7463, axis=0);
  %7465 = dyn.topk(%7457, %7464, k=None, axis=0, dtype="int64");
  %7466 = %7465.1;
  %7467 = cast(%7466, dtype="int64");
  %7468 = concatenate(%6895);
  %7469 = shape_of(%7468, dtype="int64");
  %7470 = take(%7469, 0);
  %7471 = less(%7467, 0);
  %7472 = add(%7467, %7470);
  %7473 = where(%7471, %7472, %7467);
  %7474 = shape_of(%6815, dtype="int32");
  %7475 = cast_like(%7474, meta[relay.Constant][1528]);
  %7476 = slice_like(%7475, meta[relay.Constant][1528], axes=None);
  %7477 = add(meta[relay.Constant][1528], %7476);
  %7478 = where(meta[relay.Constant][1527], %7477, meta[relay.Constant][1528]);
  %7479 = greater_equal(%7478, %7476);
  %7480 = shape_of(%6815, dtype="int64");
  %7481 = where(%7479, %7476, %7478);
  %7482 = scatter(%7480, meta[relay.Constant][1529], meta[relay.Constant][1530]);
  %7483 = dyn.strided_slice(%6815, %7481, %7482, meta[relay.Constant][1531], begin=None, end=None, strides=None, axes=None);
  %7484 = take(%7483, 0, axis=1);
  %7485 = shape_of(%7484, dtype="int64");
  %7486 = shape_of(%6816, dtype="int32");
  %7487 = cast_like(%7486, meta[relay.Constant][1533]);
  %7488 = slice_like(%7487, meta[relay.Constant][1533], axes=None);
  %7489 = add(meta[relay.Constant][1533], %7488);
  %7490 = where(meta[relay.Constant][1532], %7489, meta[relay.Constant][1533]);
  %7491 = greater_equal(%7490, %7488);
  %7492 = shape_of(%6816, dtype="int64");
  %7493 = where(%7491, %7488, %7490);
  %7494 = scatter(%7492, meta[relay.Constant][1534], meta[relay.Constant][1535]);
  %7495 = dyn.strided_slice(%6816, %7493, %7494, meta[relay.Constant][1536], begin=None, end=None, strides=None, axes=None);
  %7496 = take(%7495, 0, axis=1);
  %7497 = shape_of(%7496, dtype="int64");
  %7498 = shape_of(%6817, dtype="int32");
  %7499 = cast_like(%7498, meta[relay.Constant][1538]);
  %7500 = slice_like(%7499, meta[relay.Constant][1538], axes=None);
  %7501 = add(meta[relay.Constant][1538], %7500);
  %7502 = where(meta[relay.Constant][1537], %7501, meta[relay.Constant][1538]);
  %7503 = greater_equal(%7502, %7500);
  %7504 = shape_of(%6817, dtype="int64");
  %7505 = where(%7503, %7500, %7502);
  %7506 = scatter(%7504, meta[relay.Constant][1539], meta[relay.Constant][1540]);
  %7507 = dyn.strided_slice(%6817, %7505, %7506, meta[relay.Constant][1541], begin=None, end=None, strides=None, axes=None);
  %7508 = take(%7507, 0, axis=1);
  %7509 = shape_of(%7508, dtype="int64");
  %7510 = shape_of(%6818, dtype="int32");
  %7511 = cast_like(%7510, meta[relay.Constant][1543]);
  %7512 = slice_like(%7511, meta[relay.Constant][1543], axes=None);
  %7513 = add(meta[relay.Constant][1543], %7512);
  %7514 = where(meta[relay.Constant][1542], %7513, meta[relay.Constant][1543]);
  %7515 = greater_equal(%7514, %7512);
  %7516 = shape_of(%6818, dtype="int64");
  %7517 = where(%7515, %7512, %7514);
  %7518 = scatter(%7516, meta[relay.Constant][1544], meta[relay.Constant][1545]);
  %7519 = dyn.strided_slice(%6818, %7517, %7518, meta[relay.Constant][1546], begin=None, end=None, strides=None, axes=None);
  %7520 = take(%7519, 0, axis=1);
  %7521 = shape_of(%7520, dtype="int64");
  %7522 = shape_of(%6819, dtype="int32");
  %7523 = cast_like(%7522, meta[relay.Constant][1548]);
  %7524 = slice_like(%7523, meta[relay.Constant][1548], axes=None);
  %7525 = add(meta[relay.Constant][1548], %7524);
  %7526 = where(meta[relay.Constant][1547], %7525, meta[relay.Constant][1548]);
  %7527 = greater_equal(%7526, %7524);
  %7528 = shape_of(%6819, dtype="int64");
  %7529 = where(%7527, %7524, %7526);
  %7530 = scatter(%7528, meta[relay.Constant][1549], meta[relay.Constant][1550]);
  %7531 = dyn.strided_slice(%6819, %7529, %7530, meta[relay.Constant][1551], begin=None, end=None, strides=None, axes=None);
  %7532 = take(%7531, 0, axis=1);
  %7533 = shape_of(%7532, dtype="int64");
  %7534 = shape_of(%6820, dtype="int32");
  %7535 = cast_like(%7534, meta[relay.Constant][1553]);
  %7536 = slice_like(%7535, meta[relay.Constant][1553], axes=None);
  %7537 = add(meta[relay.Constant][1553], %7536);
  %7538 = where(meta[relay.Constant][1552], %7537, meta[relay.Constant][1553]);
  %7539 = greater_equal(%7538, %7536);
  %7540 = shape_of(%6820, dtype="int64");
  %7541 = where(%7539, %7536, %7538);
  %7542 = scatter(%7540, meta[relay.Constant][1554], meta[relay.Constant][1555]);
  %7543 = dyn.strided_slice(%6820, %7541, %7542, meta[relay.Constant][1556], begin=None, end=None, strides=None, axes=None);
  %7544 = take(%7543, 0, axis=1);
  %7545 = shape_of(%7544, dtype="int64");
  %7546 = shape_of(%6821, dtype="int32");
  %7547 = cast_like(%7546, meta[relay.Constant][1558]);
  %7548 = slice_like(%7547, meta[relay.Constant][1558], axes=None);
  %7549 = add(meta[relay.Constant][1558], %7548);
  %7550 = where(meta[relay.Constant][1557], %7549, meta[relay.Constant][1558]);
  %7551 = greater_equal(%7550, %7548);
  %7552 = shape_of(%6821, dtype="int64");
  %7553 = where(%7551, %7548, %7550);
  %7554 = scatter(%7552, meta[relay.Constant][1559], meta[relay.Constant][1560]);
  %7555 = dyn.strided_slice(%6821, %7553, %7554, meta[relay.Constant][1561], begin=None, end=None, strides=None, axes=None);
  %7556 = take(%7555, 0, axis=1);
  %7557 = shape_of(%7556, dtype="int64");
  %7558 = shape_of(%6822, dtype="int32");
  %7559 = cast_like(%7558, meta[relay.Constant][1563]);
  %7560 = slice_like(%7559, meta[relay.Constant][1563], axes=None);
  %7561 = add(meta[relay.Constant][1563], %7560);
  %7562 = where(meta[relay.Constant][1562], %7561, meta[relay.Constant][1563]);
  %7563 = greater_equal(%7562, %7560);
  %7564 = shape_of(%6822, dtype="int64");
  %7565 = where(%7563, %7560, %7562);
  %7566 = scatter(%7564, meta[relay.Constant][1564], meta[relay.Constant][1565]);
  %7567 = dyn.strided_slice(%6822, %7565, %7566, meta[relay.Constant][1566], begin=None, end=None, strides=None, axes=None);
  %7568 = take(%7567, 0, axis=1);
  %7569 = shape_of(%7568, dtype="int64");
  %7570 = shape_of(%6823, dtype="int32");
  %7571 = cast_like(%7570, meta[relay.Constant][1568]);
  %7572 = slice_like(%7571, meta[relay.Constant][1568], axes=None);
  %7573 = add(meta[relay.Constant][1568], %7572);
  %7574 = where(meta[relay.Constant][1567], %7573, meta[relay.Constant][1568]);
  %7575 = greater_equal(%7574, %7572);
  %7576 = shape_of(%6823, dtype="int64");
  %7577 = where(%7575, %7572, %7574);
  %7578 = scatter(%7576, meta[relay.Constant][1569], meta[relay.Constant][1570]);
  %7579 = dyn.strided_slice(%6823, %7577, %7578, meta[relay.Constant][1571], begin=None, end=None, strides=None, axes=None);
  %7580 = take(%7579, 0, axis=1);
  %7581 = shape_of(%7580, dtype="int64");
  %7582 = shape_of(%6824, dtype="int32");
  %7583 = cast_like(%7582, meta[relay.Constant][1573]);
  %7584 = slice_like(%7583, meta[relay.Constant][1573], axes=None);
  %7585 = add(meta[relay.Constant][1573], %7584);
  %7586 = where(meta[relay.Constant][1572], %7585, meta[relay.Constant][1573]);
  %7587 = greater_equal(%7586, %7584);
  %7588 = shape_of(%6824, dtype="int64");
  %7589 = where(%7587, %7584, %7586);
  %7590 = scatter(%7588, meta[relay.Constant][1574], meta[relay.Constant][1575]);
  %7591 = dyn.strided_slice(%6824, %7589, %7590, meta[relay.Constant][1576], begin=None, end=None, strides=None, axes=None);
  %7592 = take(%7591, 0, axis=1);
  %7593 = shape_of(%7592, dtype="int64");
  %7594 = shape_of(%6825, dtype="int32");
  %7595 = cast_like(%7594, meta[relay.Constant][1578]);
  %7596 = slice_like(%7595, meta[relay.Constant][1578], axes=None);
  %7597 = add(meta[relay.Constant][1578], %7596);
  %7598 = where(meta[relay.Constant][1577], %7597, meta[relay.Constant][1578]);
  %7599 = greater_equal(%7598, %7596);
  %7600 = shape_of(%6825, dtype="int64");
  %7601 = where(%7599, %7596, %7598);
  %7602 = scatter(%7600, meta[relay.Constant][1579], meta[relay.Constant][1580]);
  %7603 = dyn.strided_slice(%6825, %7601, %7602, meta[relay.Constant][1581], begin=None, end=None, strides=None, axes=None);
  %7604 = take(%7603, 0, axis=1);
  %7605 = shape_of(%7604, dtype="int64");
  %7606 = shape_of(%6826, dtype="int32");
  %7607 = cast_like(%7606, meta[relay.Constant][1583]);
  %7608 = slice_like(%7607, meta[relay.Constant][1583], axes=None);
  %7609 = add(meta[relay.Constant][1583], %7608);
  %7610 = where(meta[relay.Constant][1582], %7609, meta[relay.Constant][1583]);
  %7611 = greater_equal(%7610, %7608);
  %7612 = shape_of(%6826, dtype="int64");
  %7613 = where(%7611, %7608, %7610);
  %7614 = scatter(%7612, meta[relay.Constant][1584], meta[relay.Constant][1585]);
  %7615 = dyn.strided_slice(%6826, %7613, %7614, meta[relay.Constant][1586], begin=None, end=None, strides=None, axes=None);
  %7616 = take(%7615, 0, axis=1);
  %7617 = shape_of(%7616, dtype="int64");
  %7618 = shape_of(%6827, dtype="int32");
  %7619 = cast_like(%7618, meta[relay.Constant][1588]);
  %7620 = slice_like(%7619, meta[relay.Constant][1588], axes=None);
  %7621 = add(meta[relay.Constant][1588], %7620);
  %7622 = where(meta[relay.Constant][1587], %7621, meta[relay.Constant][1588]);
  %7623 = greater_equal(%7622, %7620);
  %7624 = shape_of(%6827, dtype="int64");
  %7625 = where(%7623, %7620, %7622);
  %7626 = scatter(%7624, meta[relay.Constant][1589], meta[relay.Constant][1590]);
  %7627 = dyn.strided_slice(%6827, %7625, %7626, meta[relay.Constant][1591], begin=None, end=None, strides=None, axes=None);
  %7628 = take(%7627, 0, axis=1);
  %7629 = shape_of(%7628, dtype="int64");
  %7630 = shape_of(%6828, dtype="int32");
  %7631 = cast_like(%7630, meta[relay.Constant][1593]);
  %7632 = slice_like(%7631, meta[relay.Constant][1593], axes=None);
  %7633 = add(meta[relay.Constant][1593], %7632);
  %7634 = where(meta[relay.Constant][1592], %7633, meta[relay.Constant][1593]);
  %7635 = greater_equal(%7634, %7632);
  %7636 = shape_of(%6828, dtype="int64");
  %7637 = where(%7635, %7632, %7634);
  %7638 = scatter(%7636, meta[relay.Constant][1594], meta[relay.Constant][1595]);
  %7639 = dyn.strided_slice(%6828, %7637, %7638, meta[relay.Constant][1596], begin=None, end=None, strides=None, axes=None);
  %7640 = take(%7639, 0, axis=1);
  %7641 = shape_of(%7640, dtype="int64");
  %7642 = shape_of(%6829, dtype="int32");
  %7643 = cast_like(%7642, meta[relay.Constant][1598]);
  %7644 = slice_like(%7643, meta[relay.Constant][1598], axes=None);
  %7645 = add(meta[relay.Constant][1598], %7644);
  %7646 = where(meta[relay.Constant][1597], %7645, meta[relay.Constant][1598]);
  %7647 = greater_equal(%7646, %7644);
  %7648 = shape_of(%6829, dtype="int64");
  %7649 = where(%7647, %7644, %7646);
  %7650 = scatter(%7648, meta[relay.Constant][1599], meta[relay.Constant][1600]);
  %7651 = dyn.strided_slice(%6829, %7649, %7650, meta[relay.Constant][1601], begin=None, end=None, strides=None, axes=None);
  %7652 = take(%7651, 0, axis=1);
  %7653 = shape_of(%7652, dtype="int64");
  %7654 = shape_of(%6830, dtype="int32");
  %7655 = cast_like(%7654, meta[relay.Constant][1603]);
  %7656 = slice_like(%7655, meta[relay.Constant][1603], axes=None);
  %7657 = add(meta[relay.Constant][1603], %7656);
  %7658 = where(meta[relay.Constant][1602], %7657, meta[relay.Constant][1603]);
  %7659 = greater_equal(%7658, %7656);
  %7660 = shape_of(%6830, dtype="int64");
  %7661 = where(%7659, %7656, %7658);
  %7662 = scatter(%7660, meta[relay.Constant][1604], meta[relay.Constant][1605]);
  %7663 = dyn.strided_slice(%6830, %7661, %7662, meta[relay.Constant][1606], begin=None, end=None, strides=None, axes=None);
  %7664 = take(%7663, 0, axis=1);
  %7665 = shape_of(%7664, dtype="int64");
  %7666 = shape_of(%6831, dtype="int32");
  %7667 = cast_like(%7666, meta[relay.Constant][1608]);
  %7668 = slice_like(%7667, meta[relay.Constant][1608], axes=None);
  %7669 = add(meta[relay.Constant][1608], %7668);
  %7670 = where(meta[relay.Constant][1607], %7669, meta[relay.Constant][1608]);
  %7671 = greater_equal(%7670, %7668);
  %7672 = shape_of(%6831, dtype="int64");
  %7673 = where(%7671, %7668, %7670);
  %7674 = scatter(%7672, meta[relay.Constant][1609], meta[relay.Constant][1610]);
  %7675 = dyn.strided_slice(%6831, %7673, %7674, meta[relay.Constant][1611], begin=None, end=None, strides=None, axes=None);
  %7676 = take(%7675, 0, axis=1);
  %7677 = shape_of(%7676, dtype="int64");
  %7678 = shape_of(%6832, dtype="int32");
  %7679 = cast_like(%7678, meta[relay.Constant][1613]);
  %7680 = slice_like(%7679, meta[relay.Constant][1613], axes=None);
  %7681 = add(meta[relay.Constant][1613], %7680);
  %7682 = where(meta[relay.Constant][1612], %7681, meta[relay.Constant][1613]);
  %7683 = greater_equal(%7682, %7680);
  %7684 = shape_of(%6832, dtype="int64");
  %7685 = where(%7683, %7680, %7682);
  %7686 = scatter(%7684, meta[relay.Constant][1614], meta[relay.Constant][1615]);
  %7687 = dyn.strided_slice(%6832, %7685, %7686, meta[relay.Constant][1616], begin=None, end=None, strides=None, axes=None);
  %7688 = take(%7687, 0, axis=1);
  %7689 = shape_of(%7688, dtype="int64");
  %7690 = shape_of(%6833, dtype="int32");
  %7691 = cast_like(%7690, meta[relay.Constant][1618]);
  %7692 = slice_like(%7691, meta[relay.Constant][1618], axes=None);
  %7693 = add(meta[relay.Constant][1618], %7692);
  %7694 = where(meta[relay.Constant][1617], %7693, meta[relay.Constant][1618]);
  %7695 = greater_equal(%7694, %7692);
  %7696 = shape_of(%6833, dtype="int64");
  %7697 = where(%7695, %7692, %7694);
  %7698 = scatter(%7696, meta[relay.Constant][1619], meta[relay.Constant][1620]);
  %7699 = dyn.strided_slice(%6833, %7697, %7698, meta[relay.Constant][1621], begin=None, end=None, strides=None, axes=None);
  %7700 = take(%7699, 0, axis=1);
  %7701 = shape_of(%7700, dtype="int64");
  %7702 = shape_of(%6834, dtype="int32");
  %7703 = cast_like(%7702, meta[relay.Constant][1623]);
  %7704 = slice_like(%7703, meta[relay.Constant][1623], axes=None);
  %7705 = add(meta[relay.Constant][1623], %7704);
  %7706 = where(meta[relay.Constant][1622], %7705, meta[relay.Constant][1623]);
  %7707 = greater_equal(%7706, %7704);
  %7708 = shape_of(%6834, dtype="int64");
  %7709 = where(%7707, %7704, %7706);
  %7710 = scatter(%7708, meta[relay.Constant][1624], meta[relay.Constant][1625]);
  %7711 = dyn.strided_slice(%6834, %7709, %7710, meta[relay.Constant][1626], begin=None, end=None, strides=None, axes=None);
  %7712 = take(%7711, 0, axis=1);
  %7713 = shape_of(%7712, dtype="int64");
  %7714 = shape_of(%6835, dtype="int32");
  %7715 = cast_like(%7714, meta[relay.Constant][1628]);
  %7716 = slice_like(%7715, meta[relay.Constant][1628], axes=None);
  %7717 = add(meta[relay.Constant][1628], %7716);
  %7718 = where(meta[relay.Constant][1627], %7717, meta[relay.Constant][1628]);
  %7719 = greater_equal(%7718, %7716);
  %7720 = shape_of(%6835, dtype="int64");
  %7721 = where(%7719, %7716, %7718);
  %7722 = scatter(%7720, meta[relay.Constant][1629], meta[relay.Constant][1630]);
  %7723 = dyn.strided_slice(%6835, %7721, %7722, meta[relay.Constant][1631], begin=None, end=None, strides=None, axes=None);
  %7724 = take(%7723, 0, axis=1);
  %7725 = shape_of(%7724, dtype="int64");
  %7726 = shape_of(%6836, dtype="int32");
  %7727 = cast_like(%7726, meta[relay.Constant][1633]);
  %7728 = slice_like(%7727, meta[relay.Constant][1633], axes=None);
  %7729 = add(meta[relay.Constant][1633], %7728);
  %7730 = where(meta[relay.Constant][1632], %7729, meta[relay.Constant][1633]);
  %7731 = greater_equal(%7730, %7728);
  %7732 = shape_of(%6836, dtype="int64");
  %7733 = where(%7731, %7728, %7730);
  %7734 = scatter(%7732, meta[relay.Constant][1634], meta[relay.Constant][1635]);
  %7735 = dyn.strided_slice(%6836, %7733, %7734, meta[relay.Constant][1636], begin=None, end=None, strides=None, axes=None);
  %7736 = take(%7735, 0, axis=1);
  %7737 = shape_of(%7736, dtype="int64");
  %7738 = shape_of(%6837, dtype="int32");
  %7739 = cast_like(%7738, meta[relay.Constant][1638]);
  %7740 = slice_like(%7739, meta[relay.Constant][1638], axes=None);
  %7741 = add(meta[relay.Constant][1638], %7740);
  %7742 = where(meta[relay.Constant][1637], %7741, meta[relay.Constant][1638]);
  %7743 = greater_equal(%7742, %7740);
  %7744 = shape_of(%6837, dtype="int64");
  %7745 = where(%7743, %7740, %7742);
  %7746 = scatter(%7744, meta[relay.Constant][1639], meta[relay.Constant][1640]);
  %7747 = dyn.strided_slice(%6837, %7745, %7746, meta[relay.Constant][1641], begin=None, end=None, strides=None, axes=None);
  %7748 = take(%7747, 0, axis=1);
  %7749 = shape_of(%7748, dtype="int64");
  %7750 = shape_of(%6838, dtype="int32");
  %7751 = cast_like(%7750, meta[relay.Constant][1643]);
  %7752 = slice_like(%7751, meta[relay.Constant][1643], axes=None);
  %7753 = add(meta[relay.Constant][1643], %7752);
  %7754 = where(meta[relay.Constant][1642], %7753, meta[relay.Constant][1643]);
  %7755 = greater_equal(%7754, %7752);
  %7756 = shape_of(%6838, dtype="int64");
  %7757 = where(%7755, %7752, %7754);
  %7758 = scatter(%7756, meta[relay.Constant][1644], meta[relay.Constant][1645]);
  %7759 = dyn.strided_slice(%6838, %7757, %7758, meta[relay.Constant][1646], begin=None, end=None, strides=None, axes=None);
  %7760 = take(%7759, 0, axis=1);
  %7761 = shape_of(%7760, dtype="int64");
  %7762 = shape_of(%6839, dtype="int32");
  %7763 = cast_like(%7762, meta[relay.Constant][1648]);
  %7764 = slice_like(%7763, meta[relay.Constant][1648], axes=None);
  %7765 = add(meta[relay.Constant][1648], %7764);
  %7766 = where(meta[relay.Constant][1647], %7765, meta[relay.Constant][1648]);
  %7767 = greater_equal(%7766, %7764);
  %7768 = shape_of(%6839, dtype="int64");
  %7769 = where(%7767, %7764, %7766);
  %7770 = scatter(%7768, meta[relay.Constant][1649], meta[relay.Constant][1650]);
  %7771 = dyn.strided_slice(%6839, %7769, %7770, meta[relay.Constant][1651], begin=None, end=None, strides=None, axes=None);
  %7772 = take(%7771, 0, axis=1);
  %7773 = shape_of(%7772, dtype="int64");
  %7774 = shape_of(%6840, dtype="int32");
  %7775 = cast_like(%7774, meta[relay.Constant][1653]);
  %7776 = slice_like(%7775, meta[relay.Constant][1653], axes=None);
  %7777 = add(meta[relay.Constant][1653], %7776);
  %7778 = where(meta[relay.Constant][1652], %7777, meta[relay.Constant][1653]);
  %7779 = greater_equal(%7778, %7776);
  %7780 = shape_of(%6840, dtype="int64");
  %7781 = where(%7779, %7776, %7778);
  %7782 = scatter(%7780, meta[relay.Constant][1654], meta[relay.Constant][1655]);
  %7783 = dyn.strided_slice(%6840, %7781, %7782, meta[relay.Constant][1656], begin=None, end=None, strides=None, axes=None);
  %7784 = take(%7783, 0, axis=1);
  %7785 = shape_of(%7784, dtype="int64");
  %7786 = shape_of(%6841, dtype="int32");
  %7787 = cast_like(%7786, meta[relay.Constant][1658]);
  %7788 = slice_like(%7787, meta[relay.Constant][1658], axes=None);
  %7789 = add(meta[relay.Constant][1658], %7788);
  %7790 = where(meta[relay.Constant][1657], %7789, meta[relay.Constant][1658]);
  %7791 = greater_equal(%7790, %7788);
  %7792 = shape_of(%6841, dtype="int64");
  %7793 = where(%7791, %7788, %7790);
  %7794 = scatter(%7792, meta[relay.Constant][1659], meta[relay.Constant][1660]);
  %7795 = dyn.strided_slice(%6841, %7793, %7794, meta[relay.Constant][1661], begin=None, end=None, strides=None, axes=None);
  %7796 = take(%7795, 0, axis=1);
  %7797 = shape_of(%7796, dtype="int64");
  %7798 = shape_of(%6842, dtype="int32");
  %7799 = cast_like(%7798, meta[relay.Constant][1663]);
  %7800 = slice_like(%7799, meta[relay.Constant][1663], axes=None);
  %7801 = add(meta[relay.Constant][1663], %7800);
  %7802 = where(meta[relay.Constant][1662], %7801, meta[relay.Constant][1663]);
  %7803 = greater_equal(%7802, %7800);
  %7804 = shape_of(%6842, dtype="int64");
  %7805 = where(%7803, %7800, %7802);
  %7806 = scatter(%7804, meta[relay.Constant][1664], meta[relay.Constant][1665]);
  %7807 = dyn.strided_slice(%6842, %7805, %7806, meta[relay.Constant][1666], begin=None, end=None, strides=None, axes=None);
  %7808 = take(%7807, 0, axis=1);
  %7809 = shape_of(%7808, dtype="int64");
  %7810 = shape_of(%6843, dtype="int32");
  %7811 = cast_like(%7810, meta[relay.Constant][1668]);
  %7812 = slice_like(%7811, meta[relay.Constant][1668], axes=None);
  %7813 = add(meta[relay.Constant][1668], %7812);
  %7814 = where(meta[relay.Constant][1667], %7813, meta[relay.Constant][1668]);
  %7815 = greater_equal(%7814, %7812);
  %7816 = shape_of(%6843, dtype="int64");
  %7817 = where(%7815, %7812, %7814);
  %7818 = scatter(%7816, meta[relay.Constant][1669], meta[relay.Constant][1670]);
  %7819 = dyn.strided_slice(%6843, %7817, %7818, meta[relay.Constant][1671], begin=None, end=None, strides=None, axes=None);
  %7820 = take(%7819, 0, axis=1);
  %7821 = shape_of(%7820, dtype="int64");
  %7822 = shape_of(%6844, dtype="int32");
  %7823 = cast_like(%7822, meta[relay.Constant][1673]);
  %7824 = slice_like(%7823, meta[relay.Constant][1673], axes=None);
  %7825 = add(meta[relay.Constant][1673], %7824);
  %7826 = where(meta[relay.Constant][1672], %7825, meta[relay.Constant][1673]);
  %7827 = greater_equal(%7826, %7824);
  %7828 = shape_of(%6844, dtype="int64");
  %7829 = where(%7827, %7824, %7826);
  %7830 = scatter(%7828, meta[relay.Constant][1674], meta[relay.Constant][1675]);
  %7831 = dyn.strided_slice(%6844, %7829, %7830, meta[relay.Constant][1676], begin=None, end=None, strides=None, axes=None);
  %7832 = take(%7831, 0, axis=1);
  %7833 = shape_of(%7832, dtype="int64");
  %7834 = shape_of(%6845, dtype="int32");
  %7835 = cast_like(%7834, meta[relay.Constant][1678]);
  %7836 = slice_like(%7835, meta[relay.Constant][1678], axes=None);
  %7837 = add(meta[relay.Constant][1678], %7836);
  %7838 = where(meta[relay.Constant][1677], %7837, meta[relay.Constant][1678]);
  %7839 = greater_equal(%7838, %7836);
  %7840 = shape_of(%6845, dtype="int64");
  %7841 = where(%7839, %7836, %7838);
  %7842 = scatter(%7840, meta[relay.Constant][1679], meta[relay.Constant][1680]);
  %7843 = dyn.strided_slice(%6845, %7841, %7842, meta[relay.Constant][1681], begin=None, end=None, strides=None, axes=None);
  %7844 = take(%7843, 0, axis=1);
  %7845 = shape_of(%7844, dtype="int64");
  %7846 = shape_of(%6846, dtype="int32");
  %7847 = cast_like(%7846, meta[relay.Constant][1683]);
  %7848 = slice_like(%7847, meta[relay.Constant][1683], axes=None);
  %7849 = add(meta[relay.Constant][1683], %7848);
  %7850 = where(meta[relay.Constant][1682], %7849, meta[relay.Constant][1683]);
  %7851 = greater_equal(%7850, %7848);
  %7852 = shape_of(%6846, dtype="int64");
  %7853 = where(%7851, %7848, %7850);
  %7854 = scatter(%7852, meta[relay.Constant][1684], meta[relay.Constant][1685]);
  %7855 = dyn.strided_slice(%6846, %7853, %7854, meta[relay.Constant][1686], begin=None, end=None, strides=None, axes=None);
  %7856 = take(%7855, 0, axis=1);
  %7857 = shape_of(%7856, dtype="int64");
  %7858 = shape_of(%6847, dtype="int32");
  %7859 = cast_like(%7858, meta[relay.Constant][1688]);
  %7860 = slice_like(%7859, meta[relay.Constant][1688], axes=None);
  %7861 = add(meta[relay.Constant][1688], %7860);
  %7862 = where(meta[relay.Constant][1687], %7861, meta[relay.Constant][1688]);
  %7863 = greater_equal(%7862, %7860);
  %7864 = shape_of(%6847, dtype="int64");
  %7865 = where(%7863, %7860, %7862);
  %7866 = scatter(%7864, meta[relay.Constant][1689], meta[relay.Constant][1690]);
  %7867 = dyn.strided_slice(%6847, %7865, %7866, meta[relay.Constant][1691], begin=None, end=None, strides=None, axes=None);
  %7868 = take(%7867, 0, axis=1);
  %7869 = shape_of(%7868, dtype="int64");
  %7870 = shape_of(%6848, dtype="int32");
  %7871 = cast_like(%7870, meta[relay.Constant][1693]);
  %7872 = slice_like(%7871, meta[relay.Constant][1693], axes=None);
  %7873 = add(meta[relay.Constant][1693], %7872);
  %7874 = where(meta[relay.Constant][1692], %7873, meta[relay.Constant][1693]);
  %7875 = greater_equal(%7874, %7872);
  %7876 = shape_of(%6848, dtype="int64");
  %7877 = where(%7875, %7872, %7874);
  %7878 = scatter(%7876, meta[relay.Constant][1694], meta[relay.Constant][1695]);
  %7879 = dyn.strided_slice(%6848, %7877, %7878, meta[relay.Constant][1696], begin=None, end=None, strides=None, axes=None);
  %7880 = take(%7879, 0, axis=1);
  %7881 = shape_of(%7880, dtype="int64");
  %7882 = shape_of(%6849, dtype="int32");
  %7883 = cast_like(%7882, meta[relay.Constant][1698]);
  %7884 = slice_like(%7883, meta[relay.Constant][1698], axes=None);
  %7885 = add(meta[relay.Constant][1698], %7884);
  %7886 = where(meta[relay.Constant][1697], %7885, meta[relay.Constant][1698]);
  %7887 = greater_equal(%7886, %7884);
  %7888 = shape_of(%6849, dtype="int64");
  %7889 = where(%7887, %7884, %7886);
  %7890 = scatter(%7888, meta[relay.Constant][1699], meta[relay.Constant][1700]);
  %7891 = dyn.strided_slice(%6849, %7889, %7890, meta[relay.Constant][1701], begin=None, end=None, strides=None, axes=None);
  %7892 = take(%7891, 0, axis=1);
  %7893 = shape_of(%7892, dtype="int64");
  %7894 = shape_of(%6850, dtype="int32");
  %7895 = cast_like(%7894, meta[relay.Constant][1703]);
  %7896 = slice_like(%7895, meta[relay.Constant][1703], axes=None);
  %7897 = add(meta[relay.Constant][1703], %7896);
  %7898 = where(meta[relay.Constant][1702], %7897, meta[relay.Constant][1703]);
  %7899 = greater_equal(%7898, %7896);
  %7900 = shape_of(%6850, dtype="int64");
  %7901 = where(%7899, %7896, %7898);
  %7902 = scatter(%7900, meta[relay.Constant][1704], meta[relay.Constant][1705]);
  %7903 = dyn.strided_slice(%6850, %7901, %7902, meta[relay.Constant][1706], begin=None, end=None, strides=None, axes=None);
  %7904 = take(%7903, 0, axis=1);
  %7905 = shape_of(%7904, dtype="int64");
  %7906 = shape_of(%6851, dtype="int32");
  %7907 = cast_like(%7906, meta[relay.Constant][1708]);
  %7908 = slice_like(%7907, meta[relay.Constant][1708], axes=None);
  %7909 = add(meta[relay.Constant][1708], %7908);
  %7910 = where(meta[relay.Constant][1707], %7909, meta[relay.Constant][1708]);
  %7911 = greater_equal(%7910, %7908);
  %7912 = shape_of(%6851, dtype="int64");
  %7913 = where(%7911, %7908, %7910);
  %7914 = scatter(%7912, meta[relay.Constant][1709], meta[relay.Constant][1710]);
  %7915 = dyn.strided_slice(%6851, %7913, %7914, meta[relay.Constant][1711], begin=None, end=None, strides=None, axes=None);
  %7916 = take(%7915, 0, axis=1);
  %7917 = shape_of(%7916, dtype="int64");
  %7918 = shape_of(%6852, dtype="int32");
  %7919 = cast_like(%7918, meta[relay.Constant][1713]);
  %7920 = slice_like(%7919, meta[relay.Constant][1713], axes=None);
  %7921 = add(meta[relay.Constant][1713], %7920);
  %7922 = where(meta[relay.Constant][1712], %7921, meta[relay.Constant][1713]);
  %7923 = greater_equal(%7922, %7920);
  %7924 = shape_of(%6852, dtype="int64");
  %7925 = where(%7923, %7920, %7922);
  %7926 = scatter(%7924, meta[relay.Constant][1714], meta[relay.Constant][1715]);
  %7927 = dyn.strided_slice(%6852, %7925, %7926, meta[relay.Constant][1716], begin=None, end=None, strides=None, axes=None);
  %7928 = take(%7927, 0, axis=1);
  %7929 = shape_of(%7928, dtype="int64");
  %7930 = shape_of(%6853, dtype="int32");
  %7931 = cast_like(%7930, meta[relay.Constant][1718]);
  %7932 = slice_like(%7931, meta[relay.Constant][1718], axes=None);
  %7933 = add(meta[relay.Constant][1718], %7932);
  %7934 = where(meta[relay.Constant][1717], %7933, meta[relay.Constant][1718]);
  %7935 = greater_equal(%7934, %7932);
  %7936 = shape_of(%6853, dtype="int64");
  %7937 = where(%7935, %7932, %7934);
  %7938 = scatter(%7936, meta[relay.Constant][1719], meta[relay.Constant][1720]);
  %7939 = dyn.strided_slice(%6853, %7937, %7938, meta[relay.Constant][1721], begin=None, end=None, strides=None, axes=None);
  %7940 = take(%7939, 0, axis=1);
  %7941 = shape_of(%7940, dtype="int64");
  %7942 = shape_of(%6854, dtype="int32");
  %7943 = cast_like(%7942, meta[relay.Constant][1723]);
  %7944 = slice_like(%7943, meta[relay.Constant][1723], axes=None);
  %7945 = add(meta[relay.Constant][1723], %7944);
  %7946 = where(meta[relay.Constant][1722], %7945, meta[relay.Constant][1723]);
  %7947 = greater_equal(%7946, %7944);
  %7948 = shape_of(%6854, dtype="int64");
  %7949 = where(%7947, %7944, %7946);
  %7950 = scatter(%7948, meta[relay.Constant][1724], meta[relay.Constant][1725]);
  %7951 = dyn.strided_slice(%6854, %7949, %7950, meta[relay.Constant][1726], begin=None, end=None, strides=None, axes=None);
  %7952 = take(%7951, 0, axis=1);
  %7953 = shape_of(%7952, dtype="int64");
  %7954 = shape_of(%6855, dtype="int32");
  %7955 = cast_like(%7954, meta[relay.Constant][1728]);
  %7956 = slice_like(%7955, meta[relay.Constant][1728], axes=None);
  %7957 = add(meta[relay.Constant][1728], %7956);
  %7958 = where(meta[relay.Constant][1727], %7957, meta[relay.Constant][1728]);
  %7959 = greater_equal(%7958, %7956);
  %7960 = shape_of(%6855, dtype="int64");
  %7961 = where(%7959, %7956, %7958);
  %7962 = scatter(%7960, meta[relay.Constant][1729], meta[relay.Constant][1730]);
  %7963 = dyn.strided_slice(%6855, %7961, %7962, meta[relay.Constant][1731], begin=None, end=None, strides=None, axes=None);
  %7964 = take(%7963, 0, axis=1);
  %7965 = shape_of(%7964, dtype="int64");
  %7966 = shape_of(%6856, dtype="int32");
  %7967 = cast_like(%7966, meta[relay.Constant][1733]);
  %7968 = slice_like(%7967, meta[relay.Constant][1733], axes=None);
  %7969 = add(meta[relay.Constant][1733], %7968);
  %7970 = where(meta[relay.Constant][1732], %7969, meta[relay.Constant][1733]);
  %7971 = greater_equal(%7970, %7968);
  %7972 = shape_of(%6856, dtype="int64");
  %7973 = where(%7971, %7968, %7970);
  %7974 = scatter(%7972, meta[relay.Constant][1734], meta[relay.Constant][1735]);
  %7975 = dyn.strided_slice(%6856, %7973, %7974, meta[relay.Constant][1736], begin=None, end=None, strides=None, axes=None);
  %7976 = take(%7975, 0, axis=1);
  %7977 = shape_of(%7976, dtype="int64");
  %7978 = shape_of(%6857, dtype="int32");
  %7979 = cast_like(%7978, meta[relay.Constant][1738]);
  %7980 = slice_like(%7979, meta[relay.Constant][1738], axes=None);
  %7981 = add(meta[relay.Constant][1738], %7980);
  %7982 = where(meta[relay.Constant][1737], %7981, meta[relay.Constant][1738]);
  %7983 = greater_equal(%7982, %7980);
  %7984 = shape_of(%6857, dtype="int64");
  %7985 = where(%7983, %7980, %7982);
  %7986 = scatter(%7984, meta[relay.Constant][1739], meta[relay.Constant][1740]);
  %7987 = dyn.strided_slice(%6857, %7985, %7986, meta[relay.Constant][1741], begin=None, end=None, strides=None, axes=None);
  %7988 = take(%7987, 0, axis=1);
  %7989 = shape_of(%7988, dtype="int64");
  %7990 = shape_of(%6858, dtype="int32");
  %7991 = cast_like(%7990, meta[relay.Constant][1743]);
  %7992 = slice_like(%7991, meta[relay.Constant][1743], axes=None);
  %7993 = add(meta[relay.Constant][1743], %7992);
  %7994 = where(meta[relay.Constant][1742], %7993, meta[relay.Constant][1743]);
  %7995 = greater_equal(%7994, %7992);
  %7996 = shape_of(%6858, dtype="int64");
  %7997 = where(%7995, %7992, %7994);
  %7998 = scatter(%7996, meta[relay.Constant][1744], meta[relay.Constant][1745]);
  %7999 = dyn.strided_slice(%6858, %7997, %7998, meta[relay.Constant][1746], begin=None, end=None, strides=None, axes=None);
  %8000 = take(%7999, 0, axis=1);
  %8001 = shape_of(%8000, dtype="int64");
  %8002 = shape_of(%6859, dtype="int32");
  %8003 = cast_like(%8002, meta[relay.Constant][1748]);
  %8004 = slice_like(%8003, meta[relay.Constant][1748], axes=None);
  %8005 = add(meta[relay.Constant][1748], %8004);
  %8006 = where(meta[relay.Constant][1747], %8005, meta[relay.Constant][1748]);
  %8007 = greater_equal(%8006, %8004);
  %8008 = shape_of(%6859, dtype="int64");
  %8009 = where(%8007, %8004, %8006);
  %8010 = scatter(%8008, meta[relay.Constant][1749], meta[relay.Constant][1750]);
  %8011 = dyn.strided_slice(%6859, %8009, %8010, meta[relay.Constant][1751], begin=None, end=None, strides=None, axes=None);
  %8012 = take(%8011, 0, axis=1);
  %8013 = shape_of(%8012, dtype="int64");
  %8014 = shape_of(%6860, dtype="int32");
  %8015 = cast_like(%8014, meta[relay.Constant][1753]);
  %8016 = slice_like(%8015, meta[relay.Constant][1753], axes=None);
  %8017 = add(meta[relay.Constant][1753], %8016);
  %8018 = where(meta[relay.Constant][1752], %8017, meta[relay.Constant][1753]);
  %8019 = greater_equal(%8018, %8016);
  %8020 = shape_of(%6860, dtype="int64");
  %8021 = where(%8019, %8016, %8018);
  %8022 = scatter(%8020, meta[relay.Constant][1754], meta[relay.Constant][1755]);
  %8023 = dyn.strided_slice(%6860, %8021, %8022, meta[relay.Constant][1756], begin=None, end=None, strides=None, axes=None);
  %8024 = take(%8023, 0, axis=1);
  %8025 = shape_of(%8024, dtype="int64");
  %8026 = shape_of(%6861, dtype="int32");
  %8027 = cast_like(%8026, meta[relay.Constant][1758]);
  %8028 = slice_like(%8027, meta[relay.Constant][1758], axes=None);
  %8029 = add(meta[relay.Constant][1758], %8028);
  %8030 = where(meta[relay.Constant][1757], %8029, meta[relay.Constant][1758]);
  %8031 = greater_equal(%8030, %8028);
  %8032 = shape_of(%6861, dtype="int64");
  %8033 = where(%8031, %8028, %8030);
  %8034 = scatter(%8032, meta[relay.Constant][1759], meta[relay.Constant][1760]);
  %8035 = dyn.strided_slice(%6861, %8033, %8034, meta[relay.Constant][1761], begin=None, end=None, strides=None, axes=None);
  %8036 = take(%8035, 0, axis=1);
  %8037 = shape_of(%8036, dtype="int64");
  %8038 = shape_of(%6862, dtype="int32");
  %8039 = cast_like(%8038, meta[relay.Constant][1763]);
  %8040 = slice_like(%8039, meta[relay.Constant][1763], axes=None);
  %8041 = add(meta[relay.Constant][1763], %8040);
  %8042 = where(meta[relay.Constant][1762], %8041, meta[relay.Constant][1763]);
  %8043 = greater_equal(%8042, %8040);
  %8044 = shape_of(%6862, dtype="int64");
  %8045 = where(%8043, %8040, %8042);
  %8046 = scatter(%8044, meta[relay.Constant][1764], meta[relay.Constant][1765]);
  %8047 = dyn.strided_slice(%6862, %8045, %8046, meta[relay.Constant][1766], begin=None, end=None, strides=None, axes=None);
  %8048 = take(%8047, 0, axis=1);
  %8049 = shape_of(%8048, dtype="int64");
  %8050 = shape_of(%6863, dtype="int32");
  %8051 = cast_like(%8050, meta[relay.Constant][1768]);
  %8052 = slice_like(%8051, meta[relay.Constant][1768], axes=None);
  %8053 = add(meta[relay.Constant][1768], %8052);
  %8054 = where(meta[relay.Constant][1767], %8053, meta[relay.Constant][1768]);
  %8055 = greater_equal(%8054, %8052);
  %8056 = shape_of(%6863, dtype="int64");
  %8057 = where(%8055, %8052, %8054);
  %8058 = scatter(%8056, meta[relay.Constant][1769], meta[relay.Constant][1770]);
  %8059 = dyn.strided_slice(%6863, %8057, %8058, meta[relay.Constant][1771], begin=None, end=None, strides=None, axes=None);
  %8060 = take(%8059, 0, axis=1);
  %8061 = shape_of(%8060, dtype="int64");
  %8062 = shape_of(%6864, dtype="int32");
  %8063 = cast_like(%8062, meta[relay.Constant][1773]);
  %8064 = slice_like(%8063, meta[relay.Constant][1773], axes=None);
  %8065 = add(meta[relay.Constant][1773], %8064);
  %8066 = where(meta[relay.Constant][1772], %8065, meta[relay.Constant][1773]);
  %8067 = greater_equal(%8066, %8064);
  %8068 = shape_of(%6864, dtype="int64");
  %8069 = where(%8067, %8064, %8066);
  %8070 = scatter(%8068, meta[relay.Constant][1774], meta[relay.Constant][1775]);
  %8071 = dyn.strided_slice(%6864, %8069, %8070, meta[relay.Constant][1776], begin=None, end=None, strides=None, axes=None);
  %8072 = take(%8071, 0, axis=1);
  %8073 = shape_of(%8072, dtype="int64");
  %8074 = shape_of(%6865, dtype="int32");
  %8075 = cast_like(%8074, meta[relay.Constant][1778]);
  %8076 = slice_like(%8075, meta[relay.Constant][1778], axes=None);
  %8077 = add(meta[relay.Constant][1778], %8076);
  %8078 = where(meta[relay.Constant][1777], %8077, meta[relay.Constant][1778]);
  %8079 = greater_equal(%8078, %8076);
  %8080 = shape_of(%6865, dtype="int64");
  %8081 = where(%8079, %8076, %8078);
  %8082 = scatter(%8080, meta[relay.Constant][1779], meta[relay.Constant][1780]);
  %8083 = dyn.strided_slice(%6865, %8081, %8082, meta[relay.Constant][1781], begin=None, end=None, strides=None, axes=None);
  %8084 = take(%8083, 0, axis=1);
  %8085 = shape_of(%8084, dtype="int64");
  %8086 = shape_of(%6866, dtype="int32");
  %8087 = cast_like(%8086, meta[relay.Constant][1783]);
  %8088 = slice_like(%8087, meta[relay.Constant][1783], axes=None);
  %8089 = add(meta[relay.Constant][1783], %8088);
  %8090 = where(meta[relay.Constant][1782], %8089, meta[relay.Constant][1783]);
  %8091 = greater_equal(%8090, %8088);
  %8092 = shape_of(%6866, dtype="int64");
  %8093 = where(%8091, %8088, %8090);
  %8094 = scatter(%8092, meta[relay.Constant][1784], meta[relay.Constant][1785]);
  %8095 = dyn.strided_slice(%6866, %8093, %8094, meta[relay.Constant][1786], begin=None, end=None, strides=None, axes=None);
  %8096 = take(%8095, 0, axis=1);
  %8097 = shape_of(%8096, dtype="int64");
  %8098 = shape_of(%6867, dtype="int32");
  %8099 = cast_like(%8098, meta[relay.Constant][1788]);
  %8100 = slice_like(%8099, meta[relay.Constant][1788], axes=None);
  %8101 = add(meta[relay.Constant][1788], %8100);
  %8102 = where(meta[relay.Constant][1787], %8101, meta[relay.Constant][1788]);
  %8103 = greater_equal(%8102, %8100);
  %8104 = shape_of(%6867, dtype="int64");
  %8105 = where(%8103, %8100, %8102);
  %8106 = scatter(%8104, meta[relay.Constant][1789], meta[relay.Constant][1790]);
  %8107 = dyn.strided_slice(%6867, %8105, %8106, meta[relay.Constant][1791], begin=None, end=None, strides=None, axes=None);
  %8108 = take(%8107, 0, axis=1);
  %8109 = shape_of(%8108, dtype="int64");
  %8110 = shape_of(%6868, dtype="int32");
  %8111 = cast_like(%8110, meta[relay.Constant][1793]);
  %8112 = slice_like(%8111, meta[relay.Constant][1793], axes=None);
  %8113 = add(meta[relay.Constant][1793], %8112);
  %8114 = where(meta[relay.Constant][1792], %8113, meta[relay.Constant][1793]);
  %8115 = greater_equal(%8114, %8112);
  %8116 = shape_of(%6868, dtype="int64");
  %8117 = where(%8115, %8112, %8114);
  %8118 = scatter(%8116, meta[relay.Constant][1794], meta[relay.Constant][1795]);
  %8119 = dyn.strided_slice(%6868, %8117, %8118, meta[relay.Constant][1796], begin=None, end=None, strides=None, axes=None);
  %8120 = take(%8119, 0, axis=1);
  %8121 = shape_of(%8120, dtype="int64");
  %8122 = shape_of(%6869, dtype="int32");
  %8123 = cast_like(%8122, meta[relay.Constant][1798]);
  %8124 = slice_like(%8123, meta[relay.Constant][1798], axes=None);
  %8125 = add(meta[relay.Constant][1798], %8124);
  %8126 = where(meta[relay.Constant][1797], %8125, meta[relay.Constant][1798]);
  %8127 = greater_equal(%8126, %8124);
  %8128 = shape_of(%6869, dtype="int64");
  %8129 = where(%8127, %8124, %8126);
  %8130 = scatter(%8128, meta[relay.Constant][1799], meta[relay.Constant][1800]);
  %8131 = dyn.strided_slice(%6869, %8129, %8130, meta[relay.Constant][1801], begin=None, end=None, strides=None, axes=None);
  %8132 = take(%8131, 0, axis=1);
  %8133 = shape_of(%8132, dtype="int64");
  %8134 = shape_of(%6870, dtype="int32");
  %8135 = cast_like(%8134, meta[relay.Constant][1803]);
  %8136 = slice_like(%8135, meta[relay.Constant][1803], axes=None);
  %8137 = add(meta[relay.Constant][1803], %8136);
  %8138 = where(meta[relay.Constant][1802], %8137, meta[relay.Constant][1803]);
  %8139 = greater_equal(%8138, %8136);
  %8140 = shape_of(%6870, dtype="int64");
  %8141 = where(%8139, %8136, %8138);
  %8142 = scatter(%8140, meta[relay.Constant][1804], meta[relay.Constant][1805]);
  %8143 = dyn.strided_slice(%6870, %8141, %8142, meta[relay.Constant][1806], begin=None, end=None, strides=None, axes=None);
  %8144 = take(%8143, 0, axis=1);
  %8145 = shape_of(%8144, dtype="int64");
  %8146 = shape_of(%6871, dtype="int32");
  %8147 = cast_like(%8146, meta[relay.Constant][1808]);
  %8148 = slice_like(%8147, meta[relay.Constant][1808], axes=None);
  %8149 = add(meta[relay.Constant][1808], %8148);
  %8150 = where(meta[relay.Constant][1807], %8149, meta[relay.Constant][1808]);
  %8151 = greater_equal(%8150, %8148);
  %8152 = shape_of(%6871, dtype="int64");
  %8153 = where(%8151, %8148, %8150);
  %8154 = scatter(%8152, meta[relay.Constant][1809], meta[relay.Constant][1810]);
  %8155 = dyn.strided_slice(%6871, %8153, %8154, meta[relay.Constant][1811], begin=None, end=None, strides=None, axes=None);
  %8156 = take(%8155, 0, axis=1);
  %8157 = shape_of(%8156, dtype="int64");
  %8158 = shape_of(%6872, dtype="int32");
  %8159 = cast_like(%8158, meta[relay.Constant][1813]);
  %8160 = slice_like(%8159, meta[relay.Constant][1813], axes=None);
  %8161 = add(meta[relay.Constant][1813], %8160);
  %8162 = where(meta[relay.Constant][1812], %8161, meta[relay.Constant][1813]);
  %8163 = greater_equal(%8162, %8160);
  %8164 = shape_of(%6872, dtype="int64");
  %8165 = where(%8163, %8160, %8162);
  %8166 = scatter(%8164, meta[relay.Constant][1814], meta[relay.Constant][1815]);
  %8167 = dyn.strided_slice(%6872, %8165, %8166, meta[relay.Constant][1816], begin=None, end=None, strides=None, axes=None);
  %8168 = take(%8167, 0, axis=1);
  %8169 = shape_of(%8168, dtype="int64");
  %8170 = shape_of(%6873, dtype="int32");
  %8171 = cast_like(%8170, meta[relay.Constant][1818]);
  %8172 = slice_like(%8171, meta[relay.Constant][1818], axes=None);
  %8173 = add(meta[relay.Constant][1818], %8172);
  %8174 = where(meta[relay.Constant][1817], %8173, meta[relay.Constant][1818]);
  %8175 = greater_equal(%8174, %8172);
  %8176 = shape_of(%6873, dtype="int64");
  %8177 = where(%8175, %8172, %8174);
  %8178 = scatter(%8176, meta[relay.Constant][1819], meta[relay.Constant][1820]);
  %8179 = dyn.strided_slice(%6873, %8177, %8178, meta[relay.Constant][1821], begin=None, end=None, strides=None, axes=None);
  %8180 = take(%8179, 0, axis=1);
  %8181 = shape_of(%8180, dtype="int64");
  %8182 = shape_of(%6874, dtype="int32");
  %8183 = cast_like(%8182, meta[relay.Constant][1823]);
  %8184 = slice_like(%8183, meta[relay.Constant][1823], axes=None);
  %8185 = add(meta[relay.Constant][1823], %8184);
  %8186 = where(meta[relay.Constant][1822], %8185, meta[relay.Constant][1823]);
  %8187 = greater_equal(%8186, %8184);
  %8188 = shape_of(%6874, dtype="int64");
  %8189 = where(%8187, %8184, %8186);
  %8190 = scatter(%8188, meta[relay.Constant][1824], meta[relay.Constant][1825]);
  %8191 = dyn.strided_slice(%6874, %8189, %8190, meta[relay.Constant][1826], begin=None, end=None, strides=None, axes=None);
  %8192 = take(%8191, 0, axis=1);
  %8193 = shape_of(%8192, dtype="int64");
  %8194 = shape_of(%6875, dtype="int32");
  %8195 = cast_like(%8194, meta[relay.Constant][1828]);
  %8196 = slice_like(%8195, meta[relay.Constant][1828], axes=None);
  %8197 = add(meta[relay.Constant][1828], %8196);
  %8198 = where(meta[relay.Constant][1827], %8197, meta[relay.Constant][1828]);
  %8199 = greater_equal(%8198, %8196);
  %8200 = shape_of(%6875, dtype="int64");
  %8201 = where(%8199, %8196, %8198);
  %8202 = scatter(%8200, meta[relay.Constant][1829], meta[relay.Constant][1830]);
  %8203 = dyn.strided_slice(%6875, %8201, %8202, meta[relay.Constant][1831], begin=None, end=None, strides=None, axes=None);
  %8204 = take(%8203, 0, axis=1);
  %8205 = shape_of(%8204, dtype="int64");
  %8206 = shape_of(%6876, dtype="int32");
  %8207 = cast_like(%8206, meta[relay.Constant][1833]);
  %8208 = slice_like(%8207, meta[relay.Constant][1833], axes=None);
  %8209 = add(meta[relay.Constant][1833], %8208);
  %8210 = where(meta[relay.Constant][1832], %8209, meta[relay.Constant][1833]);
  %8211 = greater_equal(%8210, %8208);
  %8212 = shape_of(%6876, dtype="int64");
  %8213 = where(%8211, %8208, %8210);
  %8214 = scatter(%8212, meta[relay.Constant][1834], meta[relay.Constant][1835]);
  %8215 = dyn.strided_slice(%6876, %8213, %8214, meta[relay.Constant][1836], begin=None, end=None, strides=None, axes=None);
  %8216 = take(%8215, 0, axis=1);
  %8217 = shape_of(%8216, dtype="int64");
  %8218 = shape_of(%6877, dtype="int32");
  %8219 = cast_like(%8218, meta[relay.Constant][1838]);
  %8220 = slice_like(%8219, meta[relay.Constant][1838], axes=None);
  %8221 = add(meta[relay.Constant][1838], %8220);
  %8222 = where(meta[relay.Constant][1837], %8221, meta[relay.Constant][1838]);
  %8223 = greater_equal(%8222, %8220);
  %8224 = shape_of(%6877, dtype="int64");
  %8225 = where(%8223, %8220, %8222);
  %8226 = scatter(%8224, meta[relay.Constant][1839], meta[relay.Constant][1840]);
  %8227 = dyn.strided_slice(%6877, %8225, %8226, meta[relay.Constant][1841], begin=None, end=None, strides=None, axes=None);
  %8228 = take(%8227, 0, axis=1);
  %8229 = shape_of(%8228, dtype="int64");
  %8230 = shape_of(%6878, dtype="int32");
  %8231 = cast_like(%8230, meta[relay.Constant][1843]);
  %8232 = slice_like(%8231, meta[relay.Constant][1843], axes=None);
  %8233 = add(meta[relay.Constant][1843], %8232);
  %8234 = where(meta[relay.Constant][1842], %8233, meta[relay.Constant][1843]);
  %8235 = greater_equal(%8234, %8232);
  %8236 = shape_of(%6878, dtype="int64");
  %8237 = where(%8235, %8232, %8234);
  %8238 = scatter(%8236, meta[relay.Constant][1844], meta[relay.Constant][1845]);
  %8239 = dyn.strided_slice(%6878, %8237, %8238, meta[relay.Constant][1846], begin=None, end=None, strides=None, axes=None);
  %8240 = take(%8239, 0, axis=1);
  %8241 = shape_of(%8240, dtype="int64");
  %8242 = shape_of(%6879, dtype="int32");
  %8243 = cast_like(%8242, meta[relay.Constant][1848]);
  %8244 = slice_like(%8243, meta[relay.Constant][1848], axes=None);
  %8245 = add(meta[relay.Constant][1848], %8244);
  %8246 = where(meta[relay.Constant][1847], %8245, meta[relay.Constant][1848]);
  %8247 = greater_equal(%8246, %8244);
  %8248 = shape_of(%6879, dtype="int64");
  %8249 = where(%8247, %8244, %8246);
  %8250 = scatter(%8248, meta[relay.Constant][1849], meta[relay.Constant][1850]);
  %8251 = dyn.strided_slice(%6879, %8249, %8250, meta[relay.Constant][1851], begin=None, end=None, strides=None, axes=None);
  %8252 = take(%8251, 0, axis=1);
  %8253 = shape_of(%8252, dtype="int64");
  %8254 = shape_of(%6880, dtype="int32");
  %8255 = cast_like(%8254, meta[relay.Constant][1853]);
  %8256 = slice_like(%8255, meta[relay.Constant][1853], axes=None);
  %8257 = add(meta[relay.Constant][1853], %8256);
  %8258 = where(meta[relay.Constant][1852], %8257, meta[relay.Constant][1853]);
  %8259 = greater_equal(%8258, %8256);
  %8260 = shape_of(%6880, dtype="int64");
  %8261 = where(%8259, %8256, %8258);
  %8262 = scatter(%8260, meta[relay.Constant][1854], meta[relay.Constant][1855]);
  %8263 = dyn.strided_slice(%6880, %8261, %8262, meta[relay.Constant][1856], begin=None, end=None, strides=None, axes=None);
  %8264 = take(%8263, 0, axis=1);
  %8265 = shape_of(%8264, dtype="int64");
  %8266 = shape_of(%6881, dtype="int32");
  %8267 = cast_like(%8266, meta[relay.Constant][1858]);
  %8268 = slice_like(%8267, meta[relay.Constant][1858], axes=None);
  %8269 = add(meta[relay.Constant][1858], %8268);
  %8270 = where(meta[relay.Constant][1857], %8269, meta[relay.Constant][1858]);
  %8271 = greater_equal(%8270, %8268);
  %8272 = shape_of(%6881, dtype="int64");
  %8273 = where(%8271, %8268, %8270);
  %8274 = scatter(%8272, meta[relay.Constant][1859], meta[relay.Constant][1860]);
  %8275 = dyn.strided_slice(%6881, %8273, %8274, meta[relay.Constant][1861], begin=None, end=None, strides=None, axes=None);
  %8276 = take(%8275, 0, axis=1);
  %8277 = shape_of(%8276, dtype="int64");
  %8278 = shape_of(%6882, dtype="int32");
  %8279 = cast_like(%8278, meta[relay.Constant][1863]);
  %8280 = slice_like(%8279, meta[relay.Constant][1863], axes=None);
  %8281 = add(meta[relay.Constant][1863], %8280);
  %8282 = where(meta[relay.Constant][1862], %8281, meta[relay.Constant][1863]);
  %8283 = greater_equal(%8282, %8280);
  %8284 = shape_of(%6882, dtype="int64");
  %8285 = where(%8283, %8280, %8282);
  %8286 = scatter(%8284, meta[relay.Constant][1864], meta[relay.Constant][1865]);
  %8287 = dyn.strided_slice(%6882, %8285, %8286, meta[relay.Constant][1866], begin=None, end=None, strides=None, axes=None);
  %8288 = take(%8287, 0, axis=1);
  %8289 = shape_of(%8288, dtype="int64");
  %8290 = shape_of(%6883, dtype="int32");
  %8291 = cast_like(%8290, meta[relay.Constant][1868]);
  %8292 = slice_like(%8291, meta[relay.Constant][1868], axes=None);
  %8293 = add(meta[relay.Constant][1868], %8292);
  %8294 = where(meta[relay.Constant][1867], %8293, meta[relay.Constant][1868]);
  %8295 = greater_equal(%8294, %8292);
  %8296 = shape_of(%6883, dtype="int64");
  %8297 = where(%8295, %8292, %8294);
  %8298 = scatter(%8296, meta[relay.Constant][1869], meta[relay.Constant][1870]);
  %8299 = dyn.strided_slice(%6883, %8297, %8298, meta[relay.Constant][1871], begin=None, end=None, strides=None, axes=None);
  %8300 = take(%8299, 0, axis=1);
  %8301 = shape_of(%8300, dtype="int64");
  %8302 = shape_of(%6884, dtype="int32");
  %8303 = cast_like(%8302, meta[relay.Constant][1873]);
  %8304 = slice_like(%8303, meta[relay.Constant][1873], axes=None);
  %8305 = add(meta[relay.Constant][1873], %8304);
  %8306 = where(meta[relay.Constant][1872], %8305, meta[relay.Constant][1873]);
  %8307 = greater_equal(%8306, %8304);
  %8308 = shape_of(%6884, dtype="int64");
  %8309 = where(%8307, %8304, %8306);
  %8310 = scatter(%8308, meta[relay.Constant][1874], meta[relay.Constant][1875]);
  %8311 = dyn.strided_slice(%6884, %8309, %8310, meta[relay.Constant][1876], begin=None, end=None, strides=None, axes=None);
  %8312 = take(%8311, 0, axis=1);
  %8313 = shape_of(%8312, dtype="int64");
  %8314 = shape_of(%6885, dtype="int32");
  %8315 = cast_like(%8314, meta[relay.Constant][1878]);
  %8316 = slice_like(%8315, meta[relay.Constant][1878], axes=None);
  %8317 = add(meta[relay.Constant][1878], %8316);
  %8318 = where(meta[relay.Constant][1877], %8317, meta[relay.Constant][1878]);
  %8319 = greater_equal(%8318, %8316);
  %8320 = shape_of(%6885, dtype="int64");
  %8321 = where(%8319, %8316, %8318);
  %8322 = scatter(%8320, meta[relay.Constant][1879], meta[relay.Constant][1880]);
  %8323 = dyn.strided_slice(%6885, %8321, %8322, meta[relay.Constant][1881], begin=None, end=None, strides=None, axes=None);
  %8324 = take(%8323, 0, axis=1);
  %8325 = shape_of(%8324, dtype="int64");
  %8326 = shape_of(%6886, dtype="int32");
  %8327 = cast_like(%8326, meta[relay.Constant][1883]);
  %8328 = slice_like(%8327, meta[relay.Constant][1883], axes=None);
  %8329 = add(meta[relay.Constant][1883], %8328);
  %8330 = where(meta[relay.Constant][1882], %8329, meta[relay.Constant][1883]);
  %8331 = greater_equal(%8330, %8328);
  %8332 = shape_of(%6886, dtype="int64");
  %8333 = where(%8331, %8328, %8330);
  %8334 = scatter(%8332, meta[relay.Constant][1884], meta[relay.Constant][1885]);
  %8335 = dyn.strided_slice(%6886, %8333, %8334, meta[relay.Constant][1886], begin=None, end=None, strides=None, axes=None);
  %8336 = take(%8335, 0, axis=1);
  %8337 = shape_of(%8336, dtype="int64");
  %8338 = shape_of(%6887, dtype="int32");
  %8339 = cast_like(%8338, meta[relay.Constant][1888]);
  %8340 = slice_like(%8339, meta[relay.Constant][1888], axes=None);
  %8341 = add(meta[relay.Constant][1888], %8340);
  %8342 = where(meta[relay.Constant][1887], %8341, meta[relay.Constant][1888]);
  %8343 = greater_equal(%8342, %8340);
  %8344 = shape_of(%6887, dtype="int64");
  %8345 = where(%8343, %8340, %8342);
  %8346 = scatter(%8344, meta[relay.Constant][1889], meta[relay.Constant][1890]);
  %8347 = dyn.strided_slice(%6887, %8345, %8346, meta[relay.Constant][1891], begin=None, end=None, strides=None, axes=None);
  %8348 = take(%8347, 0, axis=1);
  %8349 = shape_of(%8348, dtype="int64");
  %8350 = shape_of(%6888, dtype="int32");
  %8351 = cast_like(%8350, meta[relay.Constant][1893]);
  %8352 = slice_like(%8351, meta[relay.Constant][1893], axes=None);
  %8353 = add(meta[relay.Constant][1893], %8352);
  %8354 = where(meta[relay.Constant][1892], %8353, meta[relay.Constant][1893]);
  %8355 = greater_equal(%8354, %8352);
  %8356 = shape_of(%6888, dtype="int64");
  %8357 = where(%8355, %8352, %8354);
  %8358 = scatter(%8356, meta[relay.Constant][1894], meta[relay.Constant][1895]);
  %8359 = dyn.strided_slice(%6888, %8357, %8358, meta[relay.Constant][1896], begin=None, end=None, strides=None, axes=None);
  %8360 = take(%8359, 0, axis=1);
  %8361 = shape_of(%8360, dtype="int64");
  %8362 = shape_of(%6889, dtype="int32");
  %8363 = cast_like(%8362, meta[relay.Constant][1898]);
  %8364 = slice_like(%8363, meta[relay.Constant][1898], axes=None);
  %8365 = add(meta[relay.Constant][1898], %8364);
  %8366 = where(meta[relay.Constant][1897], %8365, meta[relay.Constant][1898]);
  %8367 = greater_equal(%8366, %8364);
  %8368 = shape_of(%6889, dtype="int64");
  %8369 = where(%8367, %8364, %8366);
  %8370 = scatter(%8368, meta[relay.Constant][1899], meta[relay.Constant][1900]);
  %8371 = dyn.strided_slice(%6889, %8369, %8370, meta[relay.Constant][1901], begin=None, end=None, strides=None, axes=None);
  %8372 = take(%8371, 0, axis=1);
  %8373 = shape_of(%8372, dtype="int64");
  %8374 = shape_of(%6890, dtype="int32");
  %8375 = cast_like(%8374, meta[relay.Constant][1903]);
  %8376 = slice_like(%8375, meta[relay.Constant][1903], axes=None);
  %8377 = add(meta[relay.Constant][1903], %8376);
  %8378 = where(meta[relay.Constant][1902], %8377, meta[relay.Constant][1903]);
  %8379 = greater_equal(%8378, %8376);
  %8380 = shape_of(%6890, dtype="int64");
  %8381 = where(%8379, %8376, %8378);
  %8382 = scatter(%8380, meta[relay.Constant][1904], meta[relay.Constant][1905]);
  %8383 = dyn.strided_slice(%6890, %8381, %8382, meta[relay.Constant][1906], begin=None, end=None, strides=None, axes=None);
  %8384 = take(%8383, 0, axis=1);
  %8385 = shape_of(%8384, dtype="int64");
  %8386 = shape_of(%6891, dtype="int32");
  %8387 = cast_like(%8386, meta[relay.Constant][1908]);
  %8388 = slice_like(%8387, meta[relay.Constant][1908], axes=None);
  %8389 = add(meta[relay.Constant][1908], %8388);
  %8390 = where(meta[relay.Constant][1907], %8389, meta[relay.Constant][1908]);
  %8391 = greater_equal(%8390, %8388);
  %8392 = shape_of(%6891, dtype="int64");
  %8393 = where(%8391, %8388, %8390);
  %8394 = scatter(%8392, meta[relay.Constant][1909], meta[relay.Constant][1910]);
  %8395 = dyn.strided_slice(%6891, %8393, %8394, meta[relay.Constant][1911], begin=None, end=None, strides=None, axes=None);
  %8396 = take(%8395, 0, axis=1);
  %8397 = shape_of(%8396, dtype="int64");
  %8398 = shape_of(%6892, dtype="int32");
  %8399 = cast_like(%8398, meta[relay.Constant][1913]);
  %8400 = slice_like(%8399, meta[relay.Constant][1913], axes=None);
  %8401 = add(meta[relay.Constant][1913], %8400);
  %8402 = where(meta[relay.Constant][1912], %8401, meta[relay.Constant][1913]);
  %8403 = greater_equal(%8402, %8400);
  %8404 = shape_of(%6892, dtype="int64");
  %8405 = where(%8403, %8400, %8402);
  %8406 = scatter(%8404, meta[relay.Constant][1914], meta[relay.Constant][1915]);
  %8407 = dyn.strided_slice(%6892, %8405, %8406, meta[relay.Constant][1916], begin=None, end=None, strides=None, axes=None);
  %8408 = take(%8407, 0, axis=1);
  %8409 = shape_of(%8408, dtype="int64");
  %8410 = shape_of(%6893, dtype="int32");
  %8411 = cast_like(%8410, meta[relay.Constant][1918]);
  %8412 = slice_like(%8411, meta[relay.Constant][1918], axes=None);
  %8413 = add(meta[relay.Constant][1918], %8412);
  %8414 = where(meta[relay.Constant][1917], %8413, meta[relay.Constant][1918]);
  %8415 = greater_equal(%8414, %8412);
  %8416 = shape_of(%6893, dtype="int64");
  %8417 = where(%8415, %8412, %8414);
  %8418 = scatter(%8416, meta[relay.Constant][1919], meta[relay.Constant][1920]);
  %8419 = dyn.strided_slice(%6893, %8417, %8418, meta[relay.Constant][1921], begin=None, end=None, strides=None, axes=None);
  %8420 = take(%8419, 0, axis=1);
  %8421 = shape_of(%8420, dtype="int64");
  %8422 = shape_of(%6894, dtype="int32");
  %8423 = cast_like(%8422, meta[relay.Constant][1923]);
  %8424 = slice_like(%8423, meta[relay.Constant][1923], axes=None);
  %8425 = add(meta[relay.Constant][1923], %8424);
  %8426 = where(meta[relay.Constant][1922], %8425, meta[relay.Constant][1923]);
  %8427 = greater_equal(%8426, %8424);
  %8428 = shape_of(%6894, dtype="int64");
  %8429 = where(%8427, %8424, %8426);
  %8430 = scatter(%8428, meta[relay.Constant][1924], meta[relay.Constant][1925]);
  %8431 = dyn.strided_slice(%6894, %8429, %8430, meta[relay.Constant][1926], begin=None, end=None, strides=None, axes=None);
  %8432 = take(%8431, 0, axis=1);
  %8433 = shape_of(%8432, dtype="int64");
  %8434 = dyn.full(1, %7485, shape=None, dtype="int64");
  %8435 = dyn.full(2, %7497, shape=None, dtype="int64");
  %8436 = dyn.full(3, %7509, shape=None, dtype="int64");
  %8437 = dyn.full(4, %7521, shape=None, dtype="int64");
  %8438 = dyn.full(5, %7533, shape=None, dtype="int64");
  %8439 = dyn.full(6, %7545, shape=None, dtype="int64");
  %8440 = dyn.full(7, %7557, shape=None, dtype="int64");
  %8441 = dyn.full(8, %7569, shape=None, dtype="int64");
  %8442 = dyn.full(9, %7581, shape=None, dtype="int64");
  %8443 = dyn.full(10, %7593, shape=None, dtype="int64");
  %8444 = dyn.full(11, %7605, shape=None, dtype="int64");
  %8445 = dyn.full(12, %7617, shape=None, dtype="int64");
  %8446 = dyn.full(13, %7629, shape=None, dtype="int64");
  %8447 = dyn.full(14, %7641, shape=None, dtype="int64");
  %8448 = dyn.full(15, %7653, shape=None, dtype="int64");
  %8449 = dyn.full(16, %7665, shape=None, dtype="int64");
  %8450 = dyn.full(17, %7677, shape=None, dtype="int64");
  %8451 = dyn.full(18, %7689, shape=None, dtype="int64");
  %8452 = dyn.full(19, %7701, shape=None, dtype="int64");
  %8453 = dyn.full(20, %7713, shape=None, dtype="int64");
  %8454 = dyn.full(21, %7725, shape=None, dtype="int64");
  %8455 = dyn.full(22, %7737, shape=None, dtype="int64");
  %8456 = dyn.full(23, %7749, shape=None, dtype="int64");
  %8457 = dyn.full(24, %7761, shape=None, dtype="int64");
  %8458 = dyn.full(25, %7773, shape=None, dtype="int64");
  %8459 = dyn.full(26, %7785, shape=None, dtype="int64");
  %8460 = dyn.full(27, %7797, shape=None, dtype="int64");
  %8461 = dyn.full(28, %7809, shape=None, dtype="int64");
  %8462 = dyn.full(29, %7821, shape=None, dtype="int64");
  %8463 = dyn.full(30, %7833, shape=None, dtype="int64");
  %8464 = dyn.full(31, %7845, shape=None, dtype="int64");
  %8465 = dyn.full(32, %7857, shape=None, dtype="int64");
  %8466 = dyn.full(33, %7869, shape=None, dtype="int64");
  %8467 = dyn.full(34, %7881, shape=None, dtype="int64");
  %8468 = dyn.full(35, %7893, shape=None, dtype="int64");
  %8469 = dyn.full(36, %7905, shape=None, dtype="int64");
  %8470 = dyn.full(37, %7917, shape=None, dtype="int64");
  %8471 = dyn.full(38, %7929, shape=None, dtype="int64");
  %8472 = dyn.full(39, %7941, shape=None, dtype="int64");
  %8473 = dyn.full(40, %7953, shape=None, dtype="int64");
  %8474 = dyn.full(41, %7965, shape=None, dtype="int64");
  %8475 = dyn.full(42, %7977, shape=None, dtype="int64");
  %8476 = dyn.full(43, %7989, shape=None, dtype="int64");
  %8477 = dyn.full(44, %8001, shape=None, dtype="int64");
  %8478 = dyn.full(45, %8013, shape=None, dtype="int64");
  %8479 = dyn.full(46, %8025, shape=None, dtype="int64");
  %8480 = dyn.full(47, %8037, shape=None, dtype="int64");
  %8481 = dyn.full(48, %8049, shape=None, dtype="int64");
  %8482 = dyn.full(49, %8061, shape=None, dtype="int64");
  %8483 = dyn.full(50, %8073, shape=None, dtype="int64");
  %8484 = dyn.full(51, %8085, shape=None, dtype="int64");
  %8485 = dyn.full(52, %8097, shape=None, dtype="int64");
  %8486 = dyn.full(53, %8109, shape=None, dtype="int64");
  %8487 = dyn.full(54, %8121, shape=None, dtype="int64");
  %8488 = dyn.full(55, %8133, shape=None, dtype="int64");
  %8489 = dyn.full(56, %8145, shape=None, dtype="int64");
  %8490 = dyn.full(57, %8157, shape=None, dtype="int64");
  %8491 = dyn.full(58, %8169, shape=None, dtype="int64");
  %8492 = dyn.full(59, %8181, shape=None, dtype="int64");
  %8493 = dyn.full(60, %8193, shape=None, dtype="int64");
  %8494 = dyn.full(61, %8205, shape=None, dtype="int64");
  %8495 = dyn.full(62, %8217, shape=None, dtype="int64");
  %8496 = dyn.full(63, %8229, shape=None, dtype="int64");
  %8497 = dyn.full(64, %8241, shape=None, dtype="int64");
  %8498 = dyn.full(65, %8253, shape=None, dtype="int64");
  %8499 = dyn.full(66, %8265, shape=None, dtype="int64");
  %8500 = dyn.full(67, %8277, shape=None, dtype="int64");
  %8501 = dyn.full(68, %8289, shape=None, dtype="int64");
  %8502 = dyn.full(69, %8301, shape=None, dtype="int64");
  %8503 = dyn.full(70, %8313, shape=None, dtype="int64");
  %8504 = dyn.full(71, %8325, shape=None, dtype="int64");
  %8505 = dyn.full(72, %8337, shape=None, dtype="int64");
  %8506 = dyn.full(73, %8349, shape=None, dtype="int64");
  %8507 = dyn.full(74, %8361, shape=None, dtype="int64");
  %8508 = dyn.full(75, %8373, shape=None, dtype="int64");
  %8509 = dyn.full(76, %8385, shape=None, dtype="int64");
  %8510 = dyn.full(77, %8397, shape=None, dtype="int64");
  %8511 = dyn.full(78, %8409, shape=None, dtype="int64");
  %8512 = dyn.full(79, %8421, shape=None, dtype="int64");
  %8513 = dyn.full(80, %8433, shape=None, dtype="int64");
  %8514 = (%8434, %8435, %8436, %8437, %8438, %8439, %8440, %8441, %8442, %8443, %8444, %8445, %8446, %8447, %8448, %8449, %8450, %8451, %8452, %8453, %8454, %8455, %8456, %8457, %8458, %8459, %8460, %8461, %8462, %8463, %8464, %8465, %8466, %8467, %8468, %8469, %8470, %8471, %8472, %8473, %8474, %8475, %8476, %8477, %8478, %8479, %8480, %8481, %8482, %8483, %8484, %8485, %8486, %8487, %8488, %8489, %8490, %8491, %8492, %8493, %8494, %8495, %8496, %8497, %8498, %8499, %8500, %8501, %8502, %8503, %8504, %8505, %8506, %8507, %8508, %8509, %8510, %8511, %8512, %8513);
  %8515 = cast(%7467, dtype="int64");
  %8516 = concatenate(%8514);
  %8517 = shape_of(%8516, dtype="int64");
  %8518 = take(%8517, 0);
  %8519 = less(%8515, 0);
  %8520 = add(%8515, %8518);
  %8521 = where(%8519, %8520, %8515);
  %8522 = cast(%8515, dtype="int64");
  %8523 = shape_of(%7457, dtype="int64");
  %8524 = take(%8523, 0);
  %8525 = less(%8522, 0);
  %8526 = add(%8522, %8524);
  %8527 = where(%8525, %8526, %8522);
  %8528 = take(%7468, %7473, axis=0);
  %8529 = take(%8516, %8521, axis=0);
  %8530 = take(%7457, %8527, axis=0);
  (%8528, %8529, %8530)
}

